// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class QotGetOptionChain {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_DataFilter__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter, global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.Builder> internal__static_Qot_GetOptionChain_DataFilter__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.C2S, global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.Builder> internal__static_Qot_GetOptionChain_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_OptionItem__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.Builder> internal__static_Qot_GetOptionChain_OptionItem__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_OptionChain__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.Builder> internal__static_Qot_GetOptionChain_OptionChain__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.S2C, global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.Builder> internal__static_Qot_GetOptionChain_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.Request, global::Futu.OpenApi.Pb.QotGetOptionChain.Request.Builder> internal__static_Qot_GetOptionChain_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.Response, global::Futu.OpenApi.Pb.QotGetOptionChain.Response.Builder> internal__static_Qot_GetOptionChain_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static QotGetOptionChain() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhRb3RfR2V0T3B0aW9uQ2hhaW4ucHJvdG8SElFvdF9HZXRPcHRpb25DaGFp", 
            "bhoMQ29tbW9uLnByb3RvGhBRb3RfQ29tbW9uLnByb3RvIuQECgpEYXRhRmls", 
            "dGVyEjIKFGltcGxpZWRWb2xhdGlsaXR5TWluGAEgASgBUhRpbXBsaWVkVm9s", 
            "YXRpbGl0eU1pbhIyChRpbXBsaWVkVm9sYXRpbGl0eU1heBgCIAEoAVIUaW1w", 
            "bGllZFZvbGF0aWxpdHlNYXgSGgoIZGVsdGFNaW4YAyABKAFSCGRlbHRhTWlu", 
            "EhoKCGRlbHRhTWF4GAQgASgBUghkZWx0YU1heBIaCghnYW1tYU1pbhgFIAEo", 
            "AVIIZ2FtbWFNaW4SGgoIZ2FtbWFNYXgYBiABKAFSCGdhbW1hTWF4EhgKB3Zl", 
            "Z2FNaW4YByABKAFSB3ZlZ2FNaW4SGAoHdmVnYU1heBgIIAEoAVIHdmVnYU1h", 
            "eBIaCgh0aGV0YU1pbhgJIAEoAVIIdGhldGFNaW4SGgoIdGhldGFNYXgYCiAB", 
            "KAFSCHRoZXRhTWF4EhYKBnJob01pbhgLIAEoAVIGcmhvTWluEhYKBnJob01h", 
            "eBgMIAEoAVIGcmhvTWF4Ei4KEm5ldE9wZW5JbnRlcmVzdE1pbhgNIAEoAVIS", 
            "bmV0T3BlbkludGVyZXN0TWluEi4KEm5ldE9wZW5JbnRlcmVzdE1heBgOIAEo", 
            "AVISbmV0T3BlbkludGVyZXN0TWF4EigKD29wZW5JbnRlcmVzdE1pbhgPIAEo", 
            "AVIPb3BlbkludGVyZXN0TWluEigKD29wZW5JbnRlcmVzdE1heBgQIAEoAVIP", 
            "b3BlbkludGVyZXN0TWF4EhYKBnZvbE1pbhgRIAEoAVIGdm9sTWluEhYKBnZv", 
            "bE1heBgSIAEoAVIGdm9sTWF4IoUCCgNDMlMSKgoFb3duZXIYASACKAsyFC5R", 
            "b3RfQ29tbW9uLlNlY3VyaXR5UgVvd25lchIoCg9pbmRleE9wdGlvblR5cGUY", 
            "BiABKAVSD2luZGV4T3B0aW9uVHlwZRISCgR0eXBlGAIgASgFUgR0eXBlEhwK", 
            "CWNvbmRpdGlvbhgDIAEoBVIJY29uZGl0aW9uEhwKCWJlZ2luVGltZRgEIAIo", 
            "CVIJYmVnaW5UaW1lEhgKB2VuZFRpbWUYBSACKAlSB2VuZFRpbWUSPgoKZGF0", 
            "YUZpbHRlchgHIAEoCzIeLlFvdF9HZXRPcHRpb25DaGFpbi5EYXRhRmlsdGVy", 
            "UgpkYXRhRmlsdGVyInIKCk9wdGlvbkl0ZW0SMgoEY2FsbBgBIAEoCzIeLlFv", 
            "dF9Db21tb24uU2VjdXJpdHlTdGF0aWNJbmZvUgRjYWxsEjAKA3B1dBgCIAEo", 
            "CzIeLlFvdF9Db21tb24uU2VjdXJpdHlTdGF0aWNJbmZvUgNwdXQijwEKC09w", 
            "dGlvbkNoYWluEh4KCnN0cmlrZVRpbWUYASACKAlSCnN0cmlrZVRpbWUSNgoG", 
            "b3B0aW9uGAIgAygLMh4uUW90X0dldE9wdGlvbkNoYWluLk9wdGlvbkl0ZW1S", 
            "Bm9wdGlvbhIoCg9zdHJpa2VUaW1lc3RhbXAYAyABKAFSD3N0cmlrZVRpbWVz", 
            "dGFtcCJICgNTMkMSQQoLb3B0aW9uQ2hhaW4YASADKAsyHy5Rb3RfR2V0T3B0", 
            "aW9uQ2hhaW4uT3B0aW9uQ2hhaW5SC29wdGlvbkNoYWluIjQKB1JlcXVlc3QS", 
            "KQoDYzJzGAEgAigLMhcuUW90X0dldE9wdGlvbkNoYWluLkMyU1IDYzJzIocB", 
            "CghSZXNwb25zZRIeCgdyZXRUeXBlGAEgAigFOgQtNDAwUgdyZXRUeXBlEhYK", 
            "BnJldE1zZxgCIAEoCVIGcmV0TXNnEhgKB2VyckNvZGUYAyABKAVSB2VyckNv", 
            "ZGUSKQoDczJjGAQgASgLMhcuUW90X0dldE9wdGlvbkNoYWluLlMyQ1IDczJj", 
            "KmIKDk9wdGlvbkNvbmRUeXBlEhkKFU9wdGlvbkNvbmRUeXBlX1Vua25vdxAA", 
            "EhkKFU9wdGlvbkNvbmRUeXBlX1dpdGhJbhABEhoKFk9wdGlvbkNvbmRUeXBl", 
            "X091dHNpZGUQAkJIChNjb20uZnV0dS5vcGVuYXBpLnBiWjFnaXRodWIuY29t", 
          "L2Z1dHVvcGVuL2Z0YXBpNGdvL3BiL3FvdGdldG9wdGlvbmNoYWlu"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Qot_GetOptionChain_DataFilter__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Qot_GetOptionChain_DataFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter, global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.Builder>(internal__static_Qot_GetOptionChain_DataFilter__Descriptor,
                new string[] { "ImpliedVolatilityMin", "ImpliedVolatilityMax", "DeltaMin", "DeltaMax", "GammaMin", "GammaMax", "VegaMin", "VegaMax", "ThetaMin", "ThetaMax", "RhoMin", "RhoMax", "NetOpenInterestMin", "NetOpenInterestMax", "OpenInterestMin", "OpenInterestMax", "VolMin", "VolMax", });
        internal__static_Qot_GetOptionChain_C2S__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Qot_GetOptionChain_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.C2S, global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.Builder>(internal__static_Qot_GetOptionChain_C2S__Descriptor,
                new string[] { "Owner", "IndexOptionType", "Type", "Condition", "BeginTime", "EndTime", "DataFilter", });
        internal__static_Qot_GetOptionChain_OptionItem__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Qot_GetOptionChain_OptionItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.Builder>(internal__static_Qot_GetOptionChain_OptionItem__Descriptor,
                new string[] { "Call", "Put", });
        internal__static_Qot_GetOptionChain_OptionChain__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Qot_GetOptionChain_OptionChain__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.Builder>(internal__static_Qot_GetOptionChain_OptionChain__Descriptor,
                new string[] { "StrikeTime", "Option", "StrikeTimestamp", });
        internal__static_Qot_GetOptionChain_S2C__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Qot_GetOptionChain_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.S2C, global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.Builder>(internal__static_Qot_GetOptionChain_S2C__Descriptor,
                new string[] { "OptionChain", });
        internal__static_Qot_GetOptionChain_Request__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Qot_GetOptionChain_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.Request, global::Futu.OpenApi.Pb.QotGetOptionChain.Request.Builder>(internal__static_Qot_GetOptionChain_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Qot_GetOptionChain_Response__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Qot_GetOptionChain_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetOptionChain.Response, global::Futu.OpenApi.Pb.QotGetOptionChain.Response.Builder>(internal__static_Qot_GetOptionChain_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          global::Futu.OpenApi.Pb.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum OptionCondType {
      OptionCondType_Unknow = 0,
      OptionCondType_WithIn = 1,
      OptionCondType_Outside = 2,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class DataFilter : pb::GeneratedMessage<DataFilter, DataFilter.Builder> {
      private DataFilter() { }
      private static readonly DataFilter defaultInstance = new DataFilter().MakeReadOnly();
      private static readonly string[] _dataFilterFieldNames = new string[] { "deltaMax", "deltaMin", "gammaMax", "gammaMin", "impliedVolatilityMax", "impliedVolatilityMin", "netOpenInterestMax", "netOpenInterestMin", "openInterestMax", "openInterestMin", "rhoMax", "rhoMin", "thetaMax", "thetaMin", "vegaMax", "vegaMin", "volMax", "volMin" };
      private static readonly uint[] _dataFilterFieldTags = new uint[] { 33, 25, 49, 41, 17, 9, 113, 105, 129, 121, 97, 89, 81, 73, 65, 57, 145, 137 };
      public static DataFilter DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override DataFilter DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override DataFilter ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_DataFilter__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<DataFilter, DataFilter.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_DataFilter__FieldAccessorTable; }
      }
      
      public const int ImpliedVolatilityMinFieldNumber = 1;
      private bool hasImpliedVolatilityMin;
      private double impliedVolatilityMin_;
      public bool HasImpliedVolatilityMin {
        get { return hasImpliedVolatilityMin; }
      }
      public double ImpliedVolatilityMin {
        get { return impliedVolatilityMin_; }
      }
      
      public const int ImpliedVolatilityMaxFieldNumber = 2;
      private bool hasImpliedVolatilityMax;
      private double impliedVolatilityMax_;
      public bool HasImpliedVolatilityMax {
        get { return hasImpliedVolatilityMax; }
      }
      public double ImpliedVolatilityMax {
        get { return impliedVolatilityMax_; }
      }
      
      public const int DeltaMinFieldNumber = 3;
      private bool hasDeltaMin;
      private double deltaMin_;
      public bool HasDeltaMin {
        get { return hasDeltaMin; }
      }
      public double DeltaMin {
        get { return deltaMin_; }
      }
      
      public const int DeltaMaxFieldNumber = 4;
      private bool hasDeltaMax;
      private double deltaMax_;
      public bool HasDeltaMax {
        get { return hasDeltaMax; }
      }
      public double DeltaMax {
        get { return deltaMax_; }
      }
      
      public const int GammaMinFieldNumber = 5;
      private bool hasGammaMin;
      private double gammaMin_;
      public bool HasGammaMin {
        get { return hasGammaMin; }
      }
      public double GammaMin {
        get { return gammaMin_; }
      }
      
      public const int GammaMaxFieldNumber = 6;
      private bool hasGammaMax;
      private double gammaMax_;
      public bool HasGammaMax {
        get { return hasGammaMax; }
      }
      public double GammaMax {
        get { return gammaMax_; }
      }
      
      public const int VegaMinFieldNumber = 7;
      private bool hasVegaMin;
      private double vegaMin_;
      public bool HasVegaMin {
        get { return hasVegaMin; }
      }
      public double VegaMin {
        get { return vegaMin_; }
      }
      
      public const int VegaMaxFieldNumber = 8;
      private bool hasVegaMax;
      private double vegaMax_;
      public bool HasVegaMax {
        get { return hasVegaMax; }
      }
      public double VegaMax {
        get { return vegaMax_; }
      }
      
      public const int ThetaMinFieldNumber = 9;
      private bool hasThetaMin;
      private double thetaMin_;
      public bool HasThetaMin {
        get { return hasThetaMin; }
      }
      public double ThetaMin {
        get { return thetaMin_; }
      }
      
      public const int ThetaMaxFieldNumber = 10;
      private bool hasThetaMax;
      private double thetaMax_;
      public bool HasThetaMax {
        get { return hasThetaMax; }
      }
      public double ThetaMax {
        get { return thetaMax_; }
      }
      
      public const int RhoMinFieldNumber = 11;
      private bool hasRhoMin;
      private double rhoMin_;
      public bool HasRhoMin {
        get { return hasRhoMin; }
      }
      public double RhoMin {
        get { return rhoMin_; }
      }
      
      public const int RhoMaxFieldNumber = 12;
      private bool hasRhoMax;
      private double rhoMax_;
      public bool HasRhoMax {
        get { return hasRhoMax; }
      }
      public double RhoMax {
        get { return rhoMax_; }
      }
      
      public const int NetOpenInterestMinFieldNumber = 13;
      private bool hasNetOpenInterestMin;
      private double netOpenInterestMin_;
      public bool HasNetOpenInterestMin {
        get { return hasNetOpenInterestMin; }
      }
      public double NetOpenInterestMin {
        get { return netOpenInterestMin_; }
      }
      
      public const int NetOpenInterestMaxFieldNumber = 14;
      private bool hasNetOpenInterestMax;
      private double netOpenInterestMax_;
      public bool HasNetOpenInterestMax {
        get { return hasNetOpenInterestMax; }
      }
      public double NetOpenInterestMax {
        get { return netOpenInterestMax_; }
      }
      
      public const int OpenInterestMinFieldNumber = 15;
      private bool hasOpenInterestMin;
      private double openInterestMin_;
      public bool HasOpenInterestMin {
        get { return hasOpenInterestMin; }
      }
      public double OpenInterestMin {
        get { return openInterestMin_; }
      }
      
      public const int OpenInterestMaxFieldNumber = 16;
      private bool hasOpenInterestMax;
      private double openInterestMax_;
      public bool HasOpenInterestMax {
        get { return hasOpenInterestMax; }
      }
      public double OpenInterestMax {
        get { return openInterestMax_; }
      }
      
      public const int VolMinFieldNumber = 17;
      private bool hasVolMin;
      private double volMin_;
      public bool HasVolMin {
        get { return hasVolMin; }
      }
      public double VolMin {
        get { return volMin_; }
      }
      
      public const int VolMaxFieldNumber = 18;
      private bool hasVolMax;
      private double volMax_;
      public bool HasVolMax {
        get { return hasVolMax; }
      }
      public double VolMax {
        get { return volMax_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _dataFilterFieldNames;
        if (hasImpliedVolatilityMin) {
          output.WriteDouble(1, field_names[5], ImpliedVolatilityMin);
        }
        if (hasImpliedVolatilityMax) {
          output.WriteDouble(2, field_names[4], ImpliedVolatilityMax);
        }
        if (hasDeltaMin) {
          output.WriteDouble(3, field_names[1], DeltaMin);
        }
        if (hasDeltaMax) {
          output.WriteDouble(4, field_names[0], DeltaMax);
        }
        if (hasGammaMin) {
          output.WriteDouble(5, field_names[3], GammaMin);
        }
        if (hasGammaMax) {
          output.WriteDouble(6, field_names[2], GammaMax);
        }
        if (hasVegaMin) {
          output.WriteDouble(7, field_names[15], VegaMin);
        }
        if (hasVegaMax) {
          output.WriteDouble(8, field_names[14], VegaMax);
        }
        if (hasThetaMin) {
          output.WriteDouble(9, field_names[13], ThetaMin);
        }
        if (hasThetaMax) {
          output.WriteDouble(10, field_names[12], ThetaMax);
        }
        if (hasRhoMin) {
          output.WriteDouble(11, field_names[11], RhoMin);
        }
        if (hasRhoMax) {
          output.WriteDouble(12, field_names[10], RhoMax);
        }
        if (hasNetOpenInterestMin) {
          output.WriteDouble(13, field_names[7], NetOpenInterestMin);
        }
        if (hasNetOpenInterestMax) {
          output.WriteDouble(14, field_names[6], NetOpenInterestMax);
        }
        if (hasOpenInterestMin) {
          output.WriteDouble(15, field_names[9], OpenInterestMin);
        }
        if (hasOpenInterestMax) {
          output.WriteDouble(16, field_names[8], OpenInterestMax);
        }
        if (hasVolMin) {
          output.WriteDouble(17, field_names[17], VolMin);
        }
        if (hasVolMax) {
          output.WriteDouble(18, field_names[16], VolMax);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasImpliedVolatilityMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(1, ImpliedVolatilityMin);
        }
        if (hasImpliedVolatilityMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(2, ImpliedVolatilityMax);
        }
        if (hasDeltaMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(3, DeltaMin);
        }
        if (hasDeltaMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, DeltaMax);
        }
        if (hasGammaMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(5, GammaMin);
        }
        if (hasGammaMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, GammaMax);
        }
        if (hasVegaMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, VegaMin);
        }
        if (hasVegaMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(8, VegaMax);
        }
        if (hasThetaMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(9, ThetaMin);
        }
        if (hasThetaMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(10, ThetaMax);
        }
        if (hasRhoMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(11, RhoMin);
        }
        if (hasRhoMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(12, RhoMax);
        }
        if (hasNetOpenInterestMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(13, NetOpenInterestMin);
        }
        if (hasNetOpenInterestMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(14, NetOpenInterestMax);
        }
        if (hasOpenInterestMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(15, OpenInterestMin);
        }
        if (hasOpenInterestMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(16, OpenInterestMax);
        }
        if (hasVolMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(17, VolMin);
        }
        if (hasVolMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(18, VolMax);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static DataFilter ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static DataFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static DataFilter ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static DataFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static DataFilter ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static DataFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static DataFilter ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static DataFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static DataFilter ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static DataFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private DataFilter MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(DataFilter prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<DataFilter, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(DataFilter cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private DataFilter result;
        
        private DataFilter PrepareBuilder() {
          if (resultIsReadOnly) {
            DataFilter original = result;
            result = new DataFilter();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override DataFilter MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.Descriptor; }
        }
        
        public override DataFilter DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.DefaultInstance; }
        }
        
        public override DataFilter BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is DataFilter) {
            return MergeFrom((DataFilter) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(DataFilter other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasImpliedVolatilityMin) {
            ImpliedVolatilityMin = other.ImpliedVolatilityMin;
          }
          if (other.HasImpliedVolatilityMax) {
            ImpliedVolatilityMax = other.ImpliedVolatilityMax;
          }
          if (other.HasDeltaMin) {
            DeltaMin = other.DeltaMin;
          }
          if (other.HasDeltaMax) {
            DeltaMax = other.DeltaMax;
          }
          if (other.HasGammaMin) {
            GammaMin = other.GammaMin;
          }
          if (other.HasGammaMax) {
            GammaMax = other.GammaMax;
          }
          if (other.HasVegaMin) {
            VegaMin = other.VegaMin;
          }
          if (other.HasVegaMax) {
            VegaMax = other.VegaMax;
          }
          if (other.HasThetaMin) {
            ThetaMin = other.ThetaMin;
          }
          if (other.HasThetaMax) {
            ThetaMax = other.ThetaMax;
          }
          if (other.HasRhoMin) {
            RhoMin = other.RhoMin;
          }
          if (other.HasRhoMax) {
            RhoMax = other.RhoMax;
          }
          if (other.HasNetOpenInterestMin) {
            NetOpenInterestMin = other.NetOpenInterestMin;
          }
          if (other.HasNetOpenInterestMax) {
            NetOpenInterestMax = other.NetOpenInterestMax;
          }
          if (other.HasOpenInterestMin) {
            OpenInterestMin = other.OpenInterestMin;
          }
          if (other.HasOpenInterestMax) {
            OpenInterestMax = other.OpenInterestMax;
          }
          if (other.HasVolMin) {
            VolMin = other.VolMin;
          }
          if (other.HasVolMax) {
            VolMax = other.VolMax;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_dataFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _dataFilterFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 9: {
                result.hasImpliedVolatilityMin = input.ReadDouble(ref result.impliedVolatilityMin_);
                break;
              }
              case 17: {
                result.hasImpliedVolatilityMax = input.ReadDouble(ref result.impliedVolatilityMax_);
                break;
              }
              case 25: {
                result.hasDeltaMin = input.ReadDouble(ref result.deltaMin_);
                break;
              }
              case 33: {
                result.hasDeltaMax = input.ReadDouble(ref result.deltaMax_);
                break;
              }
              case 41: {
                result.hasGammaMin = input.ReadDouble(ref result.gammaMin_);
                break;
              }
              case 49: {
                result.hasGammaMax = input.ReadDouble(ref result.gammaMax_);
                break;
              }
              case 57: {
                result.hasVegaMin = input.ReadDouble(ref result.vegaMin_);
                break;
              }
              case 65: {
                result.hasVegaMax = input.ReadDouble(ref result.vegaMax_);
                break;
              }
              case 73: {
                result.hasThetaMin = input.ReadDouble(ref result.thetaMin_);
                break;
              }
              case 81: {
                result.hasThetaMax = input.ReadDouble(ref result.thetaMax_);
                break;
              }
              case 89: {
                result.hasRhoMin = input.ReadDouble(ref result.rhoMin_);
                break;
              }
              case 97: {
                result.hasRhoMax = input.ReadDouble(ref result.rhoMax_);
                break;
              }
              case 105: {
                result.hasNetOpenInterestMin = input.ReadDouble(ref result.netOpenInterestMin_);
                break;
              }
              case 113: {
                result.hasNetOpenInterestMax = input.ReadDouble(ref result.netOpenInterestMax_);
                break;
              }
              case 121: {
                result.hasOpenInterestMin = input.ReadDouble(ref result.openInterestMin_);
                break;
              }
              case 129: {
                result.hasOpenInterestMax = input.ReadDouble(ref result.openInterestMax_);
                break;
              }
              case 137: {
                result.hasVolMin = input.ReadDouble(ref result.volMin_);
                break;
              }
              case 145: {
                result.hasVolMax = input.ReadDouble(ref result.volMax_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasImpliedVolatilityMin {
          get { return result.hasImpliedVolatilityMin; }
        }
        public double ImpliedVolatilityMin {
          get { return result.ImpliedVolatilityMin; }
          set { SetImpliedVolatilityMin(value); }
        }
        public Builder SetImpliedVolatilityMin(double value) {
          PrepareBuilder();
          result.hasImpliedVolatilityMin = true;
          result.impliedVolatilityMin_ = value;
          return this;
        }
        public Builder ClearImpliedVolatilityMin() {
          PrepareBuilder();
          result.hasImpliedVolatilityMin = false;
          result.impliedVolatilityMin_ = 0D;
          return this;
        }
        
        public bool HasImpliedVolatilityMax {
          get { return result.hasImpliedVolatilityMax; }
        }
        public double ImpliedVolatilityMax {
          get { return result.ImpliedVolatilityMax; }
          set { SetImpliedVolatilityMax(value); }
        }
        public Builder SetImpliedVolatilityMax(double value) {
          PrepareBuilder();
          result.hasImpliedVolatilityMax = true;
          result.impliedVolatilityMax_ = value;
          return this;
        }
        public Builder ClearImpliedVolatilityMax() {
          PrepareBuilder();
          result.hasImpliedVolatilityMax = false;
          result.impliedVolatilityMax_ = 0D;
          return this;
        }
        
        public bool HasDeltaMin {
          get { return result.hasDeltaMin; }
        }
        public double DeltaMin {
          get { return result.DeltaMin; }
          set { SetDeltaMin(value); }
        }
        public Builder SetDeltaMin(double value) {
          PrepareBuilder();
          result.hasDeltaMin = true;
          result.deltaMin_ = value;
          return this;
        }
        public Builder ClearDeltaMin() {
          PrepareBuilder();
          result.hasDeltaMin = false;
          result.deltaMin_ = 0D;
          return this;
        }
        
        public bool HasDeltaMax {
          get { return result.hasDeltaMax; }
        }
        public double DeltaMax {
          get { return result.DeltaMax; }
          set { SetDeltaMax(value); }
        }
        public Builder SetDeltaMax(double value) {
          PrepareBuilder();
          result.hasDeltaMax = true;
          result.deltaMax_ = value;
          return this;
        }
        public Builder ClearDeltaMax() {
          PrepareBuilder();
          result.hasDeltaMax = false;
          result.deltaMax_ = 0D;
          return this;
        }
        
        public bool HasGammaMin {
          get { return result.hasGammaMin; }
        }
        public double GammaMin {
          get { return result.GammaMin; }
          set { SetGammaMin(value); }
        }
        public Builder SetGammaMin(double value) {
          PrepareBuilder();
          result.hasGammaMin = true;
          result.gammaMin_ = value;
          return this;
        }
        public Builder ClearGammaMin() {
          PrepareBuilder();
          result.hasGammaMin = false;
          result.gammaMin_ = 0D;
          return this;
        }
        
        public bool HasGammaMax {
          get { return result.hasGammaMax; }
        }
        public double GammaMax {
          get { return result.GammaMax; }
          set { SetGammaMax(value); }
        }
        public Builder SetGammaMax(double value) {
          PrepareBuilder();
          result.hasGammaMax = true;
          result.gammaMax_ = value;
          return this;
        }
        public Builder ClearGammaMax() {
          PrepareBuilder();
          result.hasGammaMax = false;
          result.gammaMax_ = 0D;
          return this;
        }
        
        public bool HasVegaMin {
          get { return result.hasVegaMin; }
        }
        public double VegaMin {
          get { return result.VegaMin; }
          set { SetVegaMin(value); }
        }
        public Builder SetVegaMin(double value) {
          PrepareBuilder();
          result.hasVegaMin = true;
          result.vegaMin_ = value;
          return this;
        }
        public Builder ClearVegaMin() {
          PrepareBuilder();
          result.hasVegaMin = false;
          result.vegaMin_ = 0D;
          return this;
        }
        
        public bool HasVegaMax {
          get { return result.hasVegaMax; }
        }
        public double VegaMax {
          get { return result.VegaMax; }
          set { SetVegaMax(value); }
        }
        public Builder SetVegaMax(double value) {
          PrepareBuilder();
          result.hasVegaMax = true;
          result.vegaMax_ = value;
          return this;
        }
        public Builder ClearVegaMax() {
          PrepareBuilder();
          result.hasVegaMax = false;
          result.vegaMax_ = 0D;
          return this;
        }
        
        public bool HasThetaMin {
          get { return result.hasThetaMin; }
        }
        public double ThetaMin {
          get { return result.ThetaMin; }
          set { SetThetaMin(value); }
        }
        public Builder SetThetaMin(double value) {
          PrepareBuilder();
          result.hasThetaMin = true;
          result.thetaMin_ = value;
          return this;
        }
        public Builder ClearThetaMin() {
          PrepareBuilder();
          result.hasThetaMin = false;
          result.thetaMin_ = 0D;
          return this;
        }
        
        public bool HasThetaMax {
          get { return result.hasThetaMax; }
        }
        public double ThetaMax {
          get { return result.ThetaMax; }
          set { SetThetaMax(value); }
        }
        public Builder SetThetaMax(double value) {
          PrepareBuilder();
          result.hasThetaMax = true;
          result.thetaMax_ = value;
          return this;
        }
        public Builder ClearThetaMax() {
          PrepareBuilder();
          result.hasThetaMax = false;
          result.thetaMax_ = 0D;
          return this;
        }
        
        public bool HasRhoMin {
          get { return result.hasRhoMin; }
        }
        public double RhoMin {
          get { return result.RhoMin; }
          set { SetRhoMin(value); }
        }
        public Builder SetRhoMin(double value) {
          PrepareBuilder();
          result.hasRhoMin = true;
          result.rhoMin_ = value;
          return this;
        }
        public Builder ClearRhoMin() {
          PrepareBuilder();
          result.hasRhoMin = false;
          result.rhoMin_ = 0D;
          return this;
        }
        
        public bool HasRhoMax {
          get { return result.hasRhoMax; }
        }
        public double RhoMax {
          get { return result.RhoMax; }
          set { SetRhoMax(value); }
        }
        public Builder SetRhoMax(double value) {
          PrepareBuilder();
          result.hasRhoMax = true;
          result.rhoMax_ = value;
          return this;
        }
        public Builder ClearRhoMax() {
          PrepareBuilder();
          result.hasRhoMax = false;
          result.rhoMax_ = 0D;
          return this;
        }
        
        public bool HasNetOpenInterestMin {
          get { return result.hasNetOpenInterestMin; }
        }
        public double NetOpenInterestMin {
          get { return result.NetOpenInterestMin; }
          set { SetNetOpenInterestMin(value); }
        }
        public Builder SetNetOpenInterestMin(double value) {
          PrepareBuilder();
          result.hasNetOpenInterestMin = true;
          result.netOpenInterestMin_ = value;
          return this;
        }
        public Builder ClearNetOpenInterestMin() {
          PrepareBuilder();
          result.hasNetOpenInterestMin = false;
          result.netOpenInterestMin_ = 0D;
          return this;
        }
        
        public bool HasNetOpenInterestMax {
          get { return result.hasNetOpenInterestMax; }
        }
        public double NetOpenInterestMax {
          get { return result.NetOpenInterestMax; }
          set { SetNetOpenInterestMax(value); }
        }
        public Builder SetNetOpenInterestMax(double value) {
          PrepareBuilder();
          result.hasNetOpenInterestMax = true;
          result.netOpenInterestMax_ = value;
          return this;
        }
        public Builder ClearNetOpenInterestMax() {
          PrepareBuilder();
          result.hasNetOpenInterestMax = false;
          result.netOpenInterestMax_ = 0D;
          return this;
        }
        
        public bool HasOpenInterestMin {
          get { return result.hasOpenInterestMin; }
        }
        public double OpenInterestMin {
          get { return result.OpenInterestMin; }
          set { SetOpenInterestMin(value); }
        }
        public Builder SetOpenInterestMin(double value) {
          PrepareBuilder();
          result.hasOpenInterestMin = true;
          result.openInterestMin_ = value;
          return this;
        }
        public Builder ClearOpenInterestMin() {
          PrepareBuilder();
          result.hasOpenInterestMin = false;
          result.openInterestMin_ = 0D;
          return this;
        }
        
        public bool HasOpenInterestMax {
          get { return result.hasOpenInterestMax; }
        }
        public double OpenInterestMax {
          get { return result.OpenInterestMax; }
          set { SetOpenInterestMax(value); }
        }
        public Builder SetOpenInterestMax(double value) {
          PrepareBuilder();
          result.hasOpenInterestMax = true;
          result.openInterestMax_ = value;
          return this;
        }
        public Builder ClearOpenInterestMax() {
          PrepareBuilder();
          result.hasOpenInterestMax = false;
          result.openInterestMax_ = 0D;
          return this;
        }
        
        public bool HasVolMin {
          get { return result.hasVolMin; }
        }
        public double VolMin {
          get { return result.VolMin; }
          set { SetVolMin(value); }
        }
        public Builder SetVolMin(double value) {
          PrepareBuilder();
          result.hasVolMin = true;
          result.volMin_ = value;
          return this;
        }
        public Builder ClearVolMin() {
          PrepareBuilder();
          result.hasVolMin = false;
          result.volMin_ = 0D;
          return this;
        }
        
        public bool HasVolMax {
          get { return result.hasVolMax; }
        }
        public double VolMax {
          get { return result.VolMax; }
          set { SetVolMax(value); }
        }
        public Builder SetVolMax(double value) {
          PrepareBuilder();
          result.hasVolMax = true;
          result.volMax_ = value;
          return this;
        }
        public Builder ClearVolMax() {
          PrepareBuilder();
          result.hasVolMax = false;
          result.volMax_ = 0D;
          return this;
        }
      }
      static DataFilter() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "beginTime", "condition", "dataFilter", "endTime", "indexOptionType", "owner", "type" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 34, 24, 58, 42, 48, 10, 16 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_C2S__FieldAccessorTable; }
      }
      
      public const int OwnerFieldNumber = 1;
      private bool hasOwner;
      private global::Futu.OpenApi.Pb.QotCommon.Security owner_;
      public bool HasOwner {
        get { return hasOwner; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Owner {
        get { return owner_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int IndexOptionTypeFieldNumber = 6;
      private bool hasIndexOptionType;
      private int indexOptionType_;
      public bool HasIndexOptionType {
        get { return hasIndexOptionType; }
      }
      public int IndexOptionType {
        get { return indexOptionType_; }
      }
      
      public const int TypeFieldNumber = 2;
      private bool hasType;
      private int type_;
      public bool HasType {
        get { return hasType; }
      }
      public int Type {
        get { return type_; }
      }
      
      public const int ConditionFieldNumber = 3;
      private bool hasCondition;
      private int condition_;
      public bool HasCondition {
        get { return hasCondition; }
      }
      public int Condition {
        get { return condition_; }
      }
      
      public const int BeginTimeFieldNumber = 4;
      private bool hasBeginTime;
      private string beginTime_ = "";
      public bool HasBeginTime {
        get { return hasBeginTime; }
      }
      public string BeginTime {
        get { return beginTime_; }
      }
      
      public const int EndTimeFieldNumber = 5;
      private bool hasEndTime;
      private string endTime_ = "";
      public bool HasEndTime {
        get { return hasEndTime; }
      }
      public string EndTime {
        get { return endTime_; }
      }
      
      public const int DataFilterFieldNumber = 7;
      private bool hasDataFilter;
      private global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter dataFilter_;
      public bool HasDataFilter {
        get { return hasDataFilter; }
      }
      public global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter DataFilter {
        get { return dataFilter_ ?? global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasOwner) return false;
          if (!hasBeginTime) return false;
          if (!hasEndTime) return false;
          if (!Owner.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasOwner) {
          output.WriteMessage(1, field_names[5], Owner);
        }
        if (hasType) {
          output.WriteInt32(2, field_names[6], Type);
        }
        if (hasCondition) {
          output.WriteInt32(3, field_names[1], Condition);
        }
        if (hasBeginTime) {
          output.WriteString(4, field_names[0], BeginTime);
        }
        if (hasEndTime) {
          output.WriteString(5, field_names[3], EndTime);
        }
        if (hasIndexOptionType) {
          output.WriteInt32(6, field_names[4], IndexOptionType);
        }
        if (hasDataFilter) {
          output.WriteMessage(7, field_names[2], DataFilter);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOwner) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Owner);
        }
        if (hasIndexOptionType) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, IndexOptionType);
        }
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Type);
        }
        if (hasCondition) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Condition);
        }
        if (hasBeginTime) {
          size += pb::CodedOutputStream.ComputeStringSize(4, BeginTime);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeStringSize(5, EndTime);
        }
        if (hasDataFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, DataFilter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasOwner) {
            MergeOwner(other.Owner);
          }
          if (other.HasIndexOptionType) {
            IndexOptionType = other.IndexOptionType;
          }
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasCondition) {
            Condition = other.Condition;
          }
          if (other.HasBeginTime) {
            BeginTime = other.BeginTime;
          }
          if (other.HasEndTime) {
            EndTime = other.EndTime;
          }
          if (other.HasDataFilter) {
            MergeDataFilter(other.DataFilter);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasOwner) {
                  subBuilder.MergeFrom(Owner);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Owner = subBuilder.BuildPartial();
                break;
              }
              case 16: {
                result.hasType = input.ReadInt32(ref result.type_);
                break;
              }
              case 24: {
                result.hasCondition = input.ReadInt32(ref result.condition_);
                break;
              }
              case 34: {
                result.hasBeginTime = input.ReadString(ref result.beginTime_);
                break;
              }
              case 42: {
                result.hasEndTime = input.ReadString(ref result.endTime_);
                break;
              }
              case 48: {
                result.hasIndexOptionType = input.ReadInt32(ref result.indexOptionType_);
                break;
              }
              case 58: {
                global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.CreateBuilder();
                if (result.hasDataFilter) {
                  subBuilder.MergeFrom(DataFilter);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                DataFilter = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasOwner {
         get { return result.hasOwner; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Owner {
          get { return result.Owner; }
          set { SetOwner(value); }
        }
        public Builder SetOwner(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasOwner = true;
          result.owner_ = value;
          return this;
        }
        public Builder SetOwner(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasOwner = true;
          result.owner_ = builderForValue.Build();
          return this;
        }
        public Builder MergeOwner(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasOwner &&
              result.owner_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.owner_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.owner_).MergeFrom(value).BuildPartial();
          } else {
            result.owner_ = value;
          }
          result.hasOwner = true;
          return this;
        }
        public Builder ClearOwner() {
          PrepareBuilder();
          result.hasOwner = false;
          result.owner_ = null;
          return this;
        }
        
        public bool HasIndexOptionType {
          get { return result.hasIndexOptionType; }
        }
        public int IndexOptionType {
          get { return result.IndexOptionType; }
          set { SetIndexOptionType(value); }
        }
        public Builder SetIndexOptionType(int value) {
          PrepareBuilder();
          result.hasIndexOptionType = true;
          result.indexOptionType_ = value;
          return this;
        }
        public Builder ClearIndexOptionType() {
          PrepareBuilder();
          result.hasIndexOptionType = false;
          result.indexOptionType_ = 0;
          return this;
        }
        
        public bool HasType {
          get { return result.hasType; }
        }
        public int Type {
          get { return result.Type; }
          set { SetType(value); }
        }
        public Builder SetType(int value) {
          PrepareBuilder();
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder ClearType() {
          PrepareBuilder();
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        public bool HasCondition {
          get { return result.hasCondition; }
        }
        public int Condition {
          get { return result.Condition; }
          set { SetCondition(value); }
        }
        public Builder SetCondition(int value) {
          PrepareBuilder();
          result.hasCondition = true;
          result.condition_ = value;
          return this;
        }
        public Builder ClearCondition() {
          PrepareBuilder();
          result.hasCondition = false;
          result.condition_ = 0;
          return this;
        }
        
        public bool HasBeginTime {
          get { return result.hasBeginTime; }
        }
        public string BeginTime {
          get { return result.BeginTime; }
          set { SetBeginTime(value); }
        }
        public Builder SetBeginTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasBeginTime = true;
          result.beginTime_ = value;
          return this;
        }
        public Builder ClearBeginTime() {
          PrepareBuilder();
          result.hasBeginTime = false;
          result.beginTime_ = "";
          return this;
        }
        
        public bool HasEndTime {
          get { return result.hasEndTime; }
        }
        public string EndTime {
          get { return result.EndTime; }
          set { SetEndTime(value); }
        }
        public Builder SetEndTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasEndTime = true;
          result.endTime_ = value;
          return this;
        }
        public Builder ClearEndTime() {
          PrepareBuilder();
          result.hasEndTime = false;
          result.endTime_ = "";
          return this;
        }
        
        public bool HasDataFilter {
         get { return result.hasDataFilter; }
        }
        public global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter DataFilter {
          get { return result.DataFilter; }
          set { SetDataFilter(value); }
        }
        public Builder SetDataFilter(global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasDataFilter = true;
          result.dataFilter_ = value;
          return this;
        }
        public Builder SetDataFilter(global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasDataFilter = true;
          result.dataFilter_ = builderForValue.Build();
          return this;
        }
        public Builder MergeDataFilter(global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasDataFilter &&
              result.dataFilter_ != global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.DefaultInstance) {
              result.dataFilter_ = global::Futu.OpenApi.Pb.QotGetOptionChain.DataFilter.CreateBuilder(result.dataFilter_).MergeFrom(value).BuildPartial();
          } else {
            result.dataFilter_ = value;
          }
          result.hasDataFilter = true;
          return this;
        }
        public Builder ClearDataFilter() {
          PrepareBuilder();
          result.hasDataFilter = false;
          result.dataFilter_ = null;
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class OptionItem : pb::GeneratedMessage<OptionItem, OptionItem.Builder> {
      private OptionItem() { }
      private static readonly OptionItem defaultInstance = new OptionItem().MakeReadOnly();
      private static readonly string[] _optionItemFieldNames = new string[] { "call", "put" };
      private static readonly uint[] _optionItemFieldTags = new uint[] { 10, 18 };
      public static OptionItem DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override OptionItem DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override OptionItem ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionItem__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<OptionItem, OptionItem.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionItem__FieldAccessorTable; }
      }
      
      public const int CallFieldNumber = 1;
      private bool hasCall;
      private global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo call_;
      public bool HasCall {
        get { return hasCall; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo Call {
        get { return call_ ?? global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.DefaultInstance; }
      }
      
      public const int PutFieldNumber = 2;
      private bool hasPut;
      private global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo put_;
      public bool HasPut {
        get { return hasPut; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo Put {
        get { return put_ ?? global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (HasCall) {
            if (!Call.IsInitialized) return false;
          }
          if (HasPut) {
            if (!Put.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _optionItemFieldNames;
        if (hasCall) {
          output.WriteMessage(1, field_names[0], Call);
        }
        if (hasPut) {
          output.WriteMessage(2, field_names[1], Put);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCall) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Call);
        }
        if (hasPut) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Put);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static OptionItem ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static OptionItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static OptionItem ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static OptionItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static OptionItem ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static OptionItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static OptionItem ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static OptionItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static OptionItem ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static OptionItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private OptionItem MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(OptionItem prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<OptionItem, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(OptionItem cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private OptionItem result;
        
        private OptionItem PrepareBuilder() {
          if (resultIsReadOnly) {
            OptionItem original = result;
            result = new OptionItem();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override OptionItem MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.Descriptor; }
        }
        
        public override OptionItem DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.DefaultInstance; }
        }
        
        public override OptionItem BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is OptionItem) {
            return MergeFrom((OptionItem) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(OptionItem other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasCall) {
            MergeCall(other.Call);
          }
          if (other.HasPut) {
            MergePut(other.Put);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_optionItemFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _optionItemFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.CreateBuilder();
                if (result.hasCall) {
                  subBuilder.MergeFrom(Call);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Call = subBuilder.BuildPartial();
                break;
              }
              case 18: {
                global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.CreateBuilder();
                if (result.hasPut) {
                  subBuilder.MergeFrom(Put);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Put = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasCall {
         get { return result.hasCall; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo Call {
          get { return result.Call; }
          set { SetCall(value); }
        }
        public Builder SetCall(global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasCall = true;
          result.call_ = value;
          return this;
        }
        public Builder SetCall(global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasCall = true;
          result.call_ = builderForValue.Build();
          return this;
        }
        public Builder MergeCall(global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasCall &&
              result.call_ != global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.DefaultInstance) {
              result.call_ = global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.CreateBuilder(result.call_).MergeFrom(value).BuildPartial();
          } else {
            result.call_ = value;
          }
          result.hasCall = true;
          return this;
        }
        public Builder ClearCall() {
          PrepareBuilder();
          result.hasCall = false;
          result.call_ = null;
          return this;
        }
        
        public bool HasPut {
         get { return result.hasPut; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo Put {
          get { return result.Put; }
          set { SetPut(value); }
        }
        public Builder SetPut(global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasPut = true;
          result.put_ = value;
          return this;
        }
        public Builder SetPut(global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasPut = true;
          result.put_ = builderForValue.Build();
          return this;
        }
        public Builder MergePut(global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasPut &&
              result.put_ != global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.DefaultInstance) {
              result.put_ = global::Futu.OpenApi.Pb.QotCommon.SecurityStaticInfo.CreateBuilder(result.put_).MergeFrom(value).BuildPartial();
          } else {
            result.put_ = value;
          }
          result.hasPut = true;
          return this;
        }
        public Builder ClearPut() {
          PrepareBuilder();
          result.hasPut = false;
          result.put_ = null;
          return this;
        }
      }
      static OptionItem() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class OptionChain : pb::GeneratedMessage<OptionChain, OptionChain.Builder> {
      private OptionChain() { }
      private static readonly OptionChain defaultInstance = new OptionChain().MakeReadOnly();
      private static readonly string[] _optionChainFieldNames = new string[] { "option", "strikeTime", "strikeTimestamp" };
      private static readonly uint[] _optionChainFieldTags = new uint[] { 18, 10, 25 };
      public static OptionChain DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override OptionChain DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override OptionChain ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionChain__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<OptionChain, OptionChain.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionChain__FieldAccessorTable; }
      }
      
      public const int StrikeTimeFieldNumber = 1;
      private bool hasStrikeTime;
      private string strikeTime_ = "";
      public bool HasStrikeTime {
        get { return hasStrikeTime; }
      }
      public string StrikeTime {
        get { return strikeTime_; }
      }
      
      public const int OptionFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem> option_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem> OptionList {
        get { return option_; }
      }
      public int OptionCount {
        get { return option_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem GetOption(int index) {
        return option_[index];
      }
      
      public const int StrikeTimestampFieldNumber = 3;
      private bool hasStrikeTimestamp;
      private double strikeTimestamp_;
      public bool HasStrikeTimestamp {
        get { return hasStrikeTimestamp; }
      }
      public double StrikeTimestamp {
        get { return strikeTimestamp_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasStrikeTime) return false;
          foreach (global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem element in OptionList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _optionChainFieldNames;
        if (hasStrikeTime) {
          output.WriteString(1, field_names[1], StrikeTime);
        }
        if (option_.Count > 0) {
          output.WriteMessageArray(2, field_names[0], option_);
        }
        if (hasStrikeTimestamp) {
          output.WriteDouble(3, field_names[2], StrikeTimestamp);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStrikeTime) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StrikeTime);
        }
        foreach (global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem element in OptionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasStrikeTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(3, StrikeTimestamp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static OptionChain ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static OptionChain ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static OptionChain ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static OptionChain ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static OptionChain ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static OptionChain ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static OptionChain ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static OptionChain ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static OptionChain ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static OptionChain ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private OptionChain MakeReadOnly() {
        option_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(OptionChain prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<OptionChain, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(OptionChain cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private OptionChain result;
        
        private OptionChain PrepareBuilder() {
          if (resultIsReadOnly) {
            OptionChain original = result;
            result = new OptionChain();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override OptionChain MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.Descriptor; }
        }
        
        public override OptionChain DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.DefaultInstance; }
        }
        
        public override OptionChain BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is OptionChain) {
            return MergeFrom((OptionChain) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(OptionChain other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasStrikeTime) {
            StrikeTime = other.StrikeTime;
          }
          if (other.option_.Count != 0) {
            result.option_.Add(other.option_);
          }
          if (other.HasStrikeTimestamp) {
            StrikeTimestamp = other.StrikeTimestamp;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_optionChainFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _optionChainFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasStrikeTime = input.ReadString(ref result.strikeTime_);
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.option_, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.DefaultInstance, extensionRegistry);
                break;
              }
              case 25: {
                result.hasStrikeTimestamp = input.ReadDouble(ref result.strikeTimestamp_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasStrikeTime {
          get { return result.hasStrikeTime; }
        }
        public string StrikeTime {
          get { return result.StrikeTime; }
          set { SetStrikeTime(value); }
        }
        public Builder SetStrikeTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasStrikeTime = true;
          result.strikeTime_ = value;
          return this;
        }
        public Builder ClearStrikeTime() {
          PrepareBuilder();
          result.hasStrikeTime = false;
          result.strikeTime_ = "";
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem> OptionList {
          get { return PrepareBuilder().option_; }
        }
        public int OptionCount {
          get { return result.OptionCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem GetOption(int index) {
          return result.GetOption(index);
        }
        public Builder SetOption(int index, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.option_[index] = value;
          return this;
        }
        public Builder SetOption(int index, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.option_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddOption(global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.option_.Add(value);
          return this;
        }
        public Builder AddOption(global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.option_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeOption(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionItem> values) {
          PrepareBuilder();
          result.option_.Add(values);
          return this;
        }
        public Builder ClearOption() {
          PrepareBuilder();
          result.option_.Clear();
          return this;
        }
        
        public bool HasStrikeTimestamp {
          get { return result.hasStrikeTimestamp; }
        }
        public double StrikeTimestamp {
          get { return result.StrikeTimestamp; }
          set { SetStrikeTimestamp(value); }
        }
        public Builder SetStrikeTimestamp(double value) {
          PrepareBuilder();
          result.hasStrikeTimestamp = true;
          result.strikeTimestamp_ = value;
          return this;
        }
        public Builder ClearStrikeTimestamp() {
          PrepareBuilder();
          result.hasStrikeTimestamp = false;
          result.strikeTimestamp_ = 0D;
          return this;
        }
      }
      static OptionChain() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "optionChain" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 10 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_S2C__FieldAccessorTable; }
      }
      
      public const int OptionChainFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain> optionChain_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain> OptionChainList {
        get { return optionChain_; }
      }
      public int OptionChainCount {
        get { return optionChain_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain GetOptionChain(int index) {
        return optionChain_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain element in OptionChainList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (optionChain_.Count > 0) {
          output.WriteMessageArray(1, field_names[0], optionChain_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain element in OptionChainList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        optionChain_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.optionChain_.Count != 0) {
            result.optionChain_.Add(other.optionChain_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.optionChain_, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain> OptionChainList {
          get { return PrepareBuilder().optionChain_; }
        }
        public int OptionChainCount {
          get { return result.OptionChainCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain GetOptionChain(int index) {
          return result.GetOptionChain(index);
        }
        public Builder SetOptionChain(int index, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.optionChain_[index] = value;
          return this;
        }
        public Builder SetOptionChain(int index, global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.optionChain_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddOptionChain(global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.optionChain_.Add(value);
          return this;
        }
        public Builder AddOptionChain(global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.optionChain_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeOptionChain(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetOptionChain.OptionChain> values) {
          PrepareBuilder();
          result.optionChain_.Add(values);
          return this;
        }
        public Builder ClearOptionChain() {
          PrepareBuilder();
          result.optionChain_.Clear();
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.QotGetOptionChain.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.QotGetOptionChain.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.QotGetOptionChain.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetOptionChain.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.QotGetOptionChain.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.QotGetOptionChain.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetOptionChain.internal__static_Qot_GetOptionChain_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.QotGetOptionChain.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.QotGetOptionChain.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetOptionChain.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.QotGetOptionChain.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.QotGetOptionChain.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetOptionChain.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.QotGetOptionChain.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.QotGetOptionChain.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetOptionChain.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
