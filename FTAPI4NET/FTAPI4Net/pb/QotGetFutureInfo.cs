// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class QotGetFutureInfo {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Qot_GetFutureInfo_TradeTime__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime, global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.Builder> internal__static_Qot_GetFutureInfo_TradeTime__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetFutureInfo_FutureInfo__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo, global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.Builder> internal__static_Qot_GetFutureInfo_FutureInfo__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetFutureInfo_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S, global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.Builder> internal__static_Qot_GetFutureInfo_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetFutureInfo_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C, global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.Builder> internal__static_Qot_GetFutureInfo_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetFutureInfo_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.Request, global::Futu.OpenApi.Pb.QotGetFutureInfo.Request.Builder> internal__static_Qot_GetFutureInfo_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetFutureInfo_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.Response, global::Futu.OpenApi.Pb.QotGetFutureInfo.Response.Builder> internal__static_Qot_GetFutureInfo_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static QotGetFutureInfo() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdRb3RfR2V0RnV0dXJlSW5mby5wcm90bxIRUW90X0dldEZ1dHVyZUluZm8a", 
            "DENvbW1vbi5wcm90bxoQUW90X0NvbW1vbi5wcm90byIzCglUcmFkZVRpbWUS", 
            "FAoFYmVnaW4YASABKAFSBWJlZ2luEhAKA2VuZBgCIAEoAVIDZW5kIoYFCgpG", 
            "dXR1cmVJbmZvEhIKBG5hbWUYASACKAlSBG5hbWUSMAoIc2VjdXJpdHkYAiAC", 
            "KAsyFC5Rb3RfQ29tbW9uLlNlY3VyaXR5UghzZWN1cml0eRIkCg1sYXN0VHJh", 
            "ZGVUaW1lGAMgAigJUg1sYXN0VHJhZGVUaW1lEi4KEmxhc3RUcmFkZVRpbWVz", 
            "dGFtcBgEIAEoAVISbGFzdFRyYWRlVGltZXN0YW1wEioKBW93bmVyGAUgASgL", 
            "MhQuUW90X0NvbW1vbi5TZWN1cml0eVIFb3duZXISHgoKb3duZXJPdGhlchgG", 
            "IAIoCVIKb3duZXJPdGhlchIaCghleGNoYW5nZRgHIAIoCVIIZXhjaGFuZ2US", 
            "IgoMY29udHJhY3RUeXBlGAggAigJUgxjb250cmFjdFR5cGUSIgoMY29udHJh", 
            "Y3RTaXplGAkgAigBUgxjb250cmFjdFNpemUSKgoQY29udHJhY3RTaXplVW5p", 
            "dBgKIAIoCVIQY29udHJhY3RTaXplVW5pdBIkCg1xdW90ZUN1cnJlbmN5GAsg", 
            "AigJUg1xdW90ZUN1cnJlbmN5EhYKBm1pblZhchgMIAIoAVIGbWluVmFyEh4K", 
            "Cm1pblZhclVuaXQYDSACKAlSCm1pblZhclVuaXQSHAoJcXVvdGVVbml0GA4g", 
            "ASgJUglxdW90ZVVuaXQSOgoJdHJhZGVUaW1lGA8gAygLMhwuUW90X0dldEZ1", 
            "dHVyZUluZm8uVHJhZGVUaW1lUgl0cmFkZVRpbWUSGgoIdGltZVpvbmUYECAC", 
            "KAlSCHRpbWVab25lEiwKEWV4Y2hhbmdlRm9ybWF0VXJsGBEgAigJUhFleGNo", 
            "YW5nZUZvcm1hdFVybCI/CgNDMlMSOAoMc2VjdXJpdHlMaXN0GAEgAygLMhQu", 
            "UW90X0NvbW1vbi5TZWN1cml0eVIMc2VjdXJpdHlMaXN0IkwKA1MyQxJFCg5m", 
            "dXR1cmVJbmZvTGlzdBgBIAMoCzIdLlFvdF9HZXRGdXR1cmVJbmZvLkZ1dHVy", 
            "ZUluZm9SDmZ1dHVyZUluZm9MaXN0IjMKB1JlcXVlc3QSKAoDYzJzGAEgAigL", 
            "MhYuUW90X0dldEZ1dHVyZUluZm8uQzJTUgNjMnMihgEKCFJlc3BvbnNlEh4K", 
            "B3JldFR5cGUYASACKAU6BC00MDBSB3JldFR5cGUSFgoGcmV0TXNnGAIgASgJ", 
            "UgZyZXRNc2cSGAoHZXJyQ29kZRgDIAEoBVIHZXJyQ29kZRIoCgNzMmMYBCAB", 
            "KAsyFi5Rb3RfR2V0RnV0dXJlSW5mby5TMkNSA3MyY0JHChNjb20uZnV0dS5v", 
            "cGVuYXBpLnBiWjBnaXRodWIuY29tL2Z1dHVvcGVuL2Z0YXBpNGdvL3BiL3Fv", 
          "dGdldGZ1dHVyZWluZm8="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Qot_GetFutureInfo_TradeTime__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Qot_GetFutureInfo_TradeTime__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime, global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.Builder>(internal__static_Qot_GetFutureInfo_TradeTime__Descriptor,
                new string[] { "Begin", "End", });
        internal__static_Qot_GetFutureInfo_FutureInfo__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Qot_GetFutureInfo_FutureInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo, global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.Builder>(internal__static_Qot_GetFutureInfo_FutureInfo__Descriptor,
                new string[] { "Name", "Security", "LastTradeTime", "LastTradeTimestamp", "Owner", "OwnerOther", "Exchange", "ContractType", "ContractSize", "ContractSizeUnit", "QuoteCurrency", "MinVar", "MinVarUnit", "QuoteUnit", "TradeTime", "TimeZone", "ExchangeFormatUrl", });
        internal__static_Qot_GetFutureInfo_C2S__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Qot_GetFutureInfo_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S, global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.Builder>(internal__static_Qot_GetFutureInfo_C2S__Descriptor,
                new string[] { "SecurityList", });
        internal__static_Qot_GetFutureInfo_S2C__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Qot_GetFutureInfo_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C, global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.Builder>(internal__static_Qot_GetFutureInfo_S2C__Descriptor,
                new string[] { "FutureInfoList", });
        internal__static_Qot_GetFutureInfo_Request__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Qot_GetFutureInfo_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.Request, global::Futu.OpenApi.Pb.QotGetFutureInfo.Request.Builder>(internal__static_Qot_GetFutureInfo_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Qot_GetFutureInfo_Response__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Qot_GetFutureInfo_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetFutureInfo.Response, global::Futu.OpenApi.Pb.QotGetFutureInfo.Response.Builder>(internal__static_Qot_GetFutureInfo_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          global::Futu.OpenApi.Pb.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class TradeTime : pb::GeneratedMessage<TradeTime, TradeTime.Builder> {
      private TradeTime() { }
      private static readonly TradeTime defaultInstance = new TradeTime().MakeReadOnly();
      private static readonly string[] _tradeTimeFieldNames = new string[] { "begin", "end" };
      private static readonly uint[] _tradeTimeFieldTags = new uint[] { 9, 17 };
      public static TradeTime DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override TradeTime DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override TradeTime ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_TradeTime__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<TradeTime, TradeTime.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_TradeTime__FieldAccessorTable; }
      }
      
      public const int BeginFieldNumber = 1;
      private bool hasBegin;
      private double begin_;
      public bool HasBegin {
        get { return hasBegin; }
      }
      public double Begin {
        get { return begin_; }
      }
      
      public const int EndFieldNumber = 2;
      private bool hasEnd;
      private double end_;
      public bool HasEnd {
        get { return hasEnd; }
      }
      public double End {
        get { return end_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _tradeTimeFieldNames;
        if (hasBegin) {
          output.WriteDouble(1, field_names[0], Begin);
        }
        if (hasEnd) {
          output.WriteDouble(2, field_names[1], End);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBegin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(1, Begin);
        }
        if (hasEnd) {
          size += pb::CodedOutputStream.ComputeDoubleSize(2, End);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static TradeTime ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static TradeTime ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static TradeTime ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static TradeTime ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static TradeTime ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static TradeTime ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static TradeTime ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static TradeTime ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static TradeTime ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static TradeTime ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private TradeTime MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(TradeTime prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<TradeTime, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(TradeTime cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private TradeTime result;
        
        private TradeTime PrepareBuilder() {
          if (resultIsReadOnly) {
            TradeTime original = result;
            result = new TradeTime();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override TradeTime MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.Descriptor; }
        }
        
        public override TradeTime DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.DefaultInstance; }
        }
        
        public override TradeTime BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is TradeTime) {
            return MergeFrom((TradeTime) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(TradeTime other) {
          if (other == global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasBegin) {
            Begin = other.Begin;
          }
          if (other.HasEnd) {
            End = other.End;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_tradeTimeFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _tradeTimeFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 9: {
                result.hasBegin = input.ReadDouble(ref result.begin_);
                break;
              }
              case 17: {
                result.hasEnd = input.ReadDouble(ref result.end_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasBegin {
          get { return result.hasBegin; }
        }
        public double Begin {
          get { return result.Begin; }
          set { SetBegin(value); }
        }
        public Builder SetBegin(double value) {
          PrepareBuilder();
          result.hasBegin = true;
          result.begin_ = value;
          return this;
        }
        public Builder ClearBegin() {
          PrepareBuilder();
          result.hasBegin = false;
          result.begin_ = 0D;
          return this;
        }
        
        public bool HasEnd {
          get { return result.hasEnd; }
        }
        public double End {
          get { return result.End; }
          set { SetEnd(value); }
        }
        public Builder SetEnd(double value) {
          PrepareBuilder();
          result.hasEnd = true;
          result.end_ = value;
          return this;
        }
        public Builder ClearEnd() {
          PrepareBuilder();
          result.hasEnd = false;
          result.end_ = 0D;
          return this;
        }
      }
      static TradeTime() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetFutureInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class FutureInfo : pb::GeneratedMessage<FutureInfo, FutureInfo.Builder> {
      private FutureInfo() { }
      private static readonly FutureInfo defaultInstance = new FutureInfo().MakeReadOnly();
      private static readonly string[] _futureInfoFieldNames = new string[] { "contractSize", "contractSizeUnit", "contractType", "exchange", "exchangeFormatUrl", "lastTradeTime", "lastTradeTimestamp", "minVar", "minVarUnit", "name", "owner", "ownerOther", "quoteCurrency", "quoteUnit", "security", "timeZone", "tradeTime" };
      private static readonly uint[] _futureInfoFieldTags = new uint[] { 73, 82, 66, 58, 138, 26, 33, 97, 106, 10, 42, 50, 90, 114, 18, 130, 122 };
      public static FutureInfo DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override FutureInfo DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override FutureInfo ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_FutureInfo__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<FutureInfo, FutureInfo.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_FutureInfo__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int SecurityFieldNumber = 2;
      private bool hasSecurity;
      private global::Futu.OpenApi.Pb.QotCommon.Security security_;
      public bool HasSecurity {
        get { return hasSecurity; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Security {
        get { return security_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int LastTradeTimeFieldNumber = 3;
      private bool hasLastTradeTime;
      private string lastTradeTime_ = "";
      public bool HasLastTradeTime {
        get { return hasLastTradeTime; }
      }
      public string LastTradeTime {
        get { return lastTradeTime_; }
      }
      
      public const int LastTradeTimestampFieldNumber = 4;
      private bool hasLastTradeTimestamp;
      private double lastTradeTimestamp_;
      public bool HasLastTradeTimestamp {
        get { return hasLastTradeTimestamp; }
      }
      public double LastTradeTimestamp {
        get { return lastTradeTimestamp_; }
      }
      
      public const int OwnerFieldNumber = 5;
      private bool hasOwner;
      private global::Futu.OpenApi.Pb.QotCommon.Security owner_;
      public bool HasOwner {
        get { return hasOwner; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Owner {
        get { return owner_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int OwnerOtherFieldNumber = 6;
      private bool hasOwnerOther;
      private string ownerOther_ = "";
      public bool HasOwnerOther {
        get { return hasOwnerOther; }
      }
      public string OwnerOther {
        get { return ownerOther_; }
      }
      
      public const int ExchangeFieldNumber = 7;
      private bool hasExchange;
      private string exchange_ = "";
      public bool HasExchange {
        get { return hasExchange; }
      }
      public string Exchange {
        get { return exchange_; }
      }
      
      public const int ContractTypeFieldNumber = 8;
      private bool hasContractType;
      private string contractType_ = "";
      public bool HasContractType {
        get { return hasContractType; }
      }
      public string ContractType {
        get { return contractType_; }
      }
      
      public const int ContractSizeFieldNumber = 9;
      private bool hasContractSize;
      private double contractSize_;
      public bool HasContractSize {
        get { return hasContractSize; }
      }
      public double ContractSize {
        get { return contractSize_; }
      }
      
      public const int ContractSizeUnitFieldNumber = 10;
      private bool hasContractSizeUnit;
      private string contractSizeUnit_ = "";
      public bool HasContractSizeUnit {
        get { return hasContractSizeUnit; }
      }
      public string ContractSizeUnit {
        get { return contractSizeUnit_; }
      }
      
      public const int QuoteCurrencyFieldNumber = 11;
      private bool hasQuoteCurrency;
      private string quoteCurrency_ = "";
      public bool HasQuoteCurrency {
        get { return hasQuoteCurrency; }
      }
      public string QuoteCurrency {
        get { return quoteCurrency_; }
      }
      
      public const int MinVarFieldNumber = 12;
      private bool hasMinVar;
      private double minVar_;
      public bool HasMinVar {
        get { return hasMinVar; }
      }
      public double MinVar {
        get { return minVar_; }
      }
      
      public const int MinVarUnitFieldNumber = 13;
      private bool hasMinVarUnit;
      private string minVarUnit_ = "";
      public bool HasMinVarUnit {
        get { return hasMinVarUnit; }
      }
      public string MinVarUnit {
        get { return minVarUnit_; }
      }
      
      public const int QuoteUnitFieldNumber = 14;
      private bool hasQuoteUnit;
      private string quoteUnit_ = "";
      public bool HasQuoteUnit {
        get { return hasQuoteUnit; }
      }
      public string QuoteUnit {
        get { return quoteUnit_; }
      }
      
      public const int TradeTimeFieldNumber = 15;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime> tradeTime_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime> TradeTimeList {
        get { return tradeTime_; }
      }
      public int TradeTimeCount {
        get { return tradeTime_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime GetTradeTime(int index) {
        return tradeTime_[index];
      }
      
      public const int TimeZoneFieldNumber = 16;
      private bool hasTimeZone;
      private string timeZone_ = "";
      public bool HasTimeZone {
        get { return hasTimeZone; }
      }
      public string TimeZone {
        get { return timeZone_; }
      }
      
      public const int ExchangeFormatUrlFieldNumber = 17;
      private bool hasExchangeFormatUrl;
      private string exchangeFormatUrl_ = "";
      public bool HasExchangeFormatUrl {
        get { return hasExchangeFormatUrl; }
      }
      public string ExchangeFormatUrl {
        get { return exchangeFormatUrl_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasName) return false;
          if (!hasSecurity) return false;
          if (!hasLastTradeTime) return false;
          if (!hasOwnerOther) return false;
          if (!hasExchange) return false;
          if (!hasContractType) return false;
          if (!hasContractSize) return false;
          if (!hasContractSizeUnit) return false;
          if (!hasQuoteCurrency) return false;
          if (!hasMinVar) return false;
          if (!hasMinVarUnit) return false;
          if (!hasTimeZone) return false;
          if (!hasExchangeFormatUrl) return false;
          if (!Security.IsInitialized) return false;
          if (HasOwner) {
            if (!Owner.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _futureInfoFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[9], Name);
        }
        if (hasSecurity) {
          output.WriteMessage(2, field_names[14], Security);
        }
        if (hasLastTradeTime) {
          output.WriteString(3, field_names[5], LastTradeTime);
        }
        if (hasLastTradeTimestamp) {
          output.WriteDouble(4, field_names[6], LastTradeTimestamp);
        }
        if (hasOwner) {
          output.WriteMessage(5, field_names[10], Owner);
        }
        if (hasOwnerOther) {
          output.WriteString(6, field_names[11], OwnerOther);
        }
        if (hasExchange) {
          output.WriteString(7, field_names[3], Exchange);
        }
        if (hasContractType) {
          output.WriteString(8, field_names[2], ContractType);
        }
        if (hasContractSize) {
          output.WriteDouble(9, field_names[0], ContractSize);
        }
        if (hasContractSizeUnit) {
          output.WriteString(10, field_names[1], ContractSizeUnit);
        }
        if (hasQuoteCurrency) {
          output.WriteString(11, field_names[12], QuoteCurrency);
        }
        if (hasMinVar) {
          output.WriteDouble(12, field_names[7], MinVar);
        }
        if (hasMinVarUnit) {
          output.WriteString(13, field_names[8], MinVarUnit);
        }
        if (hasQuoteUnit) {
          output.WriteString(14, field_names[13], QuoteUnit);
        }
        if (tradeTime_.Count > 0) {
          output.WriteMessageArray(15, field_names[16], tradeTime_);
        }
        if (hasTimeZone) {
          output.WriteString(16, field_names[15], TimeZone);
        }
        if (hasExchangeFormatUrl) {
          output.WriteString(17, field_names[4], ExchangeFormatUrl);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasSecurity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Security);
        }
        if (hasLastTradeTime) {
          size += pb::CodedOutputStream.ComputeStringSize(3, LastTradeTime);
        }
        if (hasLastTradeTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, LastTradeTimestamp);
        }
        if (hasOwner) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Owner);
        }
        if (hasOwnerOther) {
          size += pb::CodedOutputStream.ComputeStringSize(6, OwnerOther);
        }
        if (hasExchange) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Exchange);
        }
        if (hasContractType) {
          size += pb::CodedOutputStream.ComputeStringSize(8, ContractType);
        }
        if (hasContractSize) {
          size += pb::CodedOutputStream.ComputeDoubleSize(9, ContractSize);
        }
        if (hasContractSizeUnit) {
          size += pb::CodedOutputStream.ComputeStringSize(10, ContractSizeUnit);
        }
        if (hasQuoteCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(11, QuoteCurrency);
        }
        if (hasMinVar) {
          size += pb::CodedOutputStream.ComputeDoubleSize(12, MinVar);
        }
        if (hasMinVarUnit) {
          size += pb::CodedOutputStream.ComputeStringSize(13, MinVarUnit);
        }
        if (hasQuoteUnit) {
          size += pb::CodedOutputStream.ComputeStringSize(14, QuoteUnit);
        }
        foreach (global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime element in TradeTimeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(15, element);
        }
        if (hasTimeZone) {
          size += pb::CodedOutputStream.ComputeStringSize(16, TimeZone);
        }
        if (hasExchangeFormatUrl) {
          size += pb::CodedOutputStream.ComputeStringSize(17, ExchangeFormatUrl);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static FutureInfo ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static FutureInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static FutureInfo ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static FutureInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static FutureInfo ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static FutureInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static FutureInfo ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static FutureInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static FutureInfo ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static FutureInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private FutureInfo MakeReadOnly() {
        tradeTime_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(FutureInfo prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<FutureInfo, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(FutureInfo cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private FutureInfo result;
        
        private FutureInfo PrepareBuilder() {
          if (resultIsReadOnly) {
            FutureInfo original = result;
            result = new FutureInfo();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override FutureInfo MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.Descriptor; }
        }
        
        public override FutureInfo DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.DefaultInstance; }
        }
        
        public override FutureInfo BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is FutureInfo) {
            return MergeFrom((FutureInfo) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(FutureInfo other) {
          if (other == global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasSecurity) {
            MergeSecurity(other.Security);
          }
          if (other.HasLastTradeTime) {
            LastTradeTime = other.LastTradeTime;
          }
          if (other.HasLastTradeTimestamp) {
            LastTradeTimestamp = other.LastTradeTimestamp;
          }
          if (other.HasOwner) {
            MergeOwner(other.Owner);
          }
          if (other.HasOwnerOther) {
            OwnerOther = other.OwnerOther;
          }
          if (other.HasExchange) {
            Exchange = other.Exchange;
          }
          if (other.HasContractType) {
            ContractType = other.ContractType;
          }
          if (other.HasContractSize) {
            ContractSize = other.ContractSize;
          }
          if (other.HasContractSizeUnit) {
            ContractSizeUnit = other.ContractSizeUnit;
          }
          if (other.HasQuoteCurrency) {
            QuoteCurrency = other.QuoteCurrency;
          }
          if (other.HasMinVar) {
            MinVar = other.MinVar;
          }
          if (other.HasMinVarUnit) {
            MinVarUnit = other.MinVarUnit;
          }
          if (other.HasQuoteUnit) {
            QuoteUnit = other.QuoteUnit;
          }
          if (other.tradeTime_.Count != 0) {
            result.tradeTime_.Add(other.tradeTime_);
          }
          if (other.HasTimeZone) {
            TimeZone = other.TimeZone;
          }
          if (other.HasExchangeFormatUrl) {
            ExchangeFormatUrl = other.ExchangeFormatUrl;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_futureInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _futureInfoFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasSecurity) {
                  subBuilder.MergeFrom(Security);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Security = subBuilder.BuildPartial();
                break;
              }
              case 26: {
                result.hasLastTradeTime = input.ReadString(ref result.lastTradeTime_);
                break;
              }
              case 33: {
                result.hasLastTradeTimestamp = input.ReadDouble(ref result.lastTradeTimestamp_);
                break;
              }
              case 42: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasOwner) {
                  subBuilder.MergeFrom(Owner);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Owner = subBuilder.BuildPartial();
                break;
              }
              case 50: {
                result.hasOwnerOther = input.ReadString(ref result.ownerOther_);
                break;
              }
              case 58: {
                result.hasExchange = input.ReadString(ref result.exchange_);
                break;
              }
              case 66: {
                result.hasContractType = input.ReadString(ref result.contractType_);
                break;
              }
              case 73: {
                result.hasContractSize = input.ReadDouble(ref result.contractSize_);
                break;
              }
              case 82: {
                result.hasContractSizeUnit = input.ReadString(ref result.contractSizeUnit_);
                break;
              }
              case 90: {
                result.hasQuoteCurrency = input.ReadString(ref result.quoteCurrency_);
                break;
              }
              case 97: {
                result.hasMinVar = input.ReadDouble(ref result.minVar_);
                break;
              }
              case 106: {
                result.hasMinVarUnit = input.ReadString(ref result.minVarUnit_);
                break;
              }
              case 114: {
                result.hasQuoteUnit = input.ReadString(ref result.quoteUnit_);
                break;
              }
              case 122: {
                input.ReadMessageArray(tag, field_name, result.tradeTime_, global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.DefaultInstance, extensionRegistry);
                break;
              }
              case 130: {
                result.hasTimeZone = input.ReadString(ref result.timeZone_);
                break;
              }
              case 138: {
                result.hasExchangeFormatUrl = input.ReadString(ref result.exchangeFormatUrl_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasSecurity {
         get { return result.hasSecurity; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Security {
          get { return result.Security; }
          set { SetSecurity(value); }
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = value;
          return this;
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = builderForValue.Build();
          return this;
        }
        public Builder MergeSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasSecurity &&
              result.security_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.security_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.security_).MergeFrom(value).BuildPartial();
          } else {
            result.security_ = value;
          }
          result.hasSecurity = true;
          return this;
        }
        public Builder ClearSecurity() {
          PrepareBuilder();
          result.hasSecurity = false;
          result.security_ = null;
          return this;
        }
        
        public bool HasLastTradeTime {
          get { return result.hasLastTradeTime; }
        }
        public string LastTradeTime {
          get { return result.LastTradeTime; }
          set { SetLastTradeTime(value); }
        }
        public Builder SetLastTradeTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasLastTradeTime = true;
          result.lastTradeTime_ = value;
          return this;
        }
        public Builder ClearLastTradeTime() {
          PrepareBuilder();
          result.hasLastTradeTime = false;
          result.lastTradeTime_ = "";
          return this;
        }
        
        public bool HasLastTradeTimestamp {
          get { return result.hasLastTradeTimestamp; }
        }
        public double LastTradeTimestamp {
          get { return result.LastTradeTimestamp; }
          set { SetLastTradeTimestamp(value); }
        }
        public Builder SetLastTradeTimestamp(double value) {
          PrepareBuilder();
          result.hasLastTradeTimestamp = true;
          result.lastTradeTimestamp_ = value;
          return this;
        }
        public Builder ClearLastTradeTimestamp() {
          PrepareBuilder();
          result.hasLastTradeTimestamp = false;
          result.lastTradeTimestamp_ = 0D;
          return this;
        }
        
        public bool HasOwner {
         get { return result.hasOwner; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Owner {
          get { return result.Owner; }
          set { SetOwner(value); }
        }
        public Builder SetOwner(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasOwner = true;
          result.owner_ = value;
          return this;
        }
        public Builder SetOwner(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasOwner = true;
          result.owner_ = builderForValue.Build();
          return this;
        }
        public Builder MergeOwner(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasOwner &&
              result.owner_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.owner_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.owner_).MergeFrom(value).BuildPartial();
          } else {
            result.owner_ = value;
          }
          result.hasOwner = true;
          return this;
        }
        public Builder ClearOwner() {
          PrepareBuilder();
          result.hasOwner = false;
          result.owner_ = null;
          return this;
        }
        
        public bool HasOwnerOther {
          get { return result.hasOwnerOther; }
        }
        public string OwnerOther {
          get { return result.OwnerOther; }
          set { SetOwnerOther(value); }
        }
        public Builder SetOwnerOther(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasOwnerOther = true;
          result.ownerOther_ = value;
          return this;
        }
        public Builder ClearOwnerOther() {
          PrepareBuilder();
          result.hasOwnerOther = false;
          result.ownerOther_ = "";
          return this;
        }
        
        public bool HasExchange {
          get { return result.hasExchange; }
        }
        public string Exchange {
          get { return result.Exchange; }
          set { SetExchange(value); }
        }
        public Builder SetExchange(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasExchange = true;
          result.exchange_ = value;
          return this;
        }
        public Builder ClearExchange() {
          PrepareBuilder();
          result.hasExchange = false;
          result.exchange_ = "";
          return this;
        }
        
        public bool HasContractType {
          get { return result.hasContractType; }
        }
        public string ContractType {
          get { return result.ContractType; }
          set { SetContractType(value); }
        }
        public Builder SetContractType(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasContractType = true;
          result.contractType_ = value;
          return this;
        }
        public Builder ClearContractType() {
          PrepareBuilder();
          result.hasContractType = false;
          result.contractType_ = "";
          return this;
        }
        
        public bool HasContractSize {
          get { return result.hasContractSize; }
        }
        public double ContractSize {
          get { return result.ContractSize; }
          set { SetContractSize(value); }
        }
        public Builder SetContractSize(double value) {
          PrepareBuilder();
          result.hasContractSize = true;
          result.contractSize_ = value;
          return this;
        }
        public Builder ClearContractSize() {
          PrepareBuilder();
          result.hasContractSize = false;
          result.contractSize_ = 0D;
          return this;
        }
        
        public bool HasContractSizeUnit {
          get { return result.hasContractSizeUnit; }
        }
        public string ContractSizeUnit {
          get { return result.ContractSizeUnit; }
          set { SetContractSizeUnit(value); }
        }
        public Builder SetContractSizeUnit(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasContractSizeUnit = true;
          result.contractSizeUnit_ = value;
          return this;
        }
        public Builder ClearContractSizeUnit() {
          PrepareBuilder();
          result.hasContractSizeUnit = false;
          result.contractSizeUnit_ = "";
          return this;
        }
        
        public bool HasQuoteCurrency {
          get { return result.hasQuoteCurrency; }
        }
        public string QuoteCurrency {
          get { return result.QuoteCurrency; }
          set { SetQuoteCurrency(value); }
        }
        public Builder SetQuoteCurrency(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasQuoteCurrency = true;
          result.quoteCurrency_ = value;
          return this;
        }
        public Builder ClearQuoteCurrency() {
          PrepareBuilder();
          result.hasQuoteCurrency = false;
          result.quoteCurrency_ = "";
          return this;
        }
        
        public bool HasMinVar {
          get { return result.hasMinVar; }
        }
        public double MinVar {
          get { return result.MinVar; }
          set { SetMinVar(value); }
        }
        public Builder SetMinVar(double value) {
          PrepareBuilder();
          result.hasMinVar = true;
          result.minVar_ = value;
          return this;
        }
        public Builder ClearMinVar() {
          PrepareBuilder();
          result.hasMinVar = false;
          result.minVar_ = 0D;
          return this;
        }
        
        public bool HasMinVarUnit {
          get { return result.hasMinVarUnit; }
        }
        public string MinVarUnit {
          get { return result.MinVarUnit; }
          set { SetMinVarUnit(value); }
        }
        public Builder SetMinVarUnit(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasMinVarUnit = true;
          result.minVarUnit_ = value;
          return this;
        }
        public Builder ClearMinVarUnit() {
          PrepareBuilder();
          result.hasMinVarUnit = false;
          result.minVarUnit_ = "";
          return this;
        }
        
        public bool HasQuoteUnit {
          get { return result.hasQuoteUnit; }
        }
        public string QuoteUnit {
          get { return result.QuoteUnit; }
          set { SetQuoteUnit(value); }
        }
        public Builder SetQuoteUnit(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasQuoteUnit = true;
          result.quoteUnit_ = value;
          return this;
        }
        public Builder ClearQuoteUnit() {
          PrepareBuilder();
          result.hasQuoteUnit = false;
          result.quoteUnit_ = "";
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime> TradeTimeList {
          get { return PrepareBuilder().tradeTime_; }
        }
        public int TradeTimeCount {
          get { return result.TradeTimeCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime GetTradeTime(int index) {
          return result.GetTradeTime(index);
        }
        public Builder SetTradeTime(int index, global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.tradeTime_[index] = value;
          return this;
        }
        public Builder SetTradeTime(int index, global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.tradeTime_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddTradeTime(global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.tradeTime_.Add(value);
          return this;
        }
        public Builder AddTradeTime(global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.tradeTime_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeTradeTime(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetFutureInfo.TradeTime> values) {
          PrepareBuilder();
          result.tradeTime_.Add(values);
          return this;
        }
        public Builder ClearTradeTime() {
          PrepareBuilder();
          result.tradeTime_.Clear();
          return this;
        }
        
        public bool HasTimeZone {
          get { return result.hasTimeZone; }
        }
        public string TimeZone {
          get { return result.TimeZone; }
          set { SetTimeZone(value); }
        }
        public Builder SetTimeZone(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasTimeZone = true;
          result.timeZone_ = value;
          return this;
        }
        public Builder ClearTimeZone() {
          PrepareBuilder();
          result.hasTimeZone = false;
          result.timeZone_ = "";
          return this;
        }
        
        public bool HasExchangeFormatUrl {
          get { return result.hasExchangeFormatUrl; }
        }
        public string ExchangeFormatUrl {
          get { return result.ExchangeFormatUrl; }
          set { SetExchangeFormatUrl(value); }
        }
        public Builder SetExchangeFormatUrl(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasExchangeFormatUrl = true;
          result.exchangeFormatUrl_ = value;
          return this;
        }
        public Builder ClearExchangeFormatUrl() {
          PrepareBuilder();
          result.hasExchangeFormatUrl = false;
          result.exchangeFormatUrl_ = "";
          return this;
        }
      }
      static FutureInfo() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetFutureInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "securityList" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 10 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_C2S__FieldAccessorTable; }
      }
      
      public const int SecurityListFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> securityList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security>();
      public scg::IList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
        get { return securityList_; }
      }
      public int SecurityListCount {
        get { return securityList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
        return securityList_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (securityList_.Count > 0) {
          output.WriteMessageArray(1, field_names[0], securityList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        securityList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.securityList_.Count != 0) {
            result.securityList_.Add(other.securityList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.securityList_, global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
          get { return PrepareBuilder().securityList_; }
        }
        public int SecurityListCount {
          get { return result.SecurityListCount; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
          return result.GetSecurityList(index);
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_[index] = value;
          return this;
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_.Add(value);
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeSecurityList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotCommon.Security> values) {
          PrepareBuilder();
          result.securityList_.Add(values);
          return this;
        }
        public Builder ClearSecurityList() {
          PrepareBuilder();
          result.securityList_.Clear();
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetFutureInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "futureInfoList" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 10 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_S2C__FieldAccessorTable; }
      }
      
      public const int FutureInfoListFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo> futureInfoList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo> FutureInfoListList {
        get { return futureInfoList_; }
      }
      public int FutureInfoListCount {
        get { return futureInfoList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo GetFutureInfoList(int index) {
        return futureInfoList_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo element in FutureInfoListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (futureInfoList_.Count > 0) {
          output.WriteMessageArray(1, field_names[0], futureInfoList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo element in FutureInfoListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        futureInfoList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.futureInfoList_.Count != 0) {
            result.futureInfoList_.Add(other.futureInfoList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.futureInfoList_, global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo> FutureInfoListList {
          get { return PrepareBuilder().futureInfoList_; }
        }
        public int FutureInfoListCount {
          get { return result.FutureInfoListCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo GetFutureInfoList(int index) {
          return result.GetFutureInfoList(index);
        }
        public Builder SetFutureInfoList(int index, global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.futureInfoList_[index] = value;
          return this;
        }
        public Builder SetFutureInfoList(int index, global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.futureInfoList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddFutureInfoList(global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.futureInfoList_.Add(value);
          return this;
        }
        public Builder AddFutureInfoList(global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.futureInfoList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeFutureInfoList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetFutureInfo.FutureInfo> values) {
          PrepareBuilder();
          result.futureInfoList_.Add(values);
          return this;
        }
        public Builder ClearFutureInfoList() {
          PrepareBuilder();
          result.futureInfoList_.Clear();
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetFutureInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.QotGetFutureInfo.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.QotGetFutureInfo.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetFutureInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.internal__static_Qot_GetFutureInfo_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetFutureInfo.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.QotGetFutureInfo.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.QotGetFutureInfo.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetFutureInfo.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
