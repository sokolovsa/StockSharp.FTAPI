// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GetUserInfo {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_GetUserInfo_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.C2S, global::Futu.OpenApi.Pb.GetUserInfo.C2S.Builder> internal__static_GetUserInfo_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetUserInfo_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.S2C, global::Futu.OpenApi.Pb.GetUserInfo.S2C.Builder> internal__static_GetUserInfo_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetUserInfo_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.Request, global::Futu.OpenApi.Pb.GetUserInfo.Request.Builder> internal__static_GetUserInfo_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetUserInfo_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.Response, global::Futu.OpenApi.Pb.GetUserInfo.Response.Builder> internal__static_GetUserInfo_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GetUserInfo() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFHZXRVc2VySW5mby5wcm90bxILR2V0VXNlckluZm8aDENvbW1vbi5wcm90", 
            "byIZCgNDMlMSEgoEZmxhZxgCIAEoBVIEZmxhZyLhBQoDUzJDEhoKCG5pY2tO", 
            "YW1lGAEgASgJUghuaWNrTmFtZRIcCglhdmF0YXJVcmwYAiABKAlSCWF2YXRh", 
            "clVybBIaCghhcGlMZXZlbBgDIAEoCVIIYXBpTGV2ZWwSHgoKaGtRb3RSaWdo", 
            "dBgEIAEoBVIKaGtRb3RSaWdodBIeCgp1c1FvdFJpZ2h0GAUgASgFUgp1c1Fv", 
            "dFJpZ2h0Eh4KCmNuUW90UmlnaHQYBiABKAVSCmNuUW90UmlnaHQSNAoVaXNO", 
            "ZWVkQWdyZWVEaXNjbGFpbWVyGAcgASgIUhVpc05lZWRBZ3JlZURpc2NsYWlt", 
            "ZXISFgoGdXNlcklEGAggASgDUgZ1c2VySUQSHgoKdXBkYXRlVHlwZRgJIAEo", 
            "BVIKdXBkYXRlVHlwZRIWCgZ3ZWJLZXkYCiABKAlSBndlYktleRImCg53ZWJK", 
            "dW1wVXJsSGVhZBgSIAEoCVIOd2ViSnVtcFVybEhlYWQSKgoQaGtPcHRpb25R", 
            "b3RSaWdodBgLIAEoBVIQaGtPcHRpb25Rb3RSaWdodBIwChNoYXNVU09wdGlv", 
            "blFvdFJpZ2h0GAwgASgIUhNoYXNVU09wdGlvblFvdFJpZ2h0EioKEGhrRnV0", 
            "dXJlUW90UmlnaHQYDSABKAVSEGhrRnV0dXJlUW90UmlnaHQSGgoIc3ViUXVv", 
            "dGEYDiABKAVSCHN1YlF1b3RhEiYKDmhpc3RvcnlLTFF1b3RhGA8gASgFUg5o", 
            "aXN0b3J5S0xRdW90YRIqChB1c0Z1dHVyZVFvdFJpZ2h0GBAgASgFUhB1c0Z1", 
            "dHVyZVFvdFJpZ2h0EioKEHVzT3B0aW9uUW90UmlnaHQYESABKAVSEHVzT3B0", 
            "aW9uUW90UmlnaHQSKAoPdXNlckF0dHJpYnV0aW9uGBMgASgFUg91c2VyQXR0", 
            "cmlidXRpb24SJgoOdXBkYXRlV2hhdHNOZXcYFCABKAlSDnVwZGF0ZVdoYXRz", 
            "TmV3Ii0KB1JlcXVlc3QSIgoDYzJzGAEgAigLMhAuR2V0VXNlckluZm8uQzJT", 
            "UgNjMnMigAEKCFJlc3BvbnNlEh4KB3JldFR5cGUYASACKAU6BC00MDBSB3Jl", 
            "dFR5cGUSFgoGcmV0TXNnGAIgASgJUgZyZXRNc2cSGAoHZXJyQ29kZRgDIAEo", 
            "BVIHZXJyQ29kZRIiCgNzMmMYBCABKAsyEC5HZXRVc2VySW5mby5TMkNSA3My", 
            "YypOCgpVcGRhdGVUeXBlEhMKD1VwZGF0ZVR5cGVfTm9uZRAAEhUKEVVwZGF0", 
            "ZVR5cGVfQWR2aWNlEAESFAoQVXBkYXRlVHlwZV9Gb3JjZRACKq4BCg1Vc2Vy", 
            "SW5mb0ZpZWxkEhcKE1VzZXJJbmZvRmllbGRfQmFzaWMQARIVChFVc2VySW5m", 
            "b0ZpZWxkX0FQSRACEhoKFlVzZXJJbmZvRmllbGRfUW90UmlnaHQQBBIcChhV", 
            "c2VySW5mb0ZpZWxkX0Rpc2NsYWltZXIQCBIYChRVc2VySW5mb0ZpZWxkX1Vw", 
            "ZGF0ZRAQEhkKFFVzZXJJbmZvRmllbGRfV2ViS2V5EIAQQkIKE2NvbS5mdXR1", 
            "Lm9wZW5hcGkucGJaK2dpdGh1Yi5jb20vZnV0dW9wZW4vZnRhcGk0Z28vcGIv", 
          "Z2V0dXNlcmluZm8="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_GetUserInfo_C2S__Descriptor = Descriptor.MessageTypes[0];
        internal__static_GetUserInfo_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.C2S, global::Futu.OpenApi.Pb.GetUserInfo.C2S.Builder>(internal__static_GetUserInfo_C2S__Descriptor,
                new string[] { "Flag", });
        internal__static_GetUserInfo_S2C__Descriptor = Descriptor.MessageTypes[1];
        internal__static_GetUserInfo_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.S2C, global::Futu.OpenApi.Pb.GetUserInfo.S2C.Builder>(internal__static_GetUserInfo_S2C__Descriptor,
                new string[] { "NickName", "AvatarUrl", "ApiLevel", "HkQotRight", "UsQotRight", "CnQotRight", "IsNeedAgreeDisclaimer", "UserID", "UpdateType", "WebKey", "WebJumpUrlHead", "HkOptionQotRight", "HasUSOptionQotRight", "HkFutureQotRight", "SubQuota", "HistoryKLQuota", "UsFutureQotRight", "UsOptionQotRight", "UserAttribution", "UpdateWhatsNew", });
        internal__static_GetUserInfo_Request__Descriptor = Descriptor.MessageTypes[2];
        internal__static_GetUserInfo_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.Request, global::Futu.OpenApi.Pb.GetUserInfo.Request.Builder>(internal__static_GetUserInfo_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_GetUserInfo_Response__Descriptor = Descriptor.MessageTypes[3];
        internal__static_GetUserInfo_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetUserInfo.Response, global::Futu.OpenApi.Pb.GetUserInfo.Response.Builder>(internal__static_GetUserInfo_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum UpdateType {
      UpdateType_None = 0,
      UpdateType_Advice = 1,
      UpdateType_Force = 2,
    }
    
    public enum UserInfoField {
      UserInfoField_Basic = 1,
      UserInfoField_API = 2,
      UserInfoField_QotRight = 4,
      UserInfoField_Disclaimer = 8,
      UserInfoField_Update = 16,
      UserInfoField_WebKey = 2048,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "flag" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 16 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_C2S__FieldAccessorTable; }
      }
      
      public const int FlagFieldNumber = 2;
      private bool hasFlag;
      private int flag_;
      public bool HasFlag {
        get { return hasFlag; }
      }
      public int Flag {
        get { return flag_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasFlag) {
          output.WriteInt32(2, field_names[0], Flag);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFlag) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Flag);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.GetUserInfo.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasFlag) {
            Flag = other.Flag;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 16: {
                result.hasFlag = input.ReadInt32(ref result.flag_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasFlag {
          get { return result.hasFlag; }
        }
        public int Flag {
          get { return result.Flag; }
          set { SetFlag(value); }
        }
        public Builder SetFlag(int value) {
          PrepareBuilder();
          result.hasFlag = true;
          result.flag_ = value;
          return this;
        }
        public Builder ClearFlag() {
          PrepareBuilder();
          result.hasFlag = false;
          result.flag_ = 0;
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetUserInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "apiLevel", "avatarUrl", "cnQotRight", "hasUSOptionQotRight", "historyKLQuota", "hkFutureQotRight", "hkOptionQotRight", "hkQotRight", "isNeedAgreeDisclaimer", "nickName", "subQuota", "updateType", "updateWhatsNew", "usFutureQotRight", "usOptionQotRight", "usQotRight", "userAttribution", "userID", "webJumpUrlHead", "webKey" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 26, 18, 48, 96, 120, 104, 88, 32, 56, 10, 112, 72, 162, 128, 136, 40, 152, 64, 146, 82 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_S2C__FieldAccessorTable; }
      }
      
      public const int NickNameFieldNumber = 1;
      private bool hasNickName;
      private string nickName_ = "";
      public bool HasNickName {
        get { return hasNickName; }
      }
      public string NickName {
        get { return nickName_; }
      }
      
      public const int AvatarUrlFieldNumber = 2;
      private bool hasAvatarUrl;
      private string avatarUrl_ = "";
      public bool HasAvatarUrl {
        get { return hasAvatarUrl; }
      }
      public string AvatarUrl {
        get { return avatarUrl_; }
      }
      
      public const int ApiLevelFieldNumber = 3;
      private bool hasApiLevel;
      private string apiLevel_ = "";
      public bool HasApiLevel {
        get { return hasApiLevel; }
      }
      public string ApiLevel {
        get { return apiLevel_; }
      }
      
      public const int HkQotRightFieldNumber = 4;
      private bool hasHkQotRight;
      private int hkQotRight_;
      public bool HasHkQotRight {
        get { return hasHkQotRight; }
      }
      public int HkQotRight {
        get { return hkQotRight_; }
      }
      
      public const int UsQotRightFieldNumber = 5;
      private bool hasUsQotRight;
      private int usQotRight_;
      public bool HasUsQotRight {
        get { return hasUsQotRight; }
      }
      public int UsQotRight {
        get { return usQotRight_; }
      }
      
      public const int CnQotRightFieldNumber = 6;
      private bool hasCnQotRight;
      private int cnQotRight_;
      public bool HasCnQotRight {
        get { return hasCnQotRight; }
      }
      public int CnQotRight {
        get { return cnQotRight_; }
      }
      
      public const int IsNeedAgreeDisclaimerFieldNumber = 7;
      private bool hasIsNeedAgreeDisclaimer;
      private bool isNeedAgreeDisclaimer_;
      public bool HasIsNeedAgreeDisclaimer {
        get { return hasIsNeedAgreeDisclaimer; }
      }
      public bool IsNeedAgreeDisclaimer {
        get { return isNeedAgreeDisclaimer_; }
      }
      
      public const int UserIDFieldNumber = 8;
      private bool hasUserID;
      private long userID_;
      public bool HasUserID {
        get { return hasUserID; }
      }
      public long UserID {
        get { return userID_; }
      }
      
      public const int UpdateTypeFieldNumber = 9;
      private bool hasUpdateType;
      private int updateType_;
      public bool HasUpdateType {
        get { return hasUpdateType; }
      }
      public int UpdateType {
        get { return updateType_; }
      }
      
      public const int WebKeyFieldNumber = 10;
      private bool hasWebKey;
      private string webKey_ = "";
      public bool HasWebKey {
        get { return hasWebKey; }
      }
      public string WebKey {
        get { return webKey_; }
      }
      
      public const int WebJumpUrlHeadFieldNumber = 18;
      private bool hasWebJumpUrlHead;
      private string webJumpUrlHead_ = "";
      public bool HasWebJumpUrlHead {
        get { return hasWebJumpUrlHead; }
      }
      public string WebJumpUrlHead {
        get { return webJumpUrlHead_; }
      }
      
      public const int HkOptionQotRightFieldNumber = 11;
      private bool hasHkOptionQotRight;
      private int hkOptionQotRight_;
      public bool HasHkOptionQotRight {
        get { return hasHkOptionQotRight; }
      }
      public int HkOptionQotRight {
        get { return hkOptionQotRight_; }
      }
      
      public const int HasUSOptionQotRightFieldNumber = 12;
      private bool hasHasUSOptionQotRight;
      private bool hasUSOptionQotRight_;
      public bool HasHasUSOptionQotRight {
        get { return hasHasUSOptionQotRight; }
      }
      public bool HasUSOptionQotRight {
        get { return hasUSOptionQotRight_; }
      }
      
      public const int HkFutureQotRightFieldNumber = 13;
      private bool hasHkFutureQotRight;
      private int hkFutureQotRight_;
      public bool HasHkFutureQotRight {
        get { return hasHkFutureQotRight; }
      }
      public int HkFutureQotRight {
        get { return hkFutureQotRight_; }
      }
      
      public const int SubQuotaFieldNumber = 14;
      private bool hasSubQuota;
      private int subQuota_;
      public bool HasSubQuota {
        get { return hasSubQuota; }
      }
      public int SubQuota {
        get { return subQuota_; }
      }
      
      public const int HistoryKLQuotaFieldNumber = 15;
      private bool hasHistoryKLQuota;
      private int historyKLQuota_;
      public bool HasHistoryKLQuota {
        get { return hasHistoryKLQuota; }
      }
      public int HistoryKLQuota {
        get { return historyKLQuota_; }
      }
      
      public const int UsFutureQotRightFieldNumber = 16;
      private bool hasUsFutureQotRight;
      private int usFutureQotRight_;
      public bool HasUsFutureQotRight {
        get { return hasUsFutureQotRight; }
      }
      public int UsFutureQotRight {
        get { return usFutureQotRight_; }
      }
      
      public const int UsOptionQotRightFieldNumber = 17;
      private bool hasUsOptionQotRight;
      private int usOptionQotRight_;
      public bool HasUsOptionQotRight {
        get { return hasUsOptionQotRight; }
      }
      public int UsOptionQotRight {
        get { return usOptionQotRight_; }
      }
      
      public const int UserAttributionFieldNumber = 19;
      private bool hasUserAttribution;
      private int userAttribution_;
      public bool HasUserAttribution {
        get { return hasUserAttribution; }
      }
      public int UserAttribution {
        get { return userAttribution_; }
      }
      
      public const int UpdateWhatsNewFieldNumber = 20;
      private bool hasUpdateWhatsNew;
      private string updateWhatsNew_ = "";
      public bool HasUpdateWhatsNew {
        get { return hasUpdateWhatsNew; }
      }
      public string UpdateWhatsNew {
        get { return updateWhatsNew_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (hasNickName) {
          output.WriteString(1, field_names[9], NickName);
        }
        if (hasAvatarUrl) {
          output.WriteString(2, field_names[1], AvatarUrl);
        }
        if (hasApiLevel) {
          output.WriteString(3, field_names[0], ApiLevel);
        }
        if (hasHkQotRight) {
          output.WriteInt32(4, field_names[7], HkQotRight);
        }
        if (hasUsQotRight) {
          output.WriteInt32(5, field_names[15], UsQotRight);
        }
        if (hasCnQotRight) {
          output.WriteInt32(6, field_names[2], CnQotRight);
        }
        if (hasIsNeedAgreeDisclaimer) {
          output.WriteBool(7, field_names[8], IsNeedAgreeDisclaimer);
        }
        if (hasUserID) {
          output.WriteInt64(8, field_names[17], UserID);
        }
        if (hasUpdateType) {
          output.WriteInt32(9, field_names[11], UpdateType);
        }
        if (hasWebKey) {
          output.WriteString(10, field_names[19], WebKey);
        }
        if (hasHkOptionQotRight) {
          output.WriteInt32(11, field_names[6], HkOptionQotRight);
        }
        if (hasHasUSOptionQotRight) {
          output.WriteBool(12, field_names[3], HasUSOptionQotRight);
        }
        if (hasHkFutureQotRight) {
          output.WriteInt32(13, field_names[5], HkFutureQotRight);
        }
        if (hasSubQuota) {
          output.WriteInt32(14, field_names[10], SubQuota);
        }
        if (hasHistoryKLQuota) {
          output.WriteInt32(15, field_names[4], HistoryKLQuota);
        }
        if (hasUsFutureQotRight) {
          output.WriteInt32(16, field_names[13], UsFutureQotRight);
        }
        if (hasUsOptionQotRight) {
          output.WriteInt32(17, field_names[14], UsOptionQotRight);
        }
        if (hasWebJumpUrlHead) {
          output.WriteString(18, field_names[18], WebJumpUrlHead);
        }
        if (hasUserAttribution) {
          output.WriteInt32(19, field_names[16], UserAttribution);
        }
        if (hasUpdateWhatsNew) {
          output.WriteString(20, field_names[12], UpdateWhatsNew);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNickName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, NickName);
        }
        if (hasAvatarUrl) {
          size += pb::CodedOutputStream.ComputeStringSize(2, AvatarUrl);
        }
        if (hasApiLevel) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ApiLevel);
        }
        if (hasHkQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, HkQotRight);
        }
        if (hasUsQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, UsQotRight);
        }
        if (hasCnQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CnQotRight);
        }
        if (hasIsNeedAgreeDisclaimer) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, IsNeedAgreeDisclaimer);
        }
        if (hasUserID) {
          size += pb::CodedOutputStream.ComputeInt64Size(8, UserID);
        }
        if (hasUpdateType) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, UpdateType);
        }
        if (hasWebKey) {
          size += pb::CodedOutputStream.ComputeStringSize(10, WebKey);
        }
        if (hasWebJumpUrlHead) {
          size += pb::CodedOutputStream.ComputeStringSize(18, WebJumpUrlHead);
        }
        if (hasHkOptionQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, HkOptionQotRight);
        }
        if (hasHasUSOptionQotRight) {
          size += pb::CodedOutputStream.ComputeBoolSize(12, HasUSOptionQotRight);
        }
        if (hasHkFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, HkFutureQotRight);
        }
        if (hasSubQuota) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, SubQuota);
        }
        if (hasHistoryKLQuota) {
          size += pb::CodedOutputStream.ComputeInt32Size(15, HistoryKLQuota);
        }
        if (hasUsFutureQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(16, UsFutureQotRight);
        }
        if (hasUsOptionQotRight) {
          size += pb::CodedOutputStream.ComputeInt32Size(17, UsOptionQotRight);
        }
        if (hasUserAttribution) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, UserAttribution);
        }
        if (hasUpdateWhatsNew) {
          size += pb::CodedOutputStream.ComputeStringSize(20, UpdateWhatsNew);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.GetUserInfo.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasNickName) {
            NickName = other.NickName;
          }
          if (other.HasAvatarUrl) {
            AvatarUrl = other.AvatarUrl;
          }
          if (other.HasApiLevel) {
            ApiLevel = other.ApiLevel;
          }
          if (other.HasHkQotRight) {
            HkQotRight = other.HkQotRight;
          }
          if (other.HasUsQotRight) {
            UsQotRight = other.UsQotRight;
          }
          if (other.HasCnQotRight) {
            CnQotRight = other.CnQotRight;
          }
          if (other.HasIsNeedAgreeDisclaimer) {
            IsNeedAgreeDisclaimer = other.IsNeedAgreeDisclaimer;
          }
          if (other.HasUserID) {
            UserID = other.UserID;
          }
          if (other.HasUpdateType) {
            UpdateType = other.UpdateType;
          }
          if (other.HasWebKey) {
            WebKey = other.WebKey;
          }
          if (other.HasWebJumpUrlHead) {
            WebJumpUrlHead = other.WebJumpUrlHead;
          }
          if (other.HasHkOptionQotRight) {
            HkOptionQotRight = other.HkOptionQotRight;
          }
          if (other.HasHasUSOptionQotRight) {
            HasUSOptionQotRight = other.HasUSOptionQotRight;
          }
          if (other.HasHkFutureQotRight) {
            HkFutureQotRight = other.HkFutureQotRight;
          }
          if (other.HasSubQuota) {
            SubQuota = other.SubQuota;
          }
          if (other.HasHistoryKLQuota) {
            HistoryKLQuota = other.HistoryKLQuota;
          }
          if (other.HasUsFutureQotRight) {
            UsFutureQotRight = other.UsFutureQotRight;
          }
          if (other.HasUsOptionQotRight) {
            UsOptionQotRight = other.UsOptionQotRight;
          }
          if (other.HasUserAttribution) {
            UserAttribution = other.UserAttribution;
          }
          if (other.HasUpdateWhatsNew) {
            UpdateWhatsNew = other.UpdateWhatsNew;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasNickName = input.ReadString(ref result.nickName_);
                break;
              }
              case 18: {
                result.hasAvatarUrl = input.ReadString(ref result.avatarUrl_);
                break;
              }
              case 26: {
                result.hasApiLevel = input.ReadString(ref result.apiLevel_);
                break;
              }
              case 32: {
                result.hasHkQotRight = input.ReadInt32(ref result.hkQotRight_);
                break;
              }
              case 40: {
                result.hasUsQotRight = input.ReadInt32(ref result.usQotRight_);
                break;
              }
              case 48: {
                result.hasCnQotRight = input.ReadInt32(ref result.cnQotRight_);
                break;
              }
              case 56: {
                result.hasIsNeedAgreeDisclaimer = input.ReadBool(ref result.isNeedAgreeDisclaimer_);
                break;
              }
              case 64: {
                result.hasUserID = input.ReadInt64(ref result.userID_);
                break;
              }
              case 72: {
                result.hasUpdateType = input.ReadInt32(ref result.updateType_);
                break;
              }
              case 82: {
                result.hasWebKey = input.ReadString(ref result.webKey_);
                break;
              }
              case 88: {
                result.hasHkOptionQotRight = input.ReadInt32(ref result.hkOptionQotRight_);
                break;
              }
              case 96: {
                result.hasHasUSOptionQotRight = input.ReadBool(ref result.hasUSOptionQotRight_);
                break;
              }
              case 104: {
                result.hasHkFutureQotRight = input.ReadInt32(ref result.hkFutureQotRight_);
                break;
              }
              case 112: {
                result.hasSubQuota = input.ReadInt32(ref result.subQuota_);
                break;
              }
              case 120: {
                result.hasHistoryKLQuota = input.ReadInt32(ref result.historyKLQuota_);
                break;
              }
              case 128: {
                result.hasUsFutureQotRight = input.ReadInt32(ref result.usFutureQotRight_);
                break;
              }
              case 136: {
                result.hasUsOptionQotRight = input.ReadInt32(ref result.usOptionQotRight_);
                break;
              }
              case 146: {
                result.hasWebJumpUrlHead = input.ReadString(ref result.webJumpUrlHead_);
                break;
              }
              case 152: {
                result.hasUserAttribution = input.ReadInt32(ref result.userAttribution_);
                break;
              }
              case 162: {
                result.hasUpdateWhatsNew = input.ReadString(ref result.updateWhatsNew_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasNickName {
          get { return result.hasNickName; }
        }
        public string NickName {
          get { return result.NickName; }
          set { SetNickName(value); }
        }
        public Builder SetNickName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasNickName = true;
          result.nickName_ = value;
          return this;
        }
        public Builder ClearNickName() {
          PrepareBuilder();
          result.hasNickName = false;
          result.nickName_ = "";
          return this;
        }
        
        public bool HasAvatarUrl {
          get { return result.hasAvatarUrl; }
        }
        public string AvatarUrl {
          get { return result.AvatarUrl; }
          set { SetAvatarUrl(value); }
        }
        public Builder SetAvatarUrl(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasAvatarUrl = true;
          result.avatarUrl_ = value;
          return this;
        }
        public Builder ClearAvatarUrl() {
          PrepareBuilder();
          result.hasAvatarUrl = false;
          result.avatarUrl_ = "";
          return this;
        }
        
        public bool HasApiLevel {
          get { return result.hasApiLevel; }
        }
        public string ApiLevel {
          get { return result.ApiLevel; }
          set { SetApiLevel(value); }
        }
        public Builder SetApiLevel(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApiLevel = true;
          result.apiLevel_ = value;
          return this;
        }
        public Builder ClearApiLevel() {
          PrepareBuilder();
          result.hasApiLevel = false;
          result.apiLevel_ = "";
          return this;
        }
        
        public bool HasHkQotRight {
          get { return result.hasHkQotRight; }
        }
        public int HkQotRight {
          get { return result.HkQotRight; }
          set { SetHkQotRight(value); }
        }
        public Builder SetHkQotRight(int value) {
          PrepareBuilder();
          result.hasHkQotRight = true;
          result.hkQotRight_ = value;
          return this;
        }
        public Builder ClearHkQotRight() {
          PrepareBuilder();
          result.hasHkQotRight = false;
          result.hkQotRight_ = 0;
          return this;
        }
        
        public bool HasUsQotRight {
          get { return result.hasUsQotRight; }
        }
        public int UsQotRight {
          get { return result.UsQotRight; }
          set { SetUsQotRight(value); }
        }
        public Builder SetUsQotRight(int value) {
          PrepareBuilder();
          result.hasUsQotRight = true;
          result.usQotRight_ = value;
          return this;
        }
        public Builder ClearUsQotRight() {
          PrepareBuilder();
          result.hasUsQotRight = false;
          result.usQotRight_ = 0;
          return this;
        }
        
        public bool HasCnQotRight {
          get { return result.hasCnQotRight; }
        }
        public int CnQotRight {
          get { return result.CnQotRight; }
          set { SetCnQotRight(value); }
        }
        public Builder SetCnQotRight(int value) {
          PrepareBuilder();
          result.hasCnQotRight = true;
          result.cnQotRight_ = value;
          return this;
        }
        public Builder ClearCnQotRight() {
          PrepareBuilder();
          result.hasCnQotRight = false;
          result.cnQotRight_ = 0;
          return this;
        }
        
        public bool HasIsNeedAgreeDisclaimer {
          get { return result.hasIsNeedAgreeDisclaimer; }
        }
        public bool IsNeedAgreeDisclaimer {
          get { return result.IsNeedAgreeDisclaimer; }
          set { SetIsNeedAgreeDisclaimer(value); }
        }
        public Builder SetIsNeedAgreeDisclaimer(bool value) {
          PrepareBuilder();
          result.hasIsNeedAgreeDisclaimer = true;
          result.isNeedAgreeDisclaimer_ = value;
          return this;
        }
        public Builder ClearIsNeedAgreeDisclaimer() {
          PrepareBuilder();
          result.hasIsNeedAgreeDisclaimer = false;
          result.isNeedAgreeDisclaimer_ = false;
          return this;
        }
        
        public bool HasUserID {
          get { return result.hasUserID; }
        }
        public long UserID {
          get { return result.UserID; }
          set { SetUserID(value); }
        }
        public Builder SetUserID(long value) {
          PrepareBuilder();
          result.hasUserID = true;
          result.userID_ = value;
          return this;
        }
        public Builder ClearUserID() {
          PrepareBuilder();
          result.hasUserID = false;
          result.userID_ = 0L;
          return this;
        }
        
        public bool HasUpdateType {
          get { return result.hasUpdateType; }
        }
        public int UpdateType {
          get { return result.UpdateType; }
          set { SetUpdateType(value); }
        }
        public Builder SetUpdateType(int value) {
          PrepareBuilder();
          result.hasUpdateType = true;
          result.updateType_ = value;
          return this;
        }
        public Builder ClearUpdateType() {
          PrepareBuilder();
          result.hasUpdateType = false;
          result.updateType_ = 0;
          return this;
        }
        
        public bool HasWebKey {
          get { return result.hasWebKey; }
        }
        public string WebKey {
          get { return result.WebKey; }
          set { SetWebKey(value); }
        }
        public Builder SetWebKey(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasWebKey = true;
          result.webKey_ = value;
          return this;
        }
        public Builder ClearWebKey() {
          PrepareBuilder();
          result.hasWebKey = false;
          result.webKey_ = "";
          return this;
        }
        
        public bool HasWebJumpUrlHead {
          get { return result.hasWebJumpUrlHead; }
        }
        public string WebJumpUrlHead {
          get { return result.WebJumpUrlHead; }
          set { SetWebJumpUrlHead(value); }
        }
        public Builder SetWebJumpUrlHead(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasWebJumpUrlHead = true;
          result.webJumpUrlHead_ = value;
          return this;
        }
        public Builder ClearWebJumpUrlHead() {
          PrepareBuilder();
          result.hasWebJumpUrlHead = false;
          result.webJumpUrlHead_ = "";
          return this;
        }
        
        public bool HasHkOptionQotRight {
          get { return result.hasHkOptionQotRight; }
        }
        public int HkOptionQotRight {
          get { return result.HkOptionQotRight; }
          set { SetHkOptionQotRight(value); }
        }
        public Builder SetHkOptionQotRight(int value) {
          PrepareBuilder();
          result.hasHkOptionQotRight = true;
          result.hkOptionQotRight_ = value;
          return this;
        }
        public Builder ClearHkOptionQotRight() {
          PrepareBuilder();
          result.hasHkOptionQotRight = false;
          result.hkOptionQotRight_ = 0;
          return this;
        }
        
        public bool HasHasUSOptionQotRight {
          get { return result.hasHasUSOptionQotRight; }
        }
        public bool HasUSOptionQotRight {
          get { return result.HasUSOptionQotRight; }
          set { SetHasUSOptionQotRight(value); }
        }
        public Builder SetHasUSOptionQotRight(bool value) {
          PrepareBuilder();
          result.hasHasUSOptionQotRight = true;
          result.hasUSOptionQotRight_ = value;
          return this;
        }
        public Builder ClearHasUSOptionQotRight() {
          PrepareBuilder();
          result.hasHasUSOptionQotRight = false;
          result.hasUSOptionQotRight_ = false;
          return this;
        }
        
        public bool HasHkFutureQotRight {
          get { return result.hasHkFutureQotRight; }
        }
        public int HkFutureQotRight {
          get { return result.HkFutureQotRight; }
          set { SetHkFutureQotRight(value); }
        }
        public Builder SetHkFutureQotRight(int value) {
          PrepareBuilder();
          result.hasHkFutureQotRight = true;
          result.hkFutureQotRight_ = value;
          return this;
        }
        public Builder ClearHkFutureQotRight() {
          PrepareBuilder();
          result.hasHkFutureQotRight = false;
          result.hkFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasSubQuota {
          get { return result.hasSubQuota; }
        }
        public int SubQuota {
          get { return result.SubQuota; }
          set { SetSubQuota(value); }
        }
        public Builder SetSubQuota(int value) {
          PrepareBuilder();
          result.hasSubQuota = true;
          result.subQuota_ = value;
          return this;
        }
        public Builder ClearSubQuota() {
          PrepareBuilder();
          result.hasSubQuota = false;
          result.subQuota_ = 0;
          return this;
        }
        
        public bool HasHistoryKLQuota {
          get { return result.hasHistoryKLQuota; }
        }
        public int HistoryKLQuota {
          get { return result.HistoryKLQuota; }
          set { SetHistoryKLQuota(value); }
        }
        public Builder SetHistoryKLQuota(int value) {
          PrepareBuilder();
          result.hasHistoryKLQuota = true;
          result.historyKLQuota_ = value;
          return this;
        }
        public Builder ClearHistoryKLQuota() {
          PrepareBuilder();
          result.hasHistoryKLQuota = false;
          result.historyKLQuota_ = 0;
          return this;
        }
        
        public bool HasUsFutureQotRight {
          get { return result.hasUsFutureQotRight; }
        }
        public int UsFutureQotRight {
          get { return result.UsFutureQotRight; }
          set { SetUsFutureQotRight(value); }
        }
        public Builder SetUsFutureQotRight(int value) {
          PrepareBuilder();
          result.hasUsFutureQotRight = true;
          result.usFutureQotRight_ = value;
          return this;
        }
        public Builder ClearUsFutureQotRight() {
          PrepareBuilder();
          result.hasUsFutureQotRight = false;
          result.usFutureQotRight_ = 0;
          return this;
        }
        
        public bool HasUsOptionQotRight {
          get { return result.hasUsOptionQotRight; }
        }
        public int UsOptionQotRight {
          get { return result.UsOptionQotRight; }
          set { SetUsOptionQotRight(value); }
        }
        public Builder SetUsOptionQotRight(int value) {
          PrepareBuilder();
          result.hasUsOptionQotRight = true;
          result.usOptionQotRight_ = value;
          return this;
        }
        public Builder ClearUsOptionQotRight() {
          PrepareBuilder();
          result.hasUsOptionQotRight = false;
          result.usOptionQotRight_ = 0;
          return this;
        }
        
        public bool HasUserAttribution {
          get { return result.hasUserAttribution; }
        }
        public int UserAttribution {
          get { return result.UserAttribution; }
          set { SetUserAttribution(value); }
        }
        public Builder SetUserAttribution(int value) {
          PrepareBuilder();
          result.hasUserAttribution = true;
          result.userAttribution_ = value;
          return this;
        }
        public Builder ClearUserAttribution() {
          PrepareBuilder();
          result.hasUserAttribution = false;
          result.userAttribution_ = 0;
          return this;
        }
        
        public bool HasUpdateWhatsNew {
          get { return result.hasUpdateWhatsNew; }
        }
        public string UpdateWhatsNew {
          get { return result.UpdateWhatsNew; }
          set { SetUpdateWhatsNew(value); }
        }
        public Builder SetUpdateWhatsNew(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasUpdateWhatsNew = true;
          result.updateWhatsNew_ = value;
          return this;
        }
        public Builder ClearUpdateWhatsNew() {
          PrepareBuilder();
          result.hasUpdateWhatsNew = false;
          result.updateWhatsNew_ = "";
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetUserInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.GetUserInfo.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.GetUserInfo.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.GetUserInfo.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.GetUserInfo.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.GetUserInfo.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.GetUserInfo.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.GetUserInfo.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.GetUserInfo.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.GetUserInfo.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.GetUserInfo.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.GetUserInfo.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.GetUserInfo.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetUserInfo.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetUserInfo.internal__static_GetUserInfo_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.GetUserInfo.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.GetUserInfo.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.GetUserInfo.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetUserInfo.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.GetUserInfo.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.GetUserInfo.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.GetUserInfo.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.GetUserInfo.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.GetUserInfo.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.GetUserInfo.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.GetUserInfo.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.GetUserInfo.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.GetUserInfo.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetUserInfo.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
