// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class QotGetCodeChange {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Qot_GetCodeChange_CodeChangeInfo__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo, global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.Builder> internal__static_Qot_GetCodeChange_CodeChangeInfo__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetCodeChange_TimeFilter__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter, global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.Builder> internal__static_Qot_GetCodeChange_TimeFilter__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetCodeChange_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.C2S, global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.Builder> internal__static_Qot_GetCodeChange_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetCodeChange_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.S2C, global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.Builder> internal__static_Qot_GetCodeChange_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetCodeChange_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.Request, global::Futu.OpenApi.Pb.QotGetCodeChange.Request.Builder> internal__static_Qot_GetCodeChange_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetCodeChange_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.Response, global::Futu.OpenApi.Pb.QotGetCodeChange.Response.Builder> internal__static_Qot_GetCodeChange_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static QotGetCodeChange() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdRb3RfR2V0Q29kZUNoYW5nZS5wcm90bxIRUW90X0dldENvZGVDaGFuZ2Ua", 
            "DENvbW1vbi5wcm90bxoQUW90X0NvbW1vbi5wcm90byL0AgoOQ29kZUNoYW5n", 
            "ZUluZm8SEgoEdHlwZRgBIAIoBVIEdHlwZRIwCghzZWN1cml0eRgCIAIoCzIU", 
            "LlFvdF9Db21tb24uU2VjdXJpdHlSCHNlY3VyaXR5Ej4KD3JlbGF0ZWRTZWN1", 
            "cml0eRgDIAIoCzIULlFvdF9Db21tb24uU2VjdXJpdHlSD3JlbGF0ZWRTZWN1", 
            "cml0eRIeCgpwdWJsaWNUaW1lGAQgASgJUgpwdWJsaWNUaW1lEigKD3B1Ymxp", 
            "Y1RpbWVzdGFtcBgFIAEoAVIPcHVibGljVGltZXN0YW1wEiQKDWVmZmVjdGl2", 
            "ZVRpbWUYBiABKAlSDWVmZmVjdGl2ZVRpbWUSLgoSZWZmZWN0aXZlVGltZXN0", 
            "YW1wGAcgASgBUhJlZmZlY3RpdmVUaW1lc3RhbXASGAoHZW5kVGltZRgIIAEo", 
            "CVIHZW5kVGltZRIiCgxlbmRUaW1lc3RhbXAYCSABKAFSDGVuZFRpbWVzdGFt", 
            "cCJYCgpUaW1lRmlsdGVyEhIKBHR5cGUYASACKAVSBHR5cGUSHAoJYmVnaW5U", 
            "aW1lGAIgASgJUgliZWdpblRpbWUSGAoHZW5kVGltZRgDIAEoCVIHZW5kVGlt", 
            "ZSLEAQoDQzJTEiAKC3BsYWNlSG9sZGVyGAEgASgFUgtwbGFjZUhvbGRlchI4", 
            "CgxzZWN1cml0eUxpc3QYAiADKAsyFC5Rb3RfQ29tbW9uLlNlY3VyaXR5Ugxz", 
            "ZWN1cml0eUxpc3QSRQoOdGltZUZpbHRlckxpc3QYAyADKAsyHS5Rb3RfR2V0", 
            "Q29kZUNoYW5nZS5UaW1lRmlsdGVyUg50aW1lRmlsdGVyTGlzdBIaCgh0eXBl", 
            "TGlzdBgEIAMoBVIIdHlwZUxpc3QiUAoDUzJDEkkKDmNvZGVDaGFuZ2VMaXN0", 
            "GAEgAygLMiEuUW90X0dldENvZGVDaGFuZ2UuQ29kZUNoYW5nZUluZm9SDmNv", 
            "ZGVDaGFuZ2VMaXN0IjMKB1JlcXVlc3QSKAoDYzJzGAEgAigLMhYuUW90X0dl", 
            "dENvZGVDaGFuZ2UuQzJTUgNjMnMihgEKCFJlc3BvbnNlEh4KB3JldFR5cGUY", 
            "ASACKAU6BC00MDBSB3JldFR5cGUSFgoGcmV0TXNnGAIgASgJUgZyZXRNc2cS", 
            "GAoHZXJyQ29kZRgDIAEoBVIHZXJyQ29kZRIoCgNzMmMYBCABKAsyFi5Rb3Rf", 
            "R2V0Q29kZUNoYW5nZS5TMkNSA3MyYyqOAgoOQ29kZUNoYW5nZVR5cGUSGQoV", 
            "Q29kZUNoYW5nZVR5cGVfVW5rb3duEAASHAoYQ29kZUNoYW5nZVR5cGVfR2Vt", 
            "VG9NYWluEAESGQoVQ29kZUNoYW5nZVR5cGVfVW5wYWlkEAISHAoYQ29kZUNo", 
            "YW5nZVR5cGVfQ2hhbmdlTG90EAMSGAoUQ29kZUNoYW5nZVR5cGVfU3BsaXQQ", 
            "BBIYChRDb2RlQ2hhbmdlVHlwZV9Kb2ludBAFEh0KGUNvZGVDaGFuZ2VUeXBl", 
            "X0pvaW50U3BsaXQQBhIdChlDb2RlQ2hhbmdlVHlwZV9TcGxpdEpvaW50EAcS", 
            "GAoUQ29kZUNoYW5nZVR5cGVfT3RoZXIQCCp8Cg5UaW1lRmlsdGVyVHlwZRIZ", 
            "ChVUaW1lRmlsdGVyVHlwZV9Vbmtub3cQABIZChVUaW1lRmlsdGVyVHlwZV9Q", 
            "dWJsaWMQARIcChhUaW1lRmlsdGVyVHlwZV9FZmZlY3RpdmUQAhIWChJUaW1l", 
            "RmlsdGVyVHlwZV9FbmQQA0JHChNjb20uZnV0dS5vcGVuYXBpLnBiWjBnaXRo", 
          "dWIuY29tL2Z1dHVvcGVuL2Z0YXBpNGdvL3BiL3FvdGdldGNvZGVjaGFuZ2U="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Qot_GetCodeChange_CodeChangeInfo__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Qot_GetCodeChange_CodeChangeInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo, global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.Builder>(internal__static_Qot_GetCodeChange_CodeChangeInfo__Descriptor,
                new string[] { "Type", "Security", "RelatedSecurity", "PublicTime", "PublicTimestamp", "EffectiveTime", "EffectiveTimestamp", "EndTime", "EndTimestamp", });
        internal__static_Qot_GetCodeChange_TimeFilter__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Qot_GetCodeChange_TimeFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter, global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.Builder>(internal__static_Qot_GetCodeChange_TimeFilter__Descriptor,
                new string[] { "Type", "BeginTime", "EndTime", });
        internal__static_Qot_GetCodeChange_C2S__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Qot_GetCodeChange_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.C2S, global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.Builder>(internal__static_Qot_GetCodeChange_C2S__Descriptor,
                new string[] { "PlaceHolder", "SecurityList", "TimeFilterList", "TypeList", });
        internal__static_Qot_GetCodeChange_S2C__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Qot_GetCodeChange_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.S2C, global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.Builder>(internal__static_Qot_GetCodeChange_S2C__Descriptor,
                new string[] { "CodeChangeList", });
        internal__static_Qot_GetCodeChange_Request__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Qot_GetCodeChange_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.Request, global::Futu.OpenApi.Pb.QotGetCodeChange.Request.Builder>(internal__static_Qot_GetCodeChange_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Qot_GetCodeChange_Response__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Qot_GetCodeChange_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetCodeChange.Response, global::Futu.OpenApi.Pb.QotGetCodeChange.Response.Builder>(internal__static_Qot_GetCodeChange_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          global::Futu.OpenApi.Pb.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum CodeChangeType {
      CodeChangeType_Unkown = 0,
      CodeChangeType_GemToMain = 1,
      CodeChangeType_Unpaid = 2,
      CodeChangeType_ChangeLot = 3,
      CodeChangeType_Split = 4,
      CodeChangeType_Joint = 5,
      CodeChangeType_JointSplit = 6,
      CodeChangeType_SplitJoint = 7,
      CodeChangeType_Other = 8,
    }
    
    public enum TimeFilterType {
      TimeFilterType_Unknow = 0,
      TimeFilterType_Public = 1,
      TimeFilterType_Effective = 2,
      TimeFilterType_End = 3,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class CodeChangeInfo : pb::GeneratedMessage<CodeChangeInfo, CodeChangeInfo.Builder> {
      private CodeChangeInfo() { }
      private static readonly CodeChangeInfo defaultInstance = new CodeChangeInfo().MakeReadOnly();
      private static readonly string[] _codeChangeInfoFieldNames = new string[] { "effectiveTime", "effectiveTimestamp", "endTime", "endTimestamp", "publicTime", "publicTimestamp", "relatedSecurity", "security", "type" };
      private static readonly uint[] _codeChangeInfoFieldTags = new uint[] { 50, 57, 66, 73, 34, 41, 26, 18, 8 };
      public static CodeChangeInfo DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override CodeChangeInfo DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override CodeChangeInfo ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_CodeChangeInfo__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<CodeChangeInfo, CodeChangeInfo.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_CodeChangeInfo__FieldAccessorTable; }
      }
      
      public const int TypeFieldNumber = 1;
      private bool hasType;
      private int type_;
      public bool HasType {
        get { return hasType; }
      }
      public int Type {
        get { return type_; }
      }
      
      public const int SecurityFieldNumber = 2;
      private bool hasSecurity;
      private global::Futu.OpenApi.Pb.QotCommon.Security security_;
      public bool HasSecurity {
        get { return hasSecurity; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Security {
        get { return security_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int RelatedSecurityFieldNumber = 3;
      private bool hasRelatedSecurity;
      private global::Futu.OpenApi.Pb.QotCommon.Security relatedSecurity_;
      public bool HasRelatedSecurity {
        get { return hasRelatedSecurity; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security RelatedSecurity {
        get { return relatedSecurity_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int PublicTimeFieldNumber = 4;
      private bool hasPublicTime;
      private string publicTime_ = "";
      public bool HasPublicTime {
        get { return hasPublicTime; }
      }
      public string PublicTime {
        get { return publicTime_; }
      }
      
      public const int PublicTimestampFieldNumber = 5;
      private bool hasPublicTimestamp;
      private double publicTimestamp_;
      public bool HasPublicTimestamp {
        get { return hasPublicTimestamp; }
      }
      public double PublicTimestamp {
        get { return publicTimestamp_; }
      }
      
      public const int EffectiveTimeFieldNumber = 6;
      private bool hasEffectiveTime;
      private string effectiveTime_ = "";
      public bool HasEffectiveTime {
        get { return hasEffectiveTime; }
      }
      public string EffectiveTime {
        get { return effectiveTime_; }
      }
      
      public const int EffectiveTimestampFieldNumber = 7;
      private bool hasEffectiveTimestamp;
      private double effectiveTimestamp_;
      public bool HasEffectiveTimestamp {
        get { return hasEffectiveTimestamp; }
      }
      public double EffectiveTimestamp {
        get { return effectiveTimestamp_; }
      }
      
      public const int EndTimeFieldNumber = 8;
      private bool hasEndTime;
      private string endTime_ = "";
      public bool HasEndTime {
        get { return hasEndTime; }
      }
      public string EndTime {
        get { return endTime_; }
      }
      
      public const int EndTimestampFieldNumber = 9;
      private bool hasEndTimestamp;
      private double endTimestamp_;
      public bool HasEndTimestamp {
        get { return hasEndTimestamp; }
      }
      public double EndTimestamp {
        get { return endTimestamp_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasType) return false;
          if (!hasSecurity) return false;
          if (!hasRelatedSecurity) return false;
          if (!Security.IsInitialized) return false;
          if (!RelatedSecurity.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _codeChangeInfoFieldNames;
        if (hasType) {
          output.WriteInt32(1, field_names[8], Type);
        }
        if (hasSecurity) {
          output.WriteMessage(2, field_names[7], Security);
        }
        if (hasRelatedSecurity) {
          output.WriteMessage(3, field_names[6], RelatedSecurity);
        }
        if (hasPublicTime) {
          output.WriteString(4, field_names[4], PublicTime);
        }
        if (hasPublicTimestamp) {
          output.WriteDouble(5, field_names[5], PublicTimestamp);
        }
        if (hasEffectiveTime) {
          output.WriteString(6, field_names[0], EffectiveTime);
        }
        if (hasEffectiveTimestamp) {
          output.WriteDouble(7, field_names[1], EffectiveTimestamp);
        }
        if (hasEndTime) {
          output.WriteString(8, field_names[2], EndTime);
        }
        if (hasEndTimestamp) {
          output.WriteDouble(9, field_names[3], EndTimestamp);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
        }
        if (hasSecurity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Security);
        }
        if (hasRelatedSecurity) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, RelatedSecurity);
        }
        if (hasPublicTime) {
          size += pb::CodedOutputStream.ComputeStringSize(4, PublicTime);
        }
        if (hasPublicTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(5, PublicTimestamp);
        }
        if (hasEffectiveTime) {
          size += pb::CodedOutputStream.ComputeStringSize(6, EffectiveTime);
        }
        if (hasEffectiveTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, EffectiveTimestamp);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeStringSize(8, EndTime);
        }
        if (hasEndTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(9, EndTimestamp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static CodeChangeInfo ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static CodeChangeInfo ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static CodeChangeInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static CodeChangeInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private CodeChangeInfo MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(CodeChangeInfo prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<CodeChangeInfo, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(CodeChangeInfo cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private CodeChangeInfo result;
        
        private CodeChangeInfo PrepareBuilder() {
          if (resultIsReadOnly) {
            CodeChangeInfo original = result;
            result = new CodeChangeInfo();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override CodeChangeInfo MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.Descriptor; }
        }
        
        public override CodeChangeInfo DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.DefaultInstance; }
        }
        
        public override CodeChangeInfo BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is CodeChangeInfo) {
            return MergeFrom((CodeChangeInfo) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(CodeChangeInfo other) {
          if (other == global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasSecurity) {
            MergeSecurity(other.Security);
          }
          if (other.HasRelatedSecurity) {
            MergeRelatedSecurity(other.RelatedSecurity);
          }
          if (other.HasPublicTime) {
            PublicTime = other.PublicTime;
          }
          if (other.HasPublicTimestamp) {
            PublicTimestamp = other.PublicTimestamp;
          }
          if (other.HasEffectiveTime) {
            EffectiveTime = other.EffectiveTime;
          }
          if (other.HasEffectiveTimestamp) {
            EffectiveTimestamp = other.EffectiveTimestamp;
          }
          if (other.HasEndTime) {
            EndTime = other.EndTime;
          }
          if (other.HasEndTimestamp) {
            EndTimestamp = other.EndTimestamp;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_codeChangeInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _codeChangeInfoFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasType = input.ReadInt32(ref result.type_);
                break;
              }
              case 18: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasSecurity) {
                  subBuilder.MergeFrom(Security);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Security = subBuilder.BuildPartial();
                break;
              }
              case 26: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasRelatedSecurity) {
                  subBuilder.MergeFrom(RelatedSecurity);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                RelatedSecurity = subBuilder.BuildPartial();
                break;
              }
              case 34: {
                result.hasPublicTime = input.ReadString(ref result.publicTime_);
                break;
              }
              case 41: {
                result.hasPublicTimestamp = input.ReadDouble(ref result.publicTimestamp_);
                break;
              }
              case 50: {
                result.hasEffectiveTime = input.ReadString(ref result.effectiveTime_);
                break;
              }
              case 57: {
                result.hasEffectiveTimestamp = input.ReadDouble(ref result.effectiveTimestamp_);
                break;
              }
              case 66: {
                result.hasEndTime = input.ReadString(ref result.endTime_);
                break;
              }
              case 73: {
                result.hasEndTimestamp = input.ReadDouble(ref result.endTimestamp_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasType {
          get { return result.hasType; }
        }
        public int Type {
          get { return result.Type; }
          set { SetType(value); }
        }
        public Builder SetType(int value) {
          PrepareBuilder();
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder ClearType() {
          PrepareBuilder();
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        public bool HasSecurity {
         get { return result.hasSecurity; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Security {
          get { return result.Security; }
          set { SetSecurity(value); }
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = value;
          return this;
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = builderForValue.Build();
          return this;
        }
        public Builder MergeSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasSecurity &&
              result.security_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.security_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.security_).MergeFrom(value).BuildPartial();
          } else {
            result.security_ = value;
          }
          result.hasSecurity = true;
          return this;
        }
        public Builder ClearSecurity() {
          PrepareBuilder();
          result.hasSecurity = false;
          result.security_ = null;
          return this;
        }
        
        public bool HasRelatedSecurity {
         get { return result.hasRelatedSecurity; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security RelatedSecurity {
          get { return result.RelatedSecurity; }
          set { SetRelatedSecurity(value); }
        }
        public Builder SetRelatedSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRelatedSecurity = true;
          result.relatedSecurity_ = value;
          return this;
        }
        public Builder SetRelatedSecurity(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasRelatedSecurity = true;
          result.relatedSecurity_ = builderForValue.Build();
          return this;
        }
        public Builder MergeRelatedSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasRelatedSecurity &&
              result.relatedSecurity_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.relatedSecurity_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.relatedSecurity_).MergeFrom(value).BuildPartial();
          } else {
            result.relatedSecurity_ = value;
          }
          result.hasRelatedSecurity = true;
          return this;
        }
        public Builder ClearRelatedSecurity() {
          PrepareBuilder();
          result.hasRelatedSecurity = false;
          result.relatedSecurity_ = null;
          return this;
        }
        
        public bool HasPublicTime {
          get { return result.hasPublicTime; }
        }
        public string PublicTime {
          get { return result.PublicTime; }
          set { SetPublicTime(value); }
        }
        public Builder SetPublicTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasPublicTime = true;
          result.publicTime_ = value;
          return this;
        }
        public Builder ClearPublicTime() {
          PrepareBuilder();
          result.hasPublicTime = false;
          result.publicTime_ = "";
          return this;
        }
        
        public bool HasPublicTimestamp {
          get { return result.hasPublicTimestamp; }
        }
        public double PublicTimestamp {
          get { return result.PublicTimestamp; }
          set { SetPublicTimestamp(value); }
        }
        public Builder SetPublicTimestamp(double value) {
          PrepareBuilder();
          result.hasPublicTimestamp = true;
          result.publicTimestamp_ = value;
          return this;
        }
        public Builder ClearPublicTimestamp() {
          PrepareBuilder();
          result.hasPublicTimestamp = false;
          result.publicTimestamp_ = 0D;
          return this;
        }
        
        public bool HasEffectiveTime {
          get { return result.hasEffectiveTime; }
        }
        public string EffectiveTime {
          get { return result.EffectiveTime; }
          set { SetEffectiveTime(value); }
        }
        public Builder SetEffectiveTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasEffectiveTime = true;
          result.effectiveTime_ = value;
          return this;
        }
        public Builder ClearEffectiveTime() {
          PrepareBuilder();
          result.hasEffectiveTime = false;
          result.effectiveTime_ = "";
          return this;
        }
        
        public bool HasEffectiveTimestamp {
          get { return result.hasEffectiveTimestamp; }
        }
        public double EffectiveTimestamp {
          get { return result.EffectiveTimestamp; }
          set { SetEffectiveTimestamp(value); }
        }
        public Builder SetEffectiveTimestamp(double value) {
          PrepareBuilder();
          result.hasEffectiveTimestamp = true;
          result.effectiveTimestamp_ = value;
          return this;
        }
        public Builder ClearEffectiveTimestamp() {
          PrepareBuilder();
          result.hasEffectiveTimestamp = false;
          result.effectiveTimestamp_ = 0D;
          return this;
        }
        
        public bool HasEndTime {
          get { return result.hasEndTime; }
        }
        public string EndTime {
          get { return result.EndTime; }
          set { SetEndTime(value); }
        }
        public Builder SetEndTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasEndTime = true;
          result.endTime_ = value;
          return this;
        }
        public Builder ClearEndTime() {
          PrepareBuilder();
          result.hasEndTime = false;
          result.endTime_ = "";
          return this;
        }
        
        public bool HasEndTimestamp {
          get { return result.hasEndTimestamp; }
        }
        public double EndTimestamp {
          get { return result.EndTimestamp; }
          set { SetEndTimestamp(value); }
        }
        public Builder SetEndTimestamp(double value) {
          PrepareBuilder();
          result.hasEndTimestamp = true;
          result.endTimestamp_ = value;
          return this;
        }
        public Builder ClearEndTimestamp() {
          PrepareBuilder();
          result.hasEndTimestamp = false;
          result.endTimestamp_ = 0D;
          return this;
        }
      }
      static CodeChangeInfo() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetCodeChange.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class TimeFilter : pb::GeneratedMessage<TimeFilter, TimeFilter.Builder> {
      private TimeFilter() { }
      private static readonly TimeFilter defaultInstance = new TimeFilter().MakeReadOnly();
      private static readonly string[] _timeFilterFieldNames = new string[] { "beginTime", "endTime", "type" };
      private static readonly uint[] _timeFilterFieldTags = new uint[] { 18, 26, 8 };
      public static TimeFilter DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override TimeFilter DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override TimeFilter ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_TimeFilter__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<TimeFilter, TimeFilter.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_TimeFilter__FieldAccessorTable; }
      }
      
      public const int TypeFieldNumber = 1;
      private bool hasType;
      private int type_;
      public bool HasType {
        get { return hasType; }
      }
      public int Type {
        get { return type_; }
      }
      
      public const int BeginTimeFieldNumber = 2;
      private bool hasBeginTime;
      private string beginTime_ = "";
      public bool HasBeginTime {
        get { return hasBeginTime; }
      }
      public string BeginTime {
        get { return beginTime_; }
      }
      
      public const int EndTimeFieldNumber = 3;
      private bool hasEndTime;
      private string endTime_ = "";
      public bool HasEndTime {
        get { return hasEndTime; }
      }
      public string EndTime {
        get { return endTime_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasType) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _timeFilterFieldNames;
        if (hasType) {
          output.WriteInt32(1, field_names[2], Type);
        }
        if (hasBeginTime) {
          output.WriteString(2, field_names[0], BeginTime);
        }
        if (hasEndTime) {
          output.WriteString(3, field_names[1], EndTime);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
        }
        if (hasBeginTime) {
          size += pb::CodedOutputStream.ComputeStringSize(2, BeginTime);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeStringSize(3, EndTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static TimeFilter ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static TimeFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static TimeFilter ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static TimeFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static TimeFilter ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static TimeFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static TimeFilter ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static TimeFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static TimeFilter ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static TimeFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private TimeFilter MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(TimeFilter prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<TimeFilter, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(TimeFilter cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private TimeFilter result;
        
        private TimeFilter PrepareBuilder() {
          if (resultIsReadOnly) {
            TimeFilter original = result;
            result = new TimeFilter();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override TimeFilter MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.Descriptor; }
        }
        
        public override TimeFilter DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.DefaultInstance; }
        }
        
        public override TimeFilter BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is TimeFilter) {
            return MergeFrom((TimeFilter) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(TimeFilter other) {
          if (other == global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasType) {
            Type = other.Type;
          }
          if (other.HasBeginTime) {
            BeginTime = other.BeginTime;
          }
          if (other.HasEndTime) {
            EndTime = other.EndTime;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_timeFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _timeFilterFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasType = input.ReadInt32(ref result.type_);
                break;
              }
              case 18: {
                result.hasBeginTime = input.ReadString(ref result.beginTime_);
                break;
              }
              case 26: {
                result.hasEndTime = input.ReadString(ref result.endTime_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasType {
          get { return result.hasType; }
        }
        public int Type {
          get { return result.Type; }
          set { SetType(value); }
        }
        public Builder SetType(int value) {
          PrepareBuilder();
          result.hasType = true;
          result.type_ = value;
          return this;
        }
        public Builder ClearType() {
          PrepareBuilder();
          result.hasType = false;
          result.type_ = 0;
          return this;
        }
        
        public bool HasBeginTime {
          get { return result.hasBeginTime; }
        }
        public string BeginTime {
          get { return result.BeginTime; }
          set { SetBeginTime(value); }
        }
        public Builder SetBeginTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasBeginTime = true;
          result.beginTime_ = value;
          return this;
        }
        public Builder ClearBeginTime() {
          PrepareBuilder();
          result.hasBeginTime = false;
          result.beginTime_ = "";
          return this;
        }
        
        public bool HasEndTime {
          get { return result.hasEndTime; }
        }
        public string EndTime {
          get { return result.EndTime; }
          set { SetEndTime(value); }
        }
        public Builder SetEndTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasEndTime = true;
          result.endTime_ = value;
          return this;
        }
        public Builder ClearEndTime() {
          PrepareBuilder();
          result.hasEndTime = false;
          result.endTime_ = "";
          return this;
        }
      }
      static TimeFilter() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetCodeChange.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "placeHolder", "securityList", "timeFilterList", "typeList" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 8, 18, 26, 32 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_C2S__FieldAccessorTable; }
      }
      
      public const int PlaceHolderFieldNumber = 1;
      private bool hasPlaceHolder;
      private int placeHolder_;
      public bool HasPlaceHolder {
        get { return hasPlaceHolder; }
      }
      public int PlaceHolder {
        get { return placeHolder_; }
      }
      
      public const int SecurityListFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> securityList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security>();
      public scg::IList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
        get { return securityList_; }
      }
      public int SecurityListCount {
        get { return securityList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
        return securityList_[index];
      }
      
      public const int TimeFilterListFieldNumber = 3;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter> timeFilterList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter> TimeFilterListList {
        get { return timeFilterList_; }
      }
      public int TimeFilterListCount {
        get { return timeFilterList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter GetTimeFilterList(int index) {
        return timeFilterList_[index];
      }
      
      public const int TypeListFieldNumber = 4;
      private pbc::PopsicleList<int> typeList_ = new pbc::PopsicleList<int>();
      public scg::IList<int> TypeListList {
        get { return pbc::Lists.AsReadOnly(typeList_); }
      }
      public int TypeListCount {
        get { return typeList_.Count; }
      }
      public int GetTypeList(int index) {
        return typeList_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
            if (!element.IsInitialized) return false;
          }
          foreach (global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter element in TimeFilterListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasPlaceHolder) {
          output.WriteInt32(1, field_names[0], PlaceHolder);
        }
        if (securityList_.Count > 0) {
          output.WriteMessageArray(2, field_names[1], securityList_);
        }
        if (timeFilterList_.Count > 0) {
          output.WriteMessageArray(3, field_names[2], timeFilterList_);
        }
        if (typeList_.Count > 0) {
          output.WriteInt32Array(4, field_names[3], typeList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlaceHolder) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, PlaceHolder);
        }
        foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter element in TimeFilterListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        {
          int dataSize = 0;
          foreach (int element in TypeListList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * typeList_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        securityList_.MakeReadOnly();
        timeFilterList_.MakeReadOnly();
        typeList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasPlaceHolder) {
            PlaceHolder = other.PlaceHolder;
          }
          if (other.securityList_.Count != 0) {
            result.securityList_.Add(other.securityList_);
          }
          if (other.timeFilterList_.Count != 0) {
            result.timeFilterList_.Add(other.timeFilterList_);
          }
          if (other.typeList_.Count != 0) {
            result.typeList_.Add(other.typeList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasPlaceHolder = input.ReadInt32(ref result.placeHolder_);
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.securityList_, global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance, extensionRegistry);
                break;
              }
              case 26: {
                input.ReadMessageArray(tag, field_name, result.timeFilterList_, global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.DefaultInstance, extensionRegistry);
                break;
              }
              case 34:
              case 32: {
                input.ReadInt32Array(tag, field_name, result.typeList_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasPlaceHolder {
          get { return result.hasPlaceHolder; }
        }
        public int PlaceHolder {
          get { return result.PlaceHolder; }
          set { SetPlaceHolder(value); }
        }
        public Builder SetPlaceHolder(int value) {
          PrepareBuilder();
          result.hasPlaceHolder = true;
          result.placeHolder_ = value;
          return this;
        }
        public Builder ClearPlaceHolder() {
          PrepareBuilder();
          result.hasPlaceHolder = false;
          result.placeHolder_ = 0;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
          get { return PrepareBuilder().securityList_; }
        }
        public int SecurityListCount {
          get { return result.SecurityListCount; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
          return result.GetSecurityList(index);
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_[index] = value;
          return this;
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_.Add(value);
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeSecurityList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotCommon.Security> values) {
          PrepareBuilder();
          result.securityList_.Add(values);
          return this;
        }
        public Builder ClearSecurityList() {
          PrepareBuilder();
          result.securityList_.Clear();
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter> TimeFilterListList {
          get { return PrepareBuilder().timeFilterList_; }
        }
        public int TimeFilterListCount {
          get { return result.TimeFilterListCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter GetTimeFilterList(int index) {
          return result.GetTimeFilterList(index);
        }
        public Builder SetTimeFilterList(int index, global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.timeFilterList_[index] = value;
          return this;
        }
        public Builder SetTimeFilterList(int index, global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.timeFilterList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddTimeFilterList(global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.timeFilterList_.Add(value);
          return this;
        }
        public Builder AddTimeFilterList(global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.timeFilterList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeTimeFilterList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetCodeChange.TimeFilter> values) {
          PrepareBuilder();
          result.timeFilterList_.Add(values);
          return this;
        }
        public Builder ClearTimeFilterList() {
          PrepareBuilder();
          result.timeFilterList_.Clear();
          return this;
        }
        
        public pbc::IPopsicleList<int> TypeListList {
          get { return PrepareBuilder().typeList_; }
        }
        public int TypeListCount {
          get { return result.TypeListCount; }
        }
        public int GetTypeList(int index) {
          return result.GetTypeList(index);
        }
        public Builder SetTypeList(int index, int value) {
          PrepareBuilder();
          result.typeList_[index] = value;
          return this;
        }
        public Builder AddTypeList(int value) {
          PrepareBuilder();
          result.typeList_.Add(value);
          return this;
        }
        public Builder AddRangeTypeList(scg::IEnumerable<int> values) {
          PrepareBuilder();
          result.typeList_.Add(values);
          return this;
        }
        public Builder ClearTypeList() {
          PrepareBuilder();
          result.typeList_.Clear();
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetCodeChange.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "codeChangeList" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 10 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_S2C__FieldAccessorTable; }
      }
      
      public const int CodeChangeListFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo> codeChangeList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo> CodeChangeListList {
        get { return codeChangeList_; }
      }
      public int CodeChangeListCount {
        get { return codeChangeList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo GetCodeChangeList(int index) {
        return codeChangeList_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo element in CodeChangeListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (codeChangeList_.Count > 0) {
          output.WriteMessageArray(1, field_names[0], codeChangeList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo element in CodeChangeListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        codeChangeList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.codeChangeList_.Count != 0) {
            result.codeChangeList_.Add(other.codeChangeList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.codeChangeList_, global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo> CodeChangeListList {
          get { return PrepareBuilder().codeChangeList_; }
        }
        public int CodeChangeListCount {
          get { return result.CodeChangeListCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo GetCodeChangeList(int index) {
          return result.GetCodeChangeList(index);
        }
        public Builder SetCodeChangeList(int index, global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.codeChangeList_[index] = value;
          return this;
        }
        public Builder SetCodeChangeList(int index, global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.codeChangeList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddCodeChangeList(global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.codeChangeList_.Add(value);
          return this;
        }
        public Builder AddCodeChangeList(global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.codeChangeList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeCodeChangeList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetCodeChange.CodeChangeInfo> values) {
          PrepareBuilder();
          result.codeChangeList_.Add(values);
          return this;
        }
        public Builder ClearCodeChangeList() {
          PrepareBuilder();
          result.codeChangeList_.Clear();
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetCodeChange.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.QotGetCodeChange.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.QotGetCodeChange.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.QotGetCodeChange.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.QotGetCodeChange.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetCodeChange.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.QotGetCodeChange.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.QotGetCodeChange.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetCodeChange.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetCodeChange.internal__static_Qot_GetCodeChange_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.QotGetCodeChange.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.QotGetCodeChange.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetCodeChange.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.QotGetCodeChange.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.QotGetCodeChange.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetCodeChange.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.QotGetCodeChange.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.QotGetCodeChange.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetCodeChange.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
