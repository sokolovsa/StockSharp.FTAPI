// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class InitConnect {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_InitConnect_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.C2S, global::Futu.OpenApi.Pb.InitConnect.C2S.Builder> internal__static_InitConnect_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_InitConnect_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.S2C, global::Futu.OpenApi.Pb.InitConnect.S2C.Builder> internal__static_InitConnect_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_InitConnect_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.Request, global::Futu.OpenApi.Pb.InitConnect.Request.Builder> internal__static_InitConnect_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_InitConnect_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.Response, global::Futu.OpenApi.Pb.InitConnect.Response.Builder> internal__static_InitConnect_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static InitConnect() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFJbml0Q29ubmVjdC5wcm90bxILSW5pdENvbm5lY3QaDENvbW1vbi5wcm90", 
            "byLbAQoDQzJTEhwKCWNsaWVudFZlchgBIAIoBVIJY2xpZW50VmVyEhoKCGNs", 
            "aWVudElEGAIgAigJUghjbGllbnRJRBIeCgpyZWN2Tm90aWZ5GAMgASgIUgpy", 
            "ZWN2Tm90aWZ5EiQKDXBhY2tldEVuY0FsZ28YBCABKAVSDXBhY2tldEVuY0Fs", 
            "Z28SIgoMcHVzaFByb3RvRm10GAUgASgFUgxwdXNoUHJvdG9GbXQSMAoTcHJv", 
            "Z3JhbW1pbmdMYW5ndWFnZRgGIAEoCVITcHJvZ3JhbW1pbmdMYW5ndWFnZSLx", 
            "AQoDUzJDEhwKCXNlcnZlclZlchgBIAIoBVIJc2VydmVyVmVyEiAKC2xvZ2lu", 
            "VXNlcklEGAIgAigEUgtsb2dpblVzZXJJRBIWCgZjb25uSUQYAyACKARSBmNv", 
            "bm5JRBIeCgpjb25uQUVTS2V5GAQgAigJUgpjb25uQUVTS2V5EiwKEWtlZXBB", 
            "bGl2ZUludGVydmFsGAUgAigFUhFrZWVwQWxpdmVJbnRlcnZhbBIaCghhZXND", 
            "QkNpdhgGIAEoCVIIYWVzQ0JDaXYSKAoPdXNlckF0dHJpYnV0aW9uGAcgASgF", 
            "Ug91c2VyQXR0cmlidXRpb24iLQoHUmVxdWVzdBIiCgNjMnMYASACKAsyEC5J", 
            "bml0Q29ubmVjdC5DMlNSA2MycyKAAQoIUmVzcG9uc2USHgoHcmV0VHlwZRgB", 
            "IAIoBToELTQwMFIHcmV0VHlwZRIWCgZyZXRNc2cYAiABKAlSBnJldE1zZxIY", 
            "CgdlcnJDb2RlGAMgASgFUgdlcnJDb2RlEiIKA3MyYxgEIAEoCzIQLkluaXRD", 
            "b25uZWN0LlMyQ1IDczJjQkIKE2NvbS5mdXR1Lm9wZW5hcGkucGJaK2dpdGh1", 
          "Yi5jb20vZnV0dW9wZW4vZnRhcGk0Z28vcGIvaW5pdGNvbm5lY3Q="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_InitConnect_C2S__Descriptor = Descriptor.MessageTypes[0];
        internal__static_InitConnect_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.C2S, global::Futu.OpenApi.Pb.InitConnect.C2S.Builder>(internal__static_InitConnect_C2S__Descriptor,
                new string[] { "ClientVer", "ClientID", "RecvNotify", "PacketEncAlgo", "PushProtoFmt", "ProgrammingLanguage", });
        internal__static_InitConnect_S2C__Descriptor = Descriptor.MessageTypes[1];
        internal__static_InitConnect_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.S2C, global::Futu.OpenApi.Pb.InitConnect.S2C.Builder>(internal__static_InitConnect_S2C__Descriptor,
                new string[] { "ServerVer", "LoginUserID", "ConnID", "ConnAESKey", "KeepAliveInterval", "AesCBCiv", "UserAttribution", });
        internal__static_InitConnect_Request__Descriptor = Descriptor.MessageTypes[2];
        internal__static_InitConnect_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.Request, global::Futu.OpenApi.Pb.InitConnect.Request.Builder>(internal__static_InitConnect_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_InitConnect_Response__Descriptor = Descriptor.MessageTypes[3];
        internal__static_InitConnect_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.InitConnect.Response, global::Futu.OpenApi.Pb.InitConnect.Response.Builder>(internal__static_InitConnect_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "clientID", "clientVer", "packetEncAlgo", "programmingLanguage", "pushProtoFmt", "recvNotify" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 18, 8, 32, 50, 40, 24 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_C2S__FieldAccessorTable; }
      }
      
      public const int ClientVerFieldNumber = 1;
      private bool hasClientVer;
      private int clientVer_;
      public bool HasClientVer {
        get { return hasClientVer; }
      }
      public int ClientVer {
        get { return clientVer_; }
      }
      
      public const int ClientIDFieldNumber = 2;
      private bool hasClientID;
      private string clientID_ = "";
      public bool HasClientID {
        get { return hasClientID; }
      }
      public string ClientID {
        get { return clientID_; }
      }
      
      public const int RecvNotifyFieldNumber = 3;
      private bool hasRecvNotify;
      private bool recvNotify_;
      public bool HasRecvNotify {
        get { return hasRecvNotify; }
      }
      public bool RecvNotify {
        get { return recvNotify_; }
      }
      
      public const int PacketEncAlgoFieldNumber = 4;
      private bool hasPacketEncAlgo;
      private int packetEncAlgo_;
      public bool HasPacketEncAlgo {
        get { return hasPacketEncAlgo; }
      }
      public int PacketEncAlgo {
        get { return packetEncAlgo_; }
      }
      
      public const int PushProtoFmtFieldNumber = 5;
      private bool hasPushProtoFmt;
      private int pushProtoFmt_;
      public bool HasPushProtoFmt {
        get { return hasPushProtoFmt; }
      }
      public int PushProtoFmt {
        get { return pushProtoFmt_; }
      }
      
      public const int ProgrammingLanguageFieldNumber = 6;
      private bool hasProgrammingLanguage;
      private string programmingLanguage_ = "";
      public bool HasProgrammingLanguage {
        get { return hasProgrammingLanguage; }
      }
      public string ProgrammingLanguage {
        get { return programmingLanguage_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasClientVer) return false;
          if (!hasClientID) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasClientVer) {
          output.WriteInt32(1, field_names[1], ClientVer);
        }
        if (hasClientID) {
          output.WriteString(2, field_names[0], ClientID);
        }
        if (hasRecvNotify) {
          output.WriteBool(3, field_names[5], RecvNotify);
        }
        if (hasPacketEncAlgo) {
          output.WriteInt32(4, field_names[2], PacketEncAlgo);
        }
        if (hasPushProtoFmt) {
          output.WriteInt32(5, field_names[4], PushProtoFmt);
        }
        if (hasProgrammingLanguage) {
          output.WriteString(6, field_names[3], ProgrammingLanguage);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasClientVer) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ClientVer);
        }
        if (hasClientID) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ClientID);
        }
        if (hasRecvNotify) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, RecvNotify);
        }
        if (hasPacketEncAlgo) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, PacketEncAlgo);
        }
        if (hasPushProtoFmt) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, PushProtoFmt);
        }
        if (hasProgrammingLanguage) {
          size += pb::CodedOutputStream.ComputeStringSize(6, ProgrammingLanguage);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.InitConnect.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasClientVer) {
            ClientVer = other.ClientVer;
          }
          if (other.HasClientID) {
            ClientID = other.ClientID;
          }
          if (other.HasRecvNotify) {
            RecvNotify = other.RecvNotify;
          }
          if (other.HasPacketEncAlgo) {
            PacketEncAlgo = other.PacketEncAlgo;
          }
          if (other.HasPushProtoFmt) {
            PushProtoFmt = other.PushProtoFmt;
          }
          if (other.HasProgrammingLanguage) {
            ProgrammingLanguage = other.ProgrammingLanguage;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasClientVer = input.ReadInt32(ref result.clientVer_);
                break;
              }
              case 18: {
                result.hasClientID = input.ReadString(ref result.clientID_);
                break;
              }
              case 24: {
                result.hasRecvNotify = input.ReadBool(ref result.recvNotify_);
                break;
              }
              case 32: {
                result.hasPacketEncAlgo = input.ReadInt32(ref result.packetEncAlgo_);
                break;
              }
              case 40: {
                result.hasPushProtoFmt = input.ReadInt32(ref result.pushProtoFmt_);
                break;
              }
              case 50: {
                result.hasProgrammingLanguage = input.ReadString(ref result.programmingLanguage_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasClientVer {
          get { return result.hasClientVer; }
        }
        public int ClientVer {
          get { return result.ClientVer; }
          set { SetClientVer(value); }
        }
        public Builder SetClientVer(int value) {
          PrepareBuilder();
          result.hasClientVer = true;
          result.clientVer_ = value;
          return this;
        }
        public Builder ClearClientVer() {
          PrepareBuilder();
          result.hasClientVer = false;
          result.clientVer_ = 0;
          return this;
        }
        
        public bool HasClientID {
          get { return result.hasClientID; }
        }
        public string ClientID {
          get { return result.ClientID; }
          set { SetClientID(value); }
        }
        public Builder SetClientID(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasClientID = true;
          result.clientID_ = value;
          return this;
        }
        public Builder ClearClientID() {
          PrepareBuilder();
          result.hasClientID = false;
          result.clientID_ = "";
          return this;
        }
        
        public bool HasRecvNotify {
          get { return result.hasRecvNotify; }
        }
        public bool RecvNotify {
          get { return result.RecvNotify; }
          set { SetRecvNotify(value); }
        }
        public Builder SetRecvNotify(bool value) {
          PrepareBuilder();
          result.hasRecvNotify = true;
          result.recvNotify_ = value;
          return this;
        }
        public Builder ClearRecvNotify() {
          PrepareBuilder();
          result.hasRecvNotify = false;
          result.recvNotify_ = false;
          return this;
        }
        
        public bool HasPacketEncAlgo {
          get { return result.hasPacketEncAlgo; }
        }
        public int PacketEncAlgo {
          get { return result.PacketEncAlgo; }
          set { SetPacketEncAlgo(value); }
        }
        public Builder SetPacketEncAlgo(int value) {
          PrepareBuilder();
          result.hasPacketEncAlgo = true;
          result.packetEncAlgo_ = value;
          return this;
        }
        public Builder ClearPacketEncAlgo() {
          PrepareBuilder();
          result.hasPacketEncAlgo = false;
          result.packetEncAlgo_ = 0;
          return this;
        }
        
        public bool HasPushProtoFmt {
          get { return result.hasPushProtoFmt; }
        }
        public int PushProtoFmt {
          get { return result.PushProtoFmt; }
          set { SetPushProtoFmt(value); }
        }
        public Builder SetPushProtoFmt(int value) {
          PrepareBuilder();
          result.hasPushProtoFmt = true;
          result.pushProtoFmt_ = value;
          return this;
        }
        public Builder ClearPushProtoFmt() {
          PrepareBuilder();
          result.hasPushProtoFmt = false;
          result.pushProtoFmt_ = 0;
          return this;
        }
        
        public bool HasProgrammingLanguage {
          get { return result.hasProgrammingLanguage; }
        }
        public string ProgrammingLanguage {
          get { return result.ProgrammingLanguage; }
          set { SetProgrammingLanguage(value); }
        }
        public Builder SetProgrammingLanguage(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasProgrammingLanguage = true;
          result.programmingLanguage_ = value;
          return this;
        }
        public Builder ClearProgrammingLanguage() {
          PrepareBuilder();
          result.hasProgrammingLanguage = false;
          result.programmingLanguage_ = "";
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.InitConnect.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "aesCBCiv", "connAESKey", "connID", "keepAliveInterval", "loginUserID", "serverVer", "userAttribution" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 50, 34, 24, 40, 16, 8, 56 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_S2C__FieldAccessorTable; }
      }
      
      public const int ServerVerFieldNumber = 1;
      private bool hasServerVer;
      private int serverVer_;
      public bool HasServerVer {
        get { return hasServerVer; }
      }
      public int ServerVer {
        get { return serverVer_; }
      }
      
      public const int LoginUserIDFieldNumber = 2;
      private bool hasLoginUserID;
      private ulong loginUserID_;
      public bool HasLoginUserID {
        get { return hasLoginUserID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong LoginUserID {
        get { return loginUserID_; }
      }
      
      public const int ConnIDFieldNumber = 3;
      private bool hasConnID;
      private ulong connID_;
      public bool HasConnID {
        get { return hasConnID; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ConnID {
        get { return connID_; }
      }
      
      public const int ConnAESKeyFieldNumber = 4;
      private bool hasConnAESKey;
      private string connAESKey_ = "";
      public bool HasConnAESKey {
        get { return hasConnAESKey; }
      }
      public string ConnAESKey {
        get { return connAESKey_; }
      }
      
      public const int KeepAliveIntervalFieldNumber = 5;
      private bool hasKeepAliveInterval;
      private int keepAliveInterval_;
      public bool HasKeepAliveInterval {
        get { return hasKeepAliveInterval; }
      }
      public int KeepAliveInterval {
        get { return keepAliveInterval_; }
      }
      
      public const int AesCBCivFieldNumber = 6;
      private bool hasAesCBCiv;
      private string aesCBCiv_ = "";
      public bool HasAesCBCiv {
        get { return hasAesCBCiv; }
      }
      public string AesCBCiv {
        get { return aesCBCiv_; }
      }
      
      public const int UserAttributionFieldNumber = 7;
      private bool hasUserAttribution;
      private int userAttribution_;
      public bool HasUserAttribution {
        get { return hasUserAttribution; }
      }
      public int UserAttribution {
        get { return userAttribution_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasServerVer) return false;
          if (!hasLoginUserID) return false;
          if (!hasConnID) return false;
          if (!hasConnAESKey) return false;
          if (!hasKeepAliveInterval) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (hasServerVer) {
          output.WriteInt32(1, field_names[5], ServerVer);
        }
        if (hasLoginUserID) {
          output.WriteUInt64(2, field_names[4], LoginUserID);
        }
        if (hasConnID) {
          output.WriteUInt64(3, field_names[2], ConnID);
        }
        if (hasConnAESKey) {
          output.WriteString(4, field_names[1], ConnAESKey);
        }
        if (hasKeepAliveInterval) {
          output.WriteInt32(5, field_names[3], KeepAliveInterval);
        }
        if (hasAesCBCiv) {
          output.WriteString(6, field_names[0], AesCBCiv);
        }
        if (hasUserAttribution) {
          output.WriteInt32(7, field_names[6], UserAttribution);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasServerVer) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ServerVer);
        }
        if (hasLoginUserID) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, LoginUserID);
        }
        if (hasConnID) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ConnID);
        }
        if (hasConnAESKey) {
          size += pb::CodedOutputStream.ComputeStringSize(4, ConnAESKey);
        }
        if (hasKeepAliveInterval) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, KeepAliveInterval);
        }
        if (hasAesCBCiv) {
          size += pb::CodedOutputStream.ComputeStringSize(6, AesCBCiv);
        }
        if (hasUserAttribution) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, UserAttribution);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.InitConnect.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasServerVer) {
            ServerVer = other.ServerVer;
          }
          if (other.HasLoginUserID) {
            LoginUserID = other.LoginUserID;
          }
          if (other.HasConnID) {
            ConnID = other.ConnID;
          }
          if (other.HasConnAESKey) {
            ConnAESKey = other.ConnAESKey;
          }
          if (other.HasKeepAliveInterval) {
            KeepAliveInterval = other.KeepAliveInterval;
          }
          if (other.HasAesCBCiv) {
            AesCBCiv = other.AesCBCiv;
          }
          if (other.HasUserAttribution) {
            UserAttribution = other.UserAttribution;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasServerVer = input.ReadInt32(ref result.serverVer_);
                break;
              }
              case 16: {
                result.hasLoginUserID = input.ReadUInt64(ref result.loginUserID_);
                break;
              }
              case 24: {
                result.hasConnID = input.ReadUInt64(ref result.connID_);
                break;
              }
              case 34: {
                result.hasConnAESKey = input.ReadString(ref result.connAESKey_);
                break;
              }
              case 40: {
                result.hasKeepAliveInterval = input.ReadInt32(ref result.keepAliveInterval_);
                break;
              }
              case 50: {
                result.hasAesCBCiv = input.ReadString(ref result.aesCBCiv_);
                break;
              }
              case 56: {
                result.hasUserAttribution = input.ReadInt32(ref result.userAttribution_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasServerVer {
          get { return result.hasServerVer; }
        }
        public int ServerVer {
          get { return result.ServerVer; }
          set { SetServerVer(value); }
        }
        public Builder SetServerVer(int value) {
          PrepareBuilder();
          result.hasServerVer = true;
          result.serverVer_ = value;
          return this;
        }
        public Builder ClearServerVer() {
          PrepareBuilder();
          result.hasServerVer = false;
          result.serverVer_ = 0;
          return this;
        }
        
        public bool HasLoginUserID {
          get { return result.hasLoginUserID; }
        }
        [global::System.CLSCompliant(false)]
        public ulong LoginUserID {
          get { return result.LoginUserID; }
          set { SetLoginUserID(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetLoginUserID(ulong value) {
          PrepareBuilder();
          result.hasLoginUserID = true;
          result.loginUserID_ = value;
          return this;
        }
        public Builder ClearLoginUserID() {
          PrepareBuilder();
          result.hasLoginUserID = false;
          result.loginUserID_ = 0UL;
          return this;
        }
        
        public bool HasConnID {
          get { return result.hasConnID; }
        }
        [global::System.CLSCompliant(false)]
        public ulong ConnID {
          get { return result.ConnID; }
          set { SetConnID(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetConnID(ulong value) {
          PrepareBuilder();
          result.hasConnID = true;
          result.connID_ = value;
          return this;
        }
        public Builder ClearConnID() {
          PrepareBuilder();
          result.hasConnID = false;
          result.connID_ = 0UL;
          return this;
        }
        
        public bool HasConnAESKey {
          get { return result.hasConnAESKey; }
        }
        public string ConnAESKey {
          get { return result.ConnAESKey; }
          set { SetConnAESKey(value); }
        }
        public Builder SetConnAESKey(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasConnAESKey = true;
          result.connAESKey_ = value;
          return this;
        }
        public Builder ClearConnAESKey() {
          PrepareBuilder();
          result.hasConnAESKey = false;
          result.connAESKey_ = "";
          return this;
        }
        
        public bool HasKeepAliveInterval {
          get { return result.hasKeepAliveInterval; }
        }
        public int KeepAliveInterval {
          get { return result.KeepAliveInterval; }
          set { SetKeepAliveInterval(value); }
        }
        public Builder SetKeepAliveInterval(int value) {
          PrepareBuilder();
          result.hasKeepAliveInterval = true;
          result.keepAliveInterval_ = value;
          return this;
        }
        public Builder ClearKeepAliveInterval() {
          PrepareBuilder();
          result.hasKeepAliveInterval = false;
          result.keepAliveInterval_ = 0;
          return this;
        }
        
        public bool HasAesCBCiv {
          get { return result.hasAesCBCiv; }
        }
        public string AesCBCiv {
          get { return result.AesCBCiv; }
          set { SetAesCBCiv(value); }
        }
        public Builder SetAesCBCiv(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasAesCBCiv = true;
          result.aesCBCiv_ = value;
          return this;
        }
        public Builder ClearAesCBCiv() {
          PrepareBuilder();
          result.hasAesCBCiv = false;
          result.aesCBCiv_ = "";
          return this;
        }
        
        public bool HasUserAttribution {
          get { return result.hasUserAttribution; }
        }
        public int UserAttribution {
          get { return result.UserAttribution; }
          set { SetUserAttribution(value); }
        }
        public Builder SetUserAttribution(int value) {
          PrepareBuilder();
          result.hasUserAttribution = true;
          result.userAttribution_ = value;
          return this;
        }
        public Builder ClearUserAttribution() {
          PrepareBuilder();
          result.hasUserAttribution = false;
          result.userAttribution_ = 0;
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.InitConnect.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.InitConnect.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.InitConnect.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.InitConnect.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.InitConnect.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.InitConnect.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.InitConnect.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.InitConnect.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.InitConnect.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.InitConnect.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.InitConnect.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.InitConnect.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.InitConnect.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.InitConnect.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.InitConnect.internal__static_InitConnect_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.InitConnect.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.InitConnect.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.InitConnect.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.InitConnect.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.InitConnect.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.InitConnect.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.InitConnect.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.InitConnect.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.InitConnect.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.InitConnect.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.InitConnect.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.InitConnect.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.InitConnect.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.InitConnect.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
