// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class QotGetHistoryKLPoints {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Qot_GetHistoryKLPoints_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.Builder> internal__static_Qot_GetHistoryKLPoints_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.Builder> internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.Builder> internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetHistoryKLPoints_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.Builder> internal__static_Qot_GetHistoryKLPoints_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetHistoryKLPoints_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request.Builder> internal__static_Qot_GetHistoryKLPoints_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetHistoryKLPoints_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response.Builder> internal__static_Qot_GetHistoryKLPoints_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static QotGetHistoryKLPoints() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxRb3RfR2V0SGlzdG9yeUtMUG9pbnRzLnByb3RvEhZRb3RfR2V0SGlzdG9y", 
            "eUtMUG9pbnRzGgxDb21tb24ucHJvdG8aEFFvdF9Db21tb24ucHJvdG8iiwIK", 
            "A0MyUxIcCglyZWhhYlR5cGUYASACKAVSCXJlaGFiVHlwZRIWCgZrbFR5cGUY", 
            "AiACKAVSBmtsVHlwZRIeCgpub0RhdGFNb2RlGAMgAigFUgpub0RhdGFNb2Rl", 
            "EjgKDHNlY3VyaXR5TGlzdBgEIAMoCzIULlFvdF9Db21tb24uU2VjdXJpdHlS", 
            "DHNlY3VyaXR5TGlzdBIaCgh0aW1lTGlzdBgFIAMoCVIIdGltZUxpc3QSLAoR", 
            "bWF4UmVxU2VjdXJpdHlOdW0YBiABKAVSEW1heFJlcVNlY3VyaXR5TnVtEioK", 
            "EG5lZWRLTEZpZWxkc0ZsYWcYByABKANSEG5lZWRLTEZpZWxkc0ZsYWciZgoP", 
            "SGlzdG9yeVBvaW50c0tMEhYKBnN0YXR1cxgBIAIoBVIGc3RhdHVzEhgKB3Jl", 
            "cVRpbWUYAiACKAlSB3JlcVRpbWUSIQoCa2wYAyACKAsyES5Rb3RfQ29tbW9u", 
            "LktMaW5lUgJrbCKMAQoXU2VjdXJpdHlIaXN0b3J5S0xQb2ludHMSMAoIc2Vj", 
            "dXJpdHkYASACKAsyFC5Rb3RfQ29tbW9uLlNlY3VyaXR5UghzZWN1cml0eRI/", 
            "CgZrbExpc3QYAiADKAsyJy5Rb3RfR2V0SGlzdG9yeUtMUG9pbnRzLkhpc3Rv", 
            "cnlQb2ludHNLTFIGa2xMaXN0InIKA1MyQxJRCgtrbFBvaW50TGlzdBgBIAMo", 
            "CzIvLlFvdF9HZXRIaXN0b3J5S0xQb2ludHMuU2VjdXJpdHlIaXN0b3J5S0xQ", 
            "b2ludHNSC2tsUG9pbnRMaXN0EhgKB2hhc05leHQYAiABKAhSB2hhc05leHQi", 
            "OAoHUmVxdWVzdBItCgNjMnMYASACKAsyGy5Rb3RfR2V0SGlzdG9yeUtMUG9p", 
            "bnRzLkMyU1IDYzJzIosBCghSZXNwb25zZRIeCgdyZXRUeXBlGAEgAigFOgQt", 
            "NDAwUgdyZXRUeXBlEhYKBnJldE1zZxgCIAEoCVIGcmV0TXNnEhgKB2VyckNv", 
            "ZGUYAyABKAVSB2VyckNvZGUSLQoDczJjGAQgASgLMhsuUW90X0dldEhpc3Rv", 
            "cnlLTFBvaW50cy5TMkNSA3MyYypSCgpOb0RhdGFNb2RlEhMKD05vRGF0YU1v", 
            "ZGVfTnVsbBAAEhYKEk5vRGF0YU1vZGVfRm9yd2FyZBABEhcKE05vRGF0YU1v", 
            "ZGVfQmFja3dhcmQQAipnCgpEYXRhU3RhdHVzEhMKD0RhdGFTdGF0dXNfTnVs", 
            "bBAAEhYKEkRhdGFTdGF0dXNfQ3VycmVudBABEhcKE0RhdGFTdGF0dXNfUHJl", 
            "dmlvdXMQAhITCg9EYXRhU3RhdHVzX0JhY2sQA0JMChNjb20uZnV0dS5vcGVu", 
            "YXBpLnBiWjVnaXRodWIuY29tL2Z1dHVvcGVuL2Z0YXBpNGdvL3BiL3FvdGdl", 
          "dGhpc3RvcnlrbHBvaW50cw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Qot_GetHistoryKLPoints_C2S__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Qot_GetHistoryKLPoints_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.Builder>(internal__static_Qot_GetHistoryKLPoints_C2S__Descriptor,
                new string[] { "RehabType", "KlType", "NoDataMode", "SecurityList", "TimeList", "MaxReqSecurityNum", "NeedKLFieldsFlag", });
        internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.Builder>(internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__Descriptor,
                new string[] { "Status", "ReqTime", "Kl", });
        internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.Builder>(internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__Descriptor,
                new string[] { "Security", "KlList", });
        internal__static_Qot_GetHistoryKLPoints_S2C__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Qot_GetHistoryKLPoints_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.Builder>(internal__static_Qot_GetHistoryKLPoints_S2C__Descriptor,
                new string[] { "KlPointList", "HasNext", });
        internal__static_Qot_GetHistoryKLPoints_Request__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Qot_GetHistoryKLPoints_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request.Builder>(internal__static_Qot_GetHistoryKLPoints_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Qot_GetHistoryKLPoints_Response__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Qot_GetHistoryKLPoints_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response.Builder>(internal__static_Qot_GetHistoryKLPoints_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          global::Futu.OpenApi.Pb.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum NoDataMode {
      NoDataMode_Null = 0,
      NoDataMode_Forward = 1,
      NoDataMode_Backward = 2,
    }
    
    public enum DataStatus {
      DataStatus_Null = 0,
      DataStatus_Current = 1,
      DataStatus_Previous = 2,
      DataStatus_Back = 3,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "klType", "maxReqSecurityNum", "needKLFieldsFlag", "noDataMode", "rehabType", "securityList", "timeList" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 16, 48, 56, 24, 8, 34, 42 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_C2S__FieldAccessorTable; }
      }
      
      public const int RehabTypeFieldNumber = 1;
      private bool hasRehabType;
      private int rehabType_;
      public bool HasRehabType {
        get { return hasRehabType; }
      }
      public int RehabType {
        get { return rehabType_; }
      }
      
      public const int KlTypeFieldNumber = 2;
      private bool hasKlType;
      private int klType_;
      public bool HasKlType {
        get { return hasKlType; }
      }
      public int KlType {
        get { return klType_; }
      }
      
      public const int NoDataModeFieldNumber = 3;
      private bool hasNoDataMode;
      private int noDataMode_;
      public bool HasNoDataMode {
        get { return hasNoDataMode; }
      }
      public int NoDataMode {
        get { return noDataMode_; }
      }
      
      public const int SecurityListFieldNumber = 4;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> securityList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security>();
      public scg::IList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
        get { return securityList_; }
      }
      public int SecurityListCount {
        get { return securityList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
        return securityList_[index];
      }
      
      public const int TimeListFieldNumber = 5;
      private pbc::PopsicleList<string> timeList_ = new pbc::PopsicleList<string>();
      public scg::IList<string> TimeListList {
        get { return pbc::Lists.AsReadOnly(timeList_); }
      }
      public int TimeListCount {
        get { return timeList_.Count; }
      }
      public string GetTimeList(int index) {
        return timeList_[index];
      }
      
      public const int MaxReqSecurityNumFieldNumber = 6;
      private bool hasMaxReqSecurityNum;
      private int maxReqSecurityNum_;
      public bool HasMaxReqSecurityNum {
        get { return hasMaxReqSecurityNum; }
      }
      public int MaxReqSecurityNum {
        get { return maxReqSecurityNum_; }
      }
      
      public const int NeedKLFieldsFlagFieldNumber = 7;
      private bool hasNeedKLFieldsFlag;
      private long needKLFieldsFlag_;
      public bool HasNeedKLFieldsFlag {
        get { return hasNeedKLFieldsFlag; }
      }
      public long NeedKLFieldsFlag {
        get { return needKLFieldsFlag_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRehabType) return false;
          if (!hasKlType) return false;
          if (!hasNoDataMode) return false;
          foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasRehabType) {
          output.WriteInt32(1, field_names[4], RehabType);
        }
        if (hasKlType) {
          output.WriteInt32(2, field_names[0], KlType);
        }
        if (hasNoDataMode) {
          output.WriteInt32(3, field_names[3], NoDataMode);
        }
        if (securityList_.Count > 0) {
          output.WriteMessageArray(4, field_names[5], securityList_);
        }
        if (timeList_.Count > 0) {
          output.WriteStringArray(5, field_names[6], timeList_);
        }
        if (hasMaxReqSecurityNum) {
          output.WriteInt32(6, field_names[1], MaxReqSecurityNum);
        }
        if (hasNeedKLFieldsFlag) {
          output.WriteInt64(7, field_names[2], NeedKLFieldsFlag);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRehabType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RehabType);
        }
        if (hasKlType) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, KlType);
        }
        if (hasNoDataMode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, NoDataMode);
        }
        foreach (global::Futu.OpenApi.Pb.QotCommon.Security element in SecurityListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        {
          int dataSize = 0;
          foreach (string element in TimeListList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * timeList_.Count;
        }
        if (hasMaxReqSecurityNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, MaxReqSecurityNum);
        }
        if (hasNeedKLFieldsFlag) {
          size += pb::CodedOutputStream.ComputeInt64Size(7, NeedKLFieldsFlag);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        securityList_.MakeReadOnly();
        timeList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRehabType) {
            RehabType = other.RehabType;
          }
          if (other.HasKlType) {
            KlType = other.KlType;
          }
          if (other.HasNoDataMode) {
            NoDataMode = other.NoDataMode;
          }
          if (other.securityList_.Count != 0) {
            result.securityList_.Add(other.securityList_);
          }
          if (other.timeList_.Count != 0) {
            result.timeList_.Add(other.timeList_);
          }
          if (other.HasMaxReqSecurityNum) {
            MaxReqSecurityNum = other.MaxReqSecurityNum;
          }
          if (other.HasNeedKLFieldsFlag) {
            NeedKLFieldsFlag = other.NeedKLFieldsFlag;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRehabType = input.ReadInt32(ref result.rehabType_);
                break;
              }
              case 16: {
                result.hasKlType = input.ReadInt32(ref result.klType_);
                break;
              }
              case 24: {
                result.hasNoDataMode = input.ReadInt32(ref result.noDataMode_);
                break;
              }
              case 34: {
                input.ReadMessageArray(tag, field_name, result.securityList_, global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance, extensionRegistry);
                break;
              }
              case 42: {
                input.ReadStringArray(tag, field_name, result.timeList_);
                break;
              }
              case 48: {
                result.hasMaxReqSecurityNum = input.ReadInt32(ref result.maxReqSecurityNum_);
                break;
              }
              case 56: {
                result.hasNeedKLFieldsFlag = input.ReadInt64(ref result.needKLFieldsFlag_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRehabType {
          get { return result.hasRehabType; }
        }
        public int RehabType {
          get { return result.RehabType; }
          set { SetRehabType(value); }
        }
        public Builder SetRehabType(int value) {
          PrepareBuilder();
          result.hasRehabType = true;
          result.rehabType_ = value;
          return this;
        }
        public Builder ClearRehabType() {
          PrepareBuilder();
          result.hasRehabType = false;
          result.rehabType_ = 0;
          return this;
        }
        
        public bool HasKlType {
          get { return result.hasKlType; }
        }
        public int KlType {
          get { return result.KlType; }
          set { SetKlType(value); }
        }
        public Builder SetKlType(int value) {
          PrepareBuilder();
          result.hasKlType = true;
          result.klType_ = value;
          return this;
        }
        public Builder ClearKlType() {
          PrepareBuilder();
          result.hasKlType = false;
          result.klType_ = 0;
          return this;
        }
        
        public bool HasNoDataMode {
          get { return result.hasNoDataMode; }
        }
        public int NoDataMode {
          get { return result.NoDataMode; }
          set { SetNoDataMode(value); }
        }
        public Builder SetNoDataMode(int value) {
          PrepareBuilder();
          result.hasNoDataMode = true;
          result.noDataMode_ = value;
          return this;
        }
        public Builder ClearNoDataMode() {
          PrepareBuilder();
          result.hasNoDataMode = false;
          result.noDataMode_ = 0;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotCommon.Security> SecurityListList {
          get { return PrepareBuilder().securityList_; }
        }
        public int SecurityListCount {
          get { return result.SecurityListCount; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security GetSecurityList(int index) {
          return result.GetSecurityList(index);
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_[index] = value;
          return this;
        }
        public Builder SetSecurityList(int index, global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.securityList_.Add(value);
          return this;
        }
        public Builder AddSecurityList(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.securityList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeSecurityList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotCommon.Security> values) {
          PrepareBuilder();
          result.securityList_.Add(values);
          return this;
        }
        public Builder ClearSecurityList() {
          PrepareBuilder();
          result.securityList_.Clear();
          return this;
        }
        
        public pbc::IPopsicleList<string> TimeListList {
          get { return PrepareBuilder().timeList_; }
        }
        public int TimeListCount {
          get { return result.TimeListCount; }
        }
        public string GetTimeList(int index) {
          return result.GetTimeList(index);
        }
        public Builder SetTimeList(int index, string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.timeList_[index] = value;
          return this;
        }
        public Builder AddTimeList(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.timeList_.Add(value);
          return this;
        }
        public Builder AddRangeTimeList(scg::IEnumerable<string> values) {
          PrepareBuilder();
          result.timeList_.Add(values);
          return this;
        }
        public Builder ClearTimeList() {
          PrepareBuilder();
          result.timeList_.Clear();
          return this;
        }
        
        public bool HasMaxReqSecurityNum {
          get { return result.hasMaxReqSecurityNum; }
        }
        public int MaxReqSecurityNum {
          get { return result.MaxReqSecurityNum; }
          set { SetMaxReqSecurityNum(value); }
        }
        public Builder SetMaxReqSecurityNum(int value) {
          PrepareBuilder();
          result.hasMaxReqSecurityNum = true;
          result.maxReqSecurityNum_ = value;
          return this;
        }
        public Builder ClearMaxReqSecurityNum() {
          PrepareBuilder();
          result.hasMaxReqSecurityNum = false;
          result.maxReqSecurityNum_ = 0;
          return this;
        }
        
        public bool HasNeedKLFieldsFlag {
          get { return result.hasNeedKLFieldsFlag; }
        }
        public long NeedKLFieldsFlag {
          get { return result.NeedKLFieldsFlag; }
          set { SetNeedKLFieldsFlag(value); }
        }
        public Builder SetNeedKLFieldsFlag(long value) {
          PrepareBuilder();
          result.hasNeedKLFieldsFlag = true;
          result.needKLFieldsFlag_ = value;
          return this;
        }
        public Builder ClearNeedKLFieldsFlag() {
          PrepareBuilder();
          result.hasNeedKLFieldsFlag = false;
          result.needKLFieldsFlag_ = 0L;
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class HistoryPointsKL : pb::GeneratedMessage<HistoryPointsKL, HistoryPointsKL.Builder> {
      private HistoryPointsKL() { }
      private static readonly HistoryPointsKL defaultInstance = new HistoryPointsKL().MakeReadOnly();
      private static readonly string[] _historyPointsKLFieldNames = new string[] { "kl", "reqTime", "status" };
      private static readonly uint[] _historyPointsKLFieldTags = new uint[] { 26, 18, 8 };
      public static HistoryPointsKL DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override HistoryPointsKL DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override HistoryPointsKL ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<HistoryPointsKL, HistoryPointsKL.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_HistoryPointsKL__FieldAccessorTable; }
      }
      
      public const int StatusFieldNumber = 1;
      private bool hasStatus;
      private int status_;
      public bool HasStatus {
        get { return hasStatus; }
      }
      public int Status {
        get { return status_; }
      }
      
      public const int ReqTimeFieldNumber = 2;
      private bool hasReqTime;
      private string reqTime_ = "";
      public bool HasReqTime {
        get { return hasReqTime; }
      }
      public string ReqTime {
        get { return reqTime_; }
      }
      
      public const int KlFieldNumber = 3;
      private bool hasKl;
      private global::Futu.OpenApi.Pb.QotCommon.KLine kl_;
      public bool HasKl {
        get { return hasKl; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.KLine Kl {
        get { return kl_ ?? global::Futu.OpenApi.Pb.QotCommon.KLine.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasStatus) return false;
          if (!hasReqTime) return false;
          if (!hasKl) return false;
          if (!Kl.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _historyPointsKLFieldNames;
        if (hasStatus) {
          output.WriteInt32(1, field_names[2], Status);
        }
        if (hasReqTime) {
          output.WriteString(2, field_names[1], ReqTime);
        }
        if (hasKl) {
          output.WriteMessage(3, field_names[0], Kl);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Status);
        }
        if (hasReqTime) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ReqTime);
        }
        if (hasKl) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Kl);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static HistoryPointsKL ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static HistoryPointsKL ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static HistoryPointsKL ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static HistoryPointsKL ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private HistoryPointsKL MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(HistoryPointsKL prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<HistoryPointsKL, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(HistoryPointsKL cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private HistoryPointsKL result;
        
        private HistoryPointsKL PrepareBuilder() {
          if (resultIsReadOnly) {
            HistoryPointsKL original = result;
            result = new HistoryPointsKL();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override HistoryPointsKL MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.Descriptor; }
        }
        
        public override HistoryPointsKL DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.DefaultInstance; }
        }
        
        public override HistoryPointsKL BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is HistoryPointsKL) {
            return MergeFrom((HistoryPointsKL) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(HistoryPointsKL other) {
          if (other == global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasStatus) {
            Status = other.Status;
          }
          if (other.HasReqTime) {
            ReqTime = other.ReqTime;
          }
          if (other.HasKl) {
            MergeKl(other.Kl);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_historyPointsKLFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _historyPointsKLFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasStatus = input.ReadInt32(ref result.status_);
                break;
              }
              case 18: {
                result.hasReqTime = input.ReadString(ref result.reqTime_);
                break;
              }
              case 26: {
                global::Futu.OpenApi.Pb.QotCommon.KLine.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.KLine.CreateBuilder();
                if (result.hasKl) {
                  subBuilder.MergeFrom(Kl);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Kl = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasStatus {
          get { return result.hasStatus; }
        }
        public int Status {
          get { return result.Status; }
          set { SetStatus(value); }
        }
        public Builder SetStatus(int value) {
          PrepareBuilder();
          result.hasStatus = true;
          result.status_ = value;
          return this;
        }
        public Builder ClearStatus() {
          PrepareBuilder();
          result.hasStatus = false;
          result.status_ = 0;
          return this;
        }
        
        public bool HasReqTime {
          get { return result.hasReqTime; }
        }
        public string ReqTime {
          get { return result.ReqTime; }
          set { SetReqTime(value); }
        }
        public Builder SetReqTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasReqTime = true;
          result.reqTime_ = value;
          return this;
        }
        public Builder ClearReqTime() {
          PrepareBuilder();
          result.hasReqTime = false;
          result.reqTime_ = "";
          return this;
        }
        
        public bool HasKl {
         get { return result.hasKl; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.KLine Kl {
          get { return result.Kl; }
          set { SetKl(value); }
        }
        public Builder SetKl(global::Futu.OpenApi.Pb.QotCommon.KLine value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasKl = true;
          result.kl_ = value;
          return this;
        }
        public Builder SetKl(global::Futu.OpenApi.Pb.QotCommon.KLine.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasKl = true;
          result.kl_ = builderForValue.Build();
          return this;
        }
        public Builder MergeKl(global::Futu.OpenApi.Pb.QotCommon.KLine value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasKl &&
              result.kl_ != global::Futu.OpenApi.Pb.QotCommon.KLine.DefaultInstance) {
              result.kl_ = global::Futu.OpenApi.Pb.QotCommon.KLine.CreateBuilder(result.kl_).MergeFrom(value).BuildPartial();
          } else {
            result.kl_ = value;
          }
          result.hasKl = true;
          return this;
        }
        public Builder ClearKl() {
          PrepareBuilder();
          result.hasKl = false;
          result.kl_ = null;
          return this;
        }
      }
      static HistoryPointsKL() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class SecurityHistoryKLPoints : pb::GeneratedMessage<SecurityHistoryKLPoints, SecurityHistoryKLPoints.Builder> {
      private SecurityHistoryKLPoints() { }
      private static readonly SecurityHistoryKLPoints defaultInstance = new SecurityHistoryKLPoints().MakeReadOnly();
      private static readonly string[] _securityHistoryKLPointsFieldNames = new string[] { "klList", "security" };
      private static readonly uint[] _securityHistoryKLPointsFieldTags = new uint[] { 18, 10 };
      public static SecurityHistoryKLPoints DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override SecurityHistoryKLPoints DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override SecurityHistoryKLPoints ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<SecurityHistoryKLPoints, SecurityHistoryKLPoints.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_SecurityHistoryKLPoints__FieldAccessorTable; }
      }
      
      public const int SecurityFieldNumber = 1;
      private bool hasSecurity;
      private global::Futu.OpenApi.Pb.QotCommon.Security security_;
      public bool HasSecurity {
        get { return hasSecurity; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Security {
        get { return security_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int KlListFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL> klList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL> KlListList {
        get { return klList_; }
      }
      public int KlListCount {
        get { return klList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL GetKlList(int index) {
        return klList_[index];
      }
      
      public override bool IsInitialized {
        get {
          if (!hasSecurity) return false;
          if (!Security.IsInitialized) return false;
          foreach (global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL element in KlListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _securityHistoryKLPointsFieldNames;
        if (hasSecurity) {
          output.WriteMessage(1, field_names[1], Security);
        }
        if (klList_.Count > 0) {
          output.WriteMessageArray(2, field_names[0], klList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSecurity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Security);
        }
        foreach (global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL element in KlListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static SecurityHistoryKLPoints ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SecurityHistoryKLPoints ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private SecurityHistoryKLPoints MakeReadOnly() {
        klList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(SecurityHistoryKLPoints prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<SecurityHistoryKLPoints, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(SecurityHistoryKLPoints cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private SecurityHistoryKLPoints result;
        
        private SecurityHistoryKLPoints PrepareBuilder() {
          if (resultIsReadOnly) {
            SecurityHistoryKLPoints original = result;
            result = new SecurityHistoryKLPoints();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override SecurityHistoryKLPoints MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.Descriptor; }
        }
        
        public override SecurityHistoryKLPoints DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.DefaultInstance; }
        }
        
        public override SecurityHistoryKLPoints BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is SecurityHistoryKLPoints) {
            return MergeFrom((SecurityHistoryKLPoints) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(SecurityHistoryKLPoints other) {
          if (other == global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasSecurity) {
            MergeSecurity(other.Security);
          }
          if (other.klList_.Count != 0) {
            result.klList_.Add(other.klList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_securityHistoryKLPointsFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _securityHistoryKLPointsFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasSecurity) {
                  subBuilder.MergeFrom(Security);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Security = subBuilder.BuildPartial();
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.klList_, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasSecurity {
         get { return result.hasSecurity; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Security {
          get { return result.Security; }
          set { SetSecurity(value); }
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = value;
          return this;
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = builderForValue.Build();
          return this;
        }
        public Builder MergeSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasSecurity &&
              result.security_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.security_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.security_).MergeFrom(value).BuildPartial();
          } else {
            result.security_ = value;
          }
          result.hasSecurity = true;
          return this;
        }
        public Builder ClearSecurity() {
          PrepareBuilder();
          result.hasSecurity = false;
          result.security_ = null;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL> KlListList {
          get { return PrepareBuilder().klList_; }
        }
        public int KlListCount {
          get { return result.KlListCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL GetKlList(int index) {
          return result.GetKlList(index);
        }
        public Builder SetKlList(int index, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.klList_[index] = value;
          return this;
        }
        public Builder SetKlList(int index, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.klList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddKlList(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.klList_.Add(value);
          return this;
        }
        public Builder AddKlList(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.klList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeKlList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.HistoryPointsKL> values) {
          PrepareBuilder();
          result.klList_.Add(values);
          return this;
        }
        public Builder ClearKlList() {
          PrepareBuilder();
          result.klList_.Clear();
          return this;
        }
      }
      static SecurityHistoryKLPoints() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "hasNext", "klPointList" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 16, 10 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_S2C__FieldAccessorTable; }
      }
      
      public const int KlPointListFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints> klPointList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints> KlPointListList {
        get { return klPointList_; }
      }
      public int KlPointListCount {
        get { return klPointList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints GetKlPointList(int index) {
        return klPointList_[index];
      }
      
      public const int HasNextFieldNumber = 2;
      private bool hasHasNext;
      private bool hasNext_;
      public bool HasHasNext {
        get { return hasHasNext; }
      }
      public bool HasNext {
        get { return hasNext_; }
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints element in KlPointListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (klPointList_.Count > 0) {
          output.WriteMessageArray(1, field_names[1], klPointList_);
        }
        if (hasHasNext) {
          output.WriteBool(2, field_names[0], HasNext);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints element in KlPointListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasHasNext) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, HasNext);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        klPointList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.klPointList_.Count != 0) {
            result.klPointList_.Add(other.klPointList_);
          }
          if (other.HasHasNext) {
            HasNext = other.HasNext;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.klPointList_, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.DefaultInstance, extensionRegistry);
                break;
              }
              case 16: {
                result.hasHasNext = input.ReadBool(ref result.hasNext_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints> KlPointListList {
          get { return PrepareBuilder().klPointList_; }
        }
        public int KlPointListCount {
          get { return result.KlPointListCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints GetKlPointList(int index) {
          return result.GetKlPointList(index);
        }
        public Builder SetKlPointList(int index, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.klPointList_[index] = value;
          return this;
        }
        public Builder SetKlPointList(int index, global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.klPointList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddKlPointList(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.klPointList_.Add(value);
          return this;
        }
        public Builder AddKlPointList(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.klPointList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeKlPointList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.SecurityHistoryKLPoints> values) {
          PrepareBuilder();
          result.klPointList_.Add(values);
          return this;
        }
        public Builder ClearKlPointList() {
          PrepareBuilder();
          result.klPointList_.Clear();
          return this;
        }
        
        public bool HasHasNext {
          get { return result.hasHasNext; }
        }
        public bool HasNext {
          get { return result.HasNext; }
          set { SetHasNext(value); }
        }
        public Builder SetHasNext(bool value) {
          PrepareBuilder();
          result.hasHasNext = true;
          result.hasNext_ = value;
          return this;
        }
        public Builder ClearHasNext() {
          PrepareBuilder();
          result.hasHasNext = false;
          result.hasNext_ = false;
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.internal__static_Qot_GetHistoryKLPoints_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetHistoryKLPoints.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
