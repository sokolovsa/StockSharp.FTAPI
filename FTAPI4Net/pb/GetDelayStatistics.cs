// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GetDelayStatistics {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.C2S, global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.Builder> internal__static_GetDelayStatistics_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_DelayStatisticsItem__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.Builder> internal__static_GetDelayStatistics_DelayStatisticsItem__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_DelayStatistics__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.Builder> internal__static_GetDelayStatistics_DelayStatistics__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_ReqReplyStatisticsItem__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem, global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.Builder> internal__static_GetDelayStatistics_ReqReplyStatisticsItem__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem, global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.Builder> internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.S2C, global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.Builder> internal__static_GetDelayStatistics_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.Request, global::Futu.OpenApi.Pb.GetDelayStatistics.Request.Builder> internal__static_GetDelayStatistics_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_GetDelayStatistics_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.Response, global::Futu.OpenApi.Pb.GetDelayStatistics.Response.Builder> internal__static_GetDelayStatistics_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GetDelayStatistics() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhHZXREZWxheVN0YXRpc3RpY3MucHJvdG8SEkdldERlbGF5U3RhdGlzdGlj", 
            "cxoMQ29tbW9uLnByb3RvImcKA0MyUxIaCgh0eXBlTGlzdBgBIAMoBVIIdHlw", 
            "ZUxpc3QSIgoMcW90UHVzaFN0YWdlGAIgASgFUgxxb3RQdXNoU3RhZ2USIAoL", 
            "c2VnbWVudExpc3QYAyADKAVSC3NlZ21lbnRMaXN0Ip0BChNEZWxheVN0YXRp", 
            "c3RpY3NJdGVtEhQKBWJlZ2luGAEgAigFUgViZWdpbhIQCgNlbmQYAiACKAVS", 
            "A2VuZBIUCgVjb3VudBgDIAIoBVIFY291bnQSHgoKcHJvcG9ydGlvbhgEIAIo", 
            "AlIKcHJvcG9ydGlvbhIoCg9jdW11bGF0aXZlUmF0aW8YBSACKAJSD2N1bXVs", 
            "YXRpdmVSYXRpbyKqAQoPRGVsYXlTdGF0aXN0aWNzEiAKC3FvdFB1c2hUeXBl", 
            "GAEgAigFUgtxb3RQdXNoVHlwZRJDCghpdGVtTGlzdBgCIAMoCzInLkdldERl", 
            "bGF5U3RhdGlzdGljcy5EZWxheVN0YXRpc3RpY3NJdGVtUghpdGVtTGlzdBIa", 
            "CghkZWxheUF2ZxgDIAIoAlIIZGVsYXlBdmcSFAoFY291bnQYBCACKAVSBWNv", 
            "dW50ItYBChZSZXFSZXBseVN0YXRpc3RpY3NJdGVtEhgKB3Byb3RvSUQYASAC", 
            "KAVSB3Byb3RvSUQSFAoFY291bnQYAiACKAVSBWNvdW50EiIKDHRvdGFsQ29z", 
            "dEF2ZxgDIAIoAlIMdG90YWxDb3N0QXZnEiIKDG9wZW5EQ29zdEF2ZxgEIAIo", 
            "AlIMb3BlbkRDb3N0QXZnEiAKC25ldERlbGF5QXZnGAUgAigCUgtuZXREZWxh", 
            "eUF2ZxIiCgxpc0xvY2FsUmVwbHkYBiACKAhSDGlzTG9jYWxSZXBseSKsAQoY", 
            "UGxhY2VPcmRlclN0YXRpc3RpY3NJdGVtEhgKB29yZGVySUQYASACKAlSB29y", 
            "ZGVySUQSHAoJdG90YWxDb3N0GAIgAigCUgl0b3RhbENvc3QSHAoJb3BlbkRD", 
            "b3N0GAMgAigCUglvcGVuRENvc3QSGgoIbmV0RGVsYXkYBCACKAJSCG5ldERl", 
            "bGF5Eh4KCnVwZGF0ZUNvc3QYBSACKAJSCnVwZGF0ZUNvc3QirgIKA1MyQxJZ", 
            "ChVxb3RQdXNoU3RhdGlzdGljc0xpc3QYASADKAsyIy5HZXREZWxheVN0YXRp", 
            "c3RpY3MuRGVsYXlTdGF0aXN0aWNzUhVxb3RQdXNoU3RhdGlzdGljc0xpc3QS", 
            "YgoWcmVxUmVwbHlTdGF0aXN0aWNzTGlzdBgCIAMoCzIqLkdldERlbGF5U3Rh", 
            "dGlzdGljcy5SZXFSZXBseVN0YXRpc3RpY3NJdGVtUhZyZXFSZXBseVN0YXRp", 
            "c3RpY3NMaXN0EmgKGHBsYWNlT3JkZXJTdGF0aXN0aWNzTGlzdBgDIAMoCzIs", 
            "LkdldERlbGF5U3RhdGlzdGljcy5QbGFjZU9yZGVyU3RhdGlzdGljc0l0ZW1S", 
            "GHBsYWNlT3JkZXJTdGF0aXN0aWNzTGlzdCI0CgdSZXF1ZXN0EikKA2MycxgB", 
            "IAIoCzIXLkdldERlbGF5U3RhdGlzdGljcy5DMlNSA2MycyKHAQoIUmVzcG9u", 
            "c2USHgoHcmV0VHlwZRgBIAIoBToELTQwMFIHcmV0VHlwZRIWCgZyZXRNc2cY", 
            "AiABKAlSBnJldE1zZxIYCgdlcnJDb2RlGAMgASgFUgdlcnJDb2RlEikKA3My", 
            "YxgEIAEoCzIXLkdldERlbGF5U3RhdGlzdGljcy5TMkNSA3MyYyqcAQoTRGVs", 
            "YXlTdGF0aXN0aWNzVHlwZRIeChpEZWxheVN0YXRpc3RpY3NUeXBlX1Vua29u", 
            "dxAAEh8KG0RlbGF5U3RhdGlzdGljc1R5cGVfUW90UHVzaBABEiAKHERlbGF5", 
            "U3RhdGlzdGljc1R5cGVfUmVxUmVwbHkQAhIiCh5EZWxheVN0YXRpc3RpY3NU", 
            "eXBlX1BsYWNlT3JkZXIQAyqfAQoMUW90UHVzaFN0YWdlEhcKE1FvdFB1c2hT", 
            "dGFnZV9VbmtvbncQABIWChJRb3RQdXNoU3RhZ2VfU1IyU1MQARIWChJRb3RQ", 
            "dXNoU3RhZ2VfU1MyQ1IQAhIWChJRb3RQdXNoU3RhZ2VfQ1IyQ1MQAxIWChJR", 
            "b3RQdXNoU3RhZ2VfU1MyQ1MQBBIWChJRb3RQdXNoU3RhZ2VfU1IyQ1MQBSqH", 
            "AQoLUW90UHVzaFR5cGUSFgoSUW90UHVzaFR5cGVfVW5rb253EAASFQoRUW90", 
            "UHVzaFR5cGVfUHJpY2UQARIWChJRb3RQdXNoVHlwZV9UaWNrZXIQAhIZChVR", 
            "b3RQdXNoVHlwZV9PcmRlckJvb2sQAxIWChJRb3RQdXNoVHlwZV9Ccm9rZXIQ", 
            "BEJJChNjb20uZnV0dS5vcGVuYXBpLnBiWjJnaXRodWIuY29tL2Z1dHVvcGVu", 
          "L2Z0YXBpNGdvL3BiL2dldGRlbGF5c3RhdGlzdGljcw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_GetDelayStatistics_C2S__Descriptor = Descriptor.MessageTypes[0];
        internal__static_GetDelayStatistics_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.C2S, global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.Builder>(internal__static_GetDelayStatistics_C2S__Descriptor,
                new string[] { "TypeList", "QotPushStage", "SegmentList", });
        internal__static_GetDelayStatistics_DelayStatisticsItem__Descriptor = Descriptor.MessageTypes[1];
        internal__static_GetDelayStatistics_DelayStatisticsItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.Builder>(internal__static_GetDelayStatistics_DelayStatisticsItem__Descriptor,
                new string[] { "Begin", "End", "Count", "Proportion", "CumulativeRatio", });
        internal__static_GetDelayStatistics_DelayStatistics__Descriptor = Descriptor.MessageTypes[2];
        internal__static_GetDelayStatistics_DelayStatistics__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.Builder>(internal__static_GetDelayStatistics_DelayStatistics__Descriptor,
                new string[] { "QotPushType", "ItemList", "DelayAvg", "Count", });
        internal__static_GetDelayStatistics_ReqReplyStatisticsItem__Descriptor = Descriptor.MessageTypes[3];
        internal__static_GetDelayStatistics_ReqReplyStatisticsItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem, global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.Builder>(internal__static_GetDelayStatistics_ReqReplyStatisticsItem__Descriptor,
                new string[] { "ProtoID", "Count", "TotalCostAvg", "OpenDCostAvg", "NetDelayAvg", "IsLocalReply", });
        internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__Descriptor = Descriptor.MessageTypes[4];
        internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem, global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.Builder>(internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__Descriptor,
                new string[] { "OrderID", "TotalCost", "OpenDCost", "NetDelay", "UpdateCost", });
        internal__static_GetDelayStatistics_S2C__Descriptor = Descriptor.MessageTypes[5];
        internal__static_GetDelayStatistics_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.S2C, global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.Builder>(internal__static_GetDelayStatistics_S2C__Descriptor,
                new string[] { "QotPushStatisticsList", "ReqReplyStatisticsList", "PlaceOrderStatisticsList", });
        internal__static_GetDelayStatistics_Request__Descriptor = Descriptor.MessageTypes[6];
        internal__static_GetDelayStatistics_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.Request, global::Futu.OpenApi.Pb.GetDelayStatistics.Request.Builder>(internal__static_GetDelayStatistics_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_GetDelayStatistics_Response__Descriptor = Descriptor.MessageTypes[7];
        internal__static_GetDelayStatistics_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.GetDelayStatistics.Response, global::Futu.OpenApi.Pb.GetDelayStatistics.Response.Builder>(internal__static_GetDelayStatistics_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Enums
    public enum DelayStatisticsType {
      DelayStatisticsType_Unkonw = 0,
      DelayStatisticsType_QotPush = 1,
      DelayStatisticsType_ReqReply = 2,
      DelayStatisticsType_PlaceOrder = 3,
    }
    
    public enum QotPushStage {
      QotPushStage_Unkonw = 0,
      QotPushStage_SR2SS = 1,
      QotPushStage_SS2CR = 2,
      QotPushStage_CR2CS = 3,
      QotPushStage_SS2CS = 4,
      QotPushStage_SR2CS = 5,
    }
    
    public enum QotPushType {
      QotPushType_Unkonw = 0,
      QotPushType_Price = 1,
      QotPushType_Ticker = 2,
      QotPushType_OrderBook = 3,
      QotPushType_Broker = 4,
    }
    
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "qotPushStage", "segmentList", "typeList" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 16, 24, 8 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_C2S__FieldAccessorTable; }
      }
      
      public const int TypeListFieldNumber = 1;
      private pbc::PopsicleList<int> typeList_ = new pbc::PopsicleList<int>();
      public scg::IList<int> TypeListList {
        get { return pbc::Lists.AsReadOnly(typeList_); }
      }
      public int TypeListCount {
        get { return typeList_.Count; }
      }
      public int GetTypeList(int index) {
        return typeList_[index];
      }
      
      public const int QotPushStageFieldNumber = 2;
      private bool hasQotPushStage;
      private int qotPushStage_;
      public bool HasQotPushStage {
        get { return hasQotPushStage; }
      }
      public int QotPushStage {
        get { return qotPushStage_; }
      }
      
      public const int SegmentListFieldNumber = 3;
      private pbc::PopsicleList<int> segmentList_ = new pbc::PopsicleList<int>();
      public scg::IList<int> SegmentListList {
        get { return pbc::Lists.AsReadOnly(segmentList_); }
      }
      public int SegmentListCount {
        get { return segmentList_.Count; }
      }
      public int GetSegmentList(int index) {
        return segmentList_[index];
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (typeList_.Count > 0) {
          output.WriteInt32Array(1, field_names[2], typeList_);
        }
        if (hasQotPushStage) {
          output.WriteInt32(2, field_names[0], QotPushStage);
        }
        if (segmentList_.Count > 0) {
          output.WriteInt32Array(3, field_names[1], segmentList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (int element in TypeListList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * typeList_.Count;
        }
        if (hasQotPushStage) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, QotPushStage);
        }
        {
          int dataSize = 0;
          foreach (int element in SegmentListList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * segmentList_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        typeList_.MakeReadOnly();
        segmentList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.typeList_.Count != 0) {
            result.typeList_.Add(other.typeList_);
          }
          if (other.HasQotPushStage) {
            QotPushStage = other.QotPushStage;
          }
          if (other.segmentList_.Count != 0) {
            result.segmentList_.Add(other.segmentList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10:
              case 8: {
                input.ReadInt32Array(tag, field_name, result.typeList_);
                break;
              }
              case 16: {
                result.hasQotPushStage = input.ReadInt32(ref result.qotPushStage_);
                break;
              }
              case 26:
              case 24: {
                input.ReadInt32Array(tag, field_name, result.segmentList_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<int> TypeListList {
          get { return PrepareBuilder().typeList_; }
        }
        public int TypeListCount {
          get { return result.TypeListCount; }
        }
        public int GetTypeList(int index) {
          return result.GetTypeList(index);
        }
        public Builder SetTypeList(int index, int value) {
          PrepareBuilder();
          result.typeList_[index] = value;
          return this;
        }
        public Builder AddTypeList(int value) {
          PrepareBuilder();
          result.typeList_.Add(value);
          return this;
        }
        public Builder AddRangeTypeList(scg::IEnumerable<int> values) {
          PrepareBuilder();
          result.typeList_.Add(values);
          return this;
        }
        public Builder ClearTypeList() {
          PrepareBuilder();
          result.typeList_.Clear();
          return this;
        }
        
        public bool HasQotPushStage {
          get { return result.hasQotPushStage; }
        }
        public int QotPushStage {
          get { return result.QotPushStage; }
          set { SetQotPushStage(value); }
        }
        public Builder SetQotPushStage(int value) {
          PrepareBuilder();
          result.hasQotPushStage = true;
          result.qotPushStage_ = value;
          return this;
        }
        public Builder ClearQotPushStage() {
          PrepareBuilder();
          result.hasQotPushStage = false;
          result.qotPushStage_ = 0;
          return this;
        }
        
        public pbc::IPopsicleList<int> SegmentListList {
          get { return PrepareBuilder().segmentList_; }
        }
        public int SegmentListCount {
          get { return result.SegmentListCount; }
        }
        public int GetSegmentList(int index) {
          return result.GetSegmentList(index);
        }
        public Builder SetSegmentList(int index, int value) {
          PrepareBuilder();
          result.segmentList_[index] = value;
          return this;
        }
        public Builder AddSegmentList(int value) {
          PrepareBuilder();
          result.segmentList_.Add(value);
          return this;
        }
        public Builder AddRangeSegmentList(scg::IEnumerable<int> values) {
          PrepareBuilder();
          result.segmentList_.Add(values);
          return this;
        }
        public Builder ClearSegmentList() {
          PrepareBuilder();
          result.segmentList_.Clear();
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class DelayStatisticsItem : pb::GeneratedMessage<DelayStatisticsItem, DelayStatisticsItem.Builder> {
      private DelayStatisticsItem() { }
      private static readonly DelayStatisticsItem defaultInstance = new DelayStatisticsItem().MakeReadOnly();
      private static readonly string[] _delayStatisticsItemFieldNames = new string[] { "begin", "count", "cumulativeRatio", "end", "proportion" };
      private static readonly uint[] _delayStatisticsItemFieldTags = new uint[] { 8, 24, 45, 16, 37 };
      public static DelayStatisticsItem DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override DelayStatisticsItem DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override DelayStatisticsItem ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_DelayStatisticsItem__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<DelayStatisticsItem, DelayStatisticsItem.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_DelayStatisticsItem__FieldAccessorTable; }
      }
      
      public const int BeginFieldNumber = 1;
      private bool hasBegin;
      private int begin_;
      public bool HasBegin {
        get { return hasBegin; }
      }
      public int Begin {
        get { return begin_; }
      }
      
      public const int EndFieldNumber = 2;
      private bool hasEnd;
      private int end_;
      public bool HasEnd {
        get { return hasEnd; }
      }
      public int End {
        get { return end_; }
      }
      
      public const int CountFieldNumber = 3;
      private bool hasCount;
      private int count_;
      public bool HasCount {
        get { return hasCount; }
      }
      public int Count {
        get { return count_; }
      }
      
      public const int ProportionFieldNumber = 4;
      private bool hasProportion;
      private float proportion_;
      public bool HasProportion {
        get { return hasProportion; }
      }
      public float Proportion {
        get { return proportion_; }
      }
      
      public const int CumulativeRatioFieldNumber = 5;
      private bool hasCumulativeRatio;
      private float cumulativeRatio_;
      public bool HasCumulativeRatio {
        get { return hasCumulativeRatio; }
      }
      public float CumulativeRatio {
        get { return cumulativeRatio_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasBegin) return false;
          if (!hasEnd) return false;
          if (!hasCount) return false;
          if (!hasProportion) return false;
          if (!hasCumulativeRatio) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _delayStatisticsItemFieldNames;
        if (hasBegin) {
          output.WriteInt32(1, field_names[0], Begin);
        }
        if (hasEnd) {
          output.WriteInt32(2, field_names[3], End);
        }
        if (hasCount) {
          output.WriteInt32(3, field_names[1], Count);
        }
        if (hasProportion) {
          output.WriteFloat(4, field_names[4], Proportion);
        }
        if (hasCumulativeRatio) {
          output.WriteFloat(5, field_names[2], CumulativeRatio);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBegin) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Begin);
        }
        if (hasEnd) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, End);
        }
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Count);
        }
        if (hasProportion) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, Proportion);
        }
        if (hasCumulativeRatio) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, CumulativeRatio);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static DelayStatisticsItem ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static DelayStatisticsItem ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static DelayStatisticsItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static DelayStatisticsItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private DelayStatisticsItem MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(DelayStatisticsItem prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<DelayStatisticsItem, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(DelayStatisticsItem cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private DelayStatisticsItem result;
        
        private DelayStatisticsItem PrepareBuilder() {
          if (resultIsReadOnly) {
            DelayStatisticsItem original = result;
            result = new DelayStatisticsItem();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override DelayStatisticsItem MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.Descriptor; }
        }
        
        public override DelayStatisticsItem DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.DefaultInstance; }
        }
        
        public override DelayStatisticsItem BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is DelayStatisticsItem) {
            return MergeFrom((DelayStatisticsItem) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(DelayStatisticsItem other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasBegin) {
            Begin = other.Begin;
          }
          if (other.HasEnd) {
            End = other.End;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          if (other.HasProportion) {
            Proportion = other.Proportion;
          }
          if (other.HasCumulativeRatio) {
            CumulativeRatio = other.CumulativeRatio;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_delayStatisticsItemFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _delayStatisticsItemFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasBegin = input.ReadInt32(ref result.begin_);
                break;
              }
              case 16: {
                result.hasEnd = input.ReadInt32(ref result.end_);
                break;
              }
              case 24: {
                result.hasCount = input.ReadInt32(ref result.count_);
                break;
              }
              case 37: {
                result.hasProportion = input.ReadFloat(ref result.proportion_);
                break;
              }
              case 45: {
                result.hasCumulativeRatio = input.ReadFloat(ref result.cumulativeRatio_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasBegin {
          get { return result.hasBegin; }
        }
        public int Begin {
          get { return result.Begin; }
          set { SetBegin(value); }
        }
        public Builder SetBegin(int value) {
          PrepareBuilder();
          result.hasBegin = true;
          result.begin_ = value;
          return this;
        }
        public Builder ClearBegin() {
          PrepareBuilder();
          result.hasBegin = false;
          result.begin_ = 0;
          return this;
        }
        
        public bool HasEnd {
          get { return result.hasEnd; }
        }
        public int End {
          get { return result.End; }
          set { SetEnd(value); }
        }
        public Builder SetEnd(int value) {
          PrepareBuilder();
          result.hasEnd = true;
          result.end_ = value;
          return this;
        }
        public Builder ClearEnd() {
          PrepareBuilder();
          result.hasEnd = false;
          result.end_ = 0;
          return this;
        }
        
        public bool HasCount {
          get { return result.hasCount; }
        }
        public int Count {
          get { return result.Count; }
          set { SetCount(value); }
        }
        public Builder SetCount(int value) {
          PrepareBuilder();
          result.hasCount = true;
          result.count_ = value;
          return this;
        }
        public Builder ClearCount() {
          PrepareBuilder();
          result.hasCount = false;
          result.count_ = 0;
          return this;
        }
        
        public bool HasProportion {
          get { return result.hasProportion; }
        }
        public float Proportion {
          get { return result.Proportion; }
          set { SetProportion(value); }
        }
        public Builder SetProportion(float value) {
          PrepareBuilder();
          result.hasProportion = true;
          result.proportion_ = value;
          return this;
        }
        public Builder ClearProportion() {
          PrepareBuilder();
          result.hasProportion = false;
          result.proportion_ = 0F;
          return this;
        }
        
        public bool HasCumulativeRatio {
          get { return result.hasCumulativeRatio; }
        }
        public float CumulativeRatio {
          get { return result.CumulativeRatio; }
          set { SetCumulativeRatio(value); }
        }
        public Builder SetCumulativeRatio(float value) {
          PrepareBuilder();
          result.hasCumulativeRatio = true;
          result.cumulativeRatio_ = value;
          return this;
        }
        public Builder ClearCumulativeRatio() {
          PrepareBuilder();
          result.hasCumulativeRatio = false;
          result.cumulativeRatio_ = 0F;
          return this;
        }
      }
      static DelayStatisticsItem() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class DelayStatistics : pb::GeneratedMessage<DelayStatistics, DelayStatistics.Builder> {
      private DelayStatistics() { }
      private static readonly DelayStatistics defaultInstance = new DelayStatistics().MakeReadOnly();
      private static readonly string[] _delayStatisticsFieldNames = new string[] { "count", "delayAvg", "itemList", "qotPushType" };
      private static readonly uint[] _delayStatisticsFieldTags = new uint[] { 32, 29, 18, 8 };
      public static DelayStatistics DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override DelayStatistics DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override DelayStatistics ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_DelayStatistics__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<DelayStatistics, DelayStatistics.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_DelayStatistics__FieldAccessorTable; }
      }
      
      public const int QotPushTypeFieldNumber = 1;
      private bool hasQotPushType;
      private int qotPushType_;
      public bool HasQotPushType {
        get { return hasQotPushType; }
      }
      public int QotPushType {
        get { return qotPushType_; }
      }
      
      public const int ItemListFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem> itemList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem>();
      public scg::IList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem> ItemListList {
        get { return itemList_; }
      }
      public int ItemListCount {
        get { return itemList_.Count; }
      }
      public global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem GetItemList(int index) {
        return itemList_[index];
      }
      
      public const int DelayAvgFieldNumber = 3;
      private bool hasDelayAvg;
      private float delayAvg_;
      public bool HasDelayAvg {
        get { return hasDelayAvg; }
      }
      public float DelayAvg {
        get { return delayAvg_; }
      }
      
      public const int CountFieldNumber = 4;
      private bool hasCount;
      private int count_;
      public bool HasCount {
        get { return hasCount; }
      }
      public int Count {
        get { return count_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasQotPushType) return false;
          if (!hasDelayAvg) return false;
          if (!hasCount) return false;
          foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem element in ItemListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _delayStatisticsFieldNames;
        if (hasQotPushType) {
          output.WriteInt32(1, field_names[3], QotPushType);
        }
        if (itemList_.Count > 0) {
          output.WriteMessageArray(2, field_names[2], itemList_);
        }
        if (hasDelayAvg) {
          output.WriteFloat(3, field_names[1], DelayAvg);
        }
        if (hasCount) {
          output.WriteInt32(4, field_names[0], Count);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasQotPushType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, QotPushType);
        }
        foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem element in ItemListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasDelayAvg) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, DelayAvg);
        }
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Count);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static DelayStatistics ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static DelayStatistics ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static DelayStatistics ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static DelayStatistics ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static DelayStatistics ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static DelayStatistics ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static DelayStatistics ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static DelayStatistics ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static DelayStatistics ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static DelayStatistics ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private DelayStatistics MakeReadOnly() {
        itemList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(DelayStatistics prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<DelayStatistics, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(DelayStatistics cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private DelayStatistics result;
        
        private DelayStatistics PrepareBuilder() {
          if (resultIsReadOnly) {
            DelayStatistics original = result;
            result = new DelayStatistics();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override DelayStatistics MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.Descriptor; }
        }
        
        public override DelayStatistics DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.DefaultInstance; }
        }
        
        public override DelayStatistics BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is DelayStatistics) {
            return MergeFrom((DelayStatistics) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(DelayStatistics other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasQotPushType) {
            QotPushType = other.QotPushType;
          }
          if (other.itemList_.Count != 0) {
            result.itemList_.Add(other.itemList_);
          }
          if (other.HasDelayAvg) {
            DelayAvg = other.DelayAvg;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_delayStatisticsFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _delayStatisticsFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasQotPushType = input.ReadInt32(ref result.qotPushType_);
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.itemList_, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.DefaultInstance, extensionRegistry);
                break;
              }
              case 29: {
                result.hasDelayAvg = input.ReadFloat(ref result.delayAvg_);
                break;
              }
              case 32: {
                result.hasCount = input.ReadInt32(ref result.count_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasQotPushType {
          get { return result.hasQotPushType; }
        }
        public int QotPushType {
          get { return result.QotPushType; }
          set { SetQotPushType(value); }
        }
        public Builder SetQotPushType(int value) {
          PrepareBuilder();
          result.hasQotPushType = true;
          result.qotPushType_ = value;
          return this;
        }
        public Builder ClearQotPushType() {
          PrepareBuilder();
          result.hasQotPushType = false;
          result.qotPushType_ = 0;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem> ItemListList {
          get { return PrepareBuilder().itemList_; }
        }
        public int ItemListCount {
          get { return result.ItemListCount; }
        }
        public global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem GetItemList(int index) {
          return result.GetItemList(index);
        }
        public Builder SetItemList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.itemList_[index] = value;
          return this;
        }
        public Builder SetItemList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.itemList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddItemList(global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.itemList_.Add(value);
          return this;
        }
        public Builder AddItemList(global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.itemList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeItemList(scg::IEnumerable<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatisticsItem> values) {
          PrepareBuilder();
          result.itemList_.Add(values);
          return this;
        }
        public Builder ClearItemList() {
          PrepareBuilder();
          result.itemList_.Clear();
          return this;
        }
        
        public bool HasDelayAvg {
          get { return result.hasDelayAvg; }
        }
        public float DelayAvg {
          get { return result.DelayAvg; }
          set { SetDelayAvg(value); }
        }
        public Builder SetDelayAvg(float value) {
          PrepareBuilder();
          result.hasDelayAvg = true;
          result.delayAvg_ = value;
          return this;
        }
        public Builder ClearDelayAvg() {
          PrepareBuilder();
          result.hasDelayAvg = false;
          result.delayAvg_ = 0F;
          return this;
        }
        
        public bool HasCount {
          get { return result.hasCount; }
        }
        public int Count {
          get { return result.Count; }
          set { SetCount(value); }
        }
        public Builder SetCount(int value) {
          PrepareBuilder();
          result.hasCount = true;
          result.count_ = value;
          return this;
        }
        public Builder ClearCount() {
          PrepareBuilder();
          result.hasCount = false;
          result.count_ = 0;
          return this;
        }
      }
      static DelayStatistics() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ReqReplyStatisticsItem : pb::GeneratedMessage<ReqReplyStatisticsItem, ReqReplyStatisticsItem.Builder> {
      private ReqReplyStatisticsItem() { }
      private static readonly ReqReplyStatisticsItem defaultInstance = new ReqReplyStatisticsItem().MakeReadOnly();
      private static readonly string[] _reqReplyStatisticsItemFieldNames = new string[] { "count", "isLocalReply", "netDelayAvg", "openDCostAvg", "protoID", "totalCostAvg" };
      private static readonly uint[] _reqReplyStatisticsItemFieldTags = new uint[] { 16, 48, 45, 37, 8, 29 };
      public static ReqReplyStatisticsItem DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ReqReplyStatisticsItem DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ReqReplyStatisticsItem ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_ReqReplyStatisticsItem__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ReqReplyStatisticsItem, ReqReplyStatisticsItem.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_ReqReplyStatisticsItem__FieldAccessorTable; }
      }
      
      public const int ProtoIDFieldNumber = 1;
      private bool hasProtoID;
      private int protoID_;
      public bool HasProtoID {
        get { return hasProtoID; }
      }
      public int ProtoID {
        get { return protoID_; }
      }
      
      public const int CountFieldNumber = 2;
      private bool hasCount;
      private int count_;
      public bool HasCount {
        get { return hasCount; }
      }
      public int Count {
        get { return count_; }
      }
      
      public const int TotalCostAvgFieldNumber = 3;
      private bool hasTotalCostAvg;
      private float totalCostAvg_;
      public bool HasTotalCostAvg {
        get { return hasTotalCostAvg; }
      }
      public float TotalCostAvg {
        get { return totalCostAvg_; }
      }
      
      public const int OpenDCostAvgFieldNumber = 4;
      private bool hasOpenDCostAvg;
      private float openDCostAvg_;
      public bool HasOpenDCostAvg {
        get { return hasOpenDCostAvg; }
      }
      public float OpenDCostAvg {
        get { return openDCostAvg_; }
      }
      
      public const int NetDelayAvgFieldNumber = 5;
      private bool hasNetDelayAvg;
      private float netDelayAvg_;
      public bool HasNetDelayAvg {
        get { return hasNetDelayAvg; }
      }
      public float NetDelayAvg {
        get { return netDelayAvg_; }
      }
      
      public const int IsLocalReplyFieldNumber = 6;
      private bool hasIsLocalReply;
      private bool isLocalReply_;
      public bool HasIsLocalReply {
        get { return hasIsLocalReply; }
      }
      public bool IsLocalReply {
        get { return isLocalReply_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasProtoID) return false;
          if (!hasCount) return false;
          if (!hasTotalCostAvg) return false;
          if (!hasOpenDCostAvg) return false;
          if (!hasNetDelayAvg) return false;
          if (!hasIsLocalReply) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _reqReplyStatisticsItemFieldNames;
        if (hasProtoID) {
          output.WriteInt32(1, field_names[4], ProtoID);
        }
        if (hasCount) {
          output.WriteInt32(2, field_names[0], Count);
        }
        if (hasTotalCostAvg) {
          output.WriteFloat(3, field_names[5], TotalCostAvg);
        }
        if (hasOpenDCostAvg) {
          output.WriteFloat(4, field_names[3], OpenDCostAvg);
        }
        if (hasNetDelayAvg) {
          output.WriteFloat(5, field_names[2], NetDelayAvg);
        }
        if (hasIsLocalReply) {
          output.WriteBool(6, field_names[1], IsLocalReply);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProtoID) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ProtoID);
        }
        if (hasCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Count);
        }
        if (hasTotalCostAvg) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, TotalCostAvg);
        }
        if (hasOpenDCostAvg) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, OpenDCostAvg);
        }
        if (hasNetDelayAvg) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, NetDelayAvg);
        }
        if (hasIsLocalReply) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsLocalReply);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static ReqReplyStatisticsItem ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ReqReplyStatisticsItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ReqReplyStatisticsItem MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ReqReplyStatisticsItem prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ReqReplyStatisticsItem, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ReqReplyStatisticsItem cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ReqReplyStatisticsItem result;
        
        private ReqReplyStatisticsItem PrepareBuilder() {
          if (resultIsReadOnly) {
            ReqReplyStatisticsItem original = result;
            result = new ReqReplyStatisticsItem();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ReqReplyStatisticsItem MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.Descriptor; }
        }
        
        public override ReqReplyStatisticsItem DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.DefaultInstance; }
        }
        
        public override ReqReplyStatisticsItem BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ReqReplyStatisticsItem) {
            return MergeFrom((ReqReplyStatisticsItem) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ReqReplyStatisticsItem other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasProtoID) {
            ProtoID = other.ProtoID;
          }
          if (other.HasCount) {
            Count = other.Count;
          }
          if (other.HasTotalCostAvg) {
            TotalCostAvg = other.TotalCostAvg;
          }
          if (other.HasOpenDCostAvg) {
            OpenDCostAvg = other.OpenDCostAvg;
          }
          if (other.HasNetDelayAvg) {
            NetDelayAvg = other.NetDelayAvg;
          }
          if (other.HasIsLocalReply) {
            IsLocalReply = other.IsLocalReply;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_reqReplyStatisticsItemFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _reqReplyStatisticsItemFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasProtoID = input.ReadInt32(ref result.protoID_);
                break;
              }
              case 16: {
                result.hasCount = input.ReadInt32(ref result.count_);
                break;
              }
              case 29: {
                result.hasTotalCostAvg = input.ReadFloat(ref result.totalCostAvg_);
                break;
              }
              case 37: {
                result.hasOpenDCostAvg = input.ReadFloat(ref result.openDCostAvg_);
                break;
              }
              case 45: {
                result.hasNetDelayAvg = input.ReadFloat(ref result.netDelayAvg_);
                break;
              }
              case 48: {
                result.hasIsLocalReply = input.ReadBool(ref result.isLocalReply_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasProtoID {
          get { return result.hasProtoID; }
        }
        public int ProtoID {
          get { return result.ProtoID; }
          set { SetProtoID(value); }
        }
        public Builder SetProtoID(int value) {
          PrepareBuilder();
          result.hasProtoID = true;
          result.protoID_ = value;
          return this;
        }
        public Builder ClearProtoID() {
          PrepareBuilder();
          result.hasProtoID = false;
          result.protoID_ = 0;
          return this;
        }
        
        public bool HasCount {
          get { return result.hasCount; }
        }
        public int Count {
          get { return result.Count; }
          set { SetCount(value); }
        }
        public Builder SetCount(int value) {
          PrepareBuilder();
          result.hasCount = true;
          result.count_ = value;
          return this;
        }
        public Builder ClearCount() {
          PrepareBuilder();
          result.hasCount = false;
          result.count_ = 0;
          return this;
        }
        
        public bool HasTotalCostAvg {
          get { return result.hasTotalCostAvg; }
        }
        public float TotalCostAvg {
          get { return result.TotalCostAvg; }
          set { SetTotalCostAvg(value); }
        }
        public Builder SetTotalCostAvg(float value) {
          PrepareBuilder();
          result.hasTotalCostAvg = true;
          result.totalCostAvg_ = value;
          return this;
        }
        public Builder ClearTotalCostAvg() {
          PrepareBuilder();
          result.hasTotalCostAvg = false;
          result.totalCostAvg_ = 0F;
          return this;
        }
        
        public bool HasOpenDCostAvg {
          get { return result.hasOpenDCostAvg; }
        }
        public float OpenDCostAvg {
          get { return result.OpenDCostAvg; }
          set { SetOpenDCostAvg(value); }
        }
        public Builder SetOpenDCostAvg(float value) {
          PrepareBuilder();
          result.hasOpenDCostAvg = true;
          result.openDCostAvg_ = value;
          return this;
        }
        public Builder ClearOpenDCostAvg() {
          PrepareBuilder();
          result.hasOpenDCostAvg = false;
          result.openDCostAvg_ = 0F;
          return this;
        }
        
        public bool HasNetDelayAvg {
          get { return result.hasNetDelayAvg; }
        }
        public float NetDelayAvg {
          get { return result.NetDelayAvg; }
          set { SetNetDelayAvg(value); }
        }
        public Builder SetNetDelayAvg(float value) {
          PrepareBuilder();
          result.hasNetDelayAvg = true;
          result.netDelayAvg_ = value;
          return this;
        }
        public Builder ClearNetDelayAvg() {
          PrepareBuilder();
          result.hasNetDelayAvg = false;
          result.netDelayAvg_ = 0F;
          return this;
        }
        
        public bool HasIsLocalReply {
          get { return result.hasIsLocalReply; }
        }
        public bool IsLocalReply {
          get { return result.IsLocalReply; }
          set { SetIsLocalReply(value); }
        }
        public Builder SetIsLocalReply(bool value) {
          PrepareBuilder();
          result.hasIsLocalReply = true;
          result.isLocalReply_ = value;
          return this;
        }
        public Builder ClearIsLocalReply() {
          PrepareBuilder();
          result.hasIsLocalReply = false;
          result.isLocalReply_ = false;
          return this;
        }
      }
      static ReqReplyStatisticsItem() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class PlaceOrderStatisticsItem : pb::GeneratedMessage<PlaceOrderStatisticsItem, PlaceOrderStatisticsItem.Builder> {
      private PlaceOrderStatisticsItem() { }
      private static readonly PlaceOrderStatisticsItem defaultInstance = new PlaceOrderStatisticsItem().MakeReadOnly();
      private static readonly string[] _placeOrderStatisticsItemFieldNames = new string[] { "netDelay", "openDCost", "orderID", "totalCost", "updateCost" };
      private static readonly uint[] _placeOrderStatisticsItemFieldTags = new uint[] { 37, 29, 10, 21, 45 };
      public static PlaceOrderStatisticsItem DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override PlaceOrderStatisticsItem DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override PlaceOrderStatisticsItem ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<PlaceOrderStatisticsItem, PlaceOrderStatisticsItem.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_PlaceOrderStatisticsItem__FieldAccessorTable; }
      }
      
      public const int OrderIDFieldNumber = 1;
      private bool hasOrderID;
      private string orderID_ = "";
      public bool HasOrderID {
        get { return hasOrderID; }
      }
      public string OrderID {
        get { return orderID_; }
      }
      
      public const int TotalCostFieldNumber = 2;
      private bool hasTotalCost;
      private float totalCost_;
      public bool HasTotalCost {
        get { return hasTotalCost; }
      }
      public float TotalCost {
        get { return totalCost_; }
      }
      
      public const int OpenDCostFieldNumber = 3;
      private bool hasOpenDCost;
      private float openDCost_;
      public bool HasOpenDCost {
        get { return hasOpenDCost; }
      }
      public float OpenDCost {
        get { return openDCost_; }
      }
      
      public const int NetDelayFieldNumber = 4;
      private bool hasNetDelay;
      private float netDelay_;
      public bool HasNetDelay {
        get { return hasNetDelay; }
      }
      public float NetDelay {
        get { return netDelay_; }
      }
      
      public const int UpdateCostFieldNumber = 5;
      private bool hasUpdateCost;
      private float updateCost_;
      public bool HasUpdateCost {
        get { return hasUpdateCost; }
      }
      public float UpdateCost {
        get { return updateCost_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasOrderID) return false;
          if (!hasTotalCost) return false;
          if (!hasOpenDCost) return false;
          if (!hasNetDelay) return false;
          if (!hasUpdateCost) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _placeOrderStatisticsItemFieldNames;
        if (hasOrderID) {
          output.WriteString(1, field_names[2], OrderID);
        }
        if (hasTotalCost) {
          output.WriteFloat(2, field_names[3], TotalCost);
        }
        if (hasOpenDCost) {
          output.WriteFloat(3, field_names[1], OpenDCost);
        }
        if (hasNetDelay) {
          output.WriteFloat(4, field_names[0], NetDelay);
        }
        if (hasUpdateCost) {
          output.WriteFloat(5, field_names[4], UpdateCost);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderID) {
          size += pb::CodedOutputStream.ComputeStringSize(1, OrderID);
        }
        if (hasTotalCost) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, TotalCost);
        }
        if (hasOpenDCost) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, OpenDCost);
        }
        if (hasNetDelay) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, NetDelay);
        }
        if (hasUpdateCost) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, UpdateCost);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static PlaceOrderStatisticsItem ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PlaceOrderStatisticsItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private PlaceOrderStatisticsItem MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(PlaceOrderStatisticsItem prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<PlaceOrderStatisticsItem, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(PlaceOrderStatisticsItem cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private PlaceOrderStatisticsItem result;
        
        private PlaceOrderStatisticsItem PrepareBuilder() {
          if (resultIsReadOnly) {
            PlaceOrderStatisticsItem original = result;
            result = new PlaceOrderStatisticsItem();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override PlaceOrderStatisticsItem MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.Descriptor; }
        }
        
        public override PlaceOrderStatisticsItem DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.DefaultInstance; }
        }
        
        public override PlaceOrderStatisticsItem BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is PlaceOrderStatisticsItem) {
            return MergeFrom((PlaceOrderStatisticsItem) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(PlaceOrderStatisticsItem other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasOrderID) {
            OrderID = other.OrderID;
          }
          if (other.HasTotalCost) {
            TotalCost = other.TotalCost;
          }
          if (other.HasOpenDCost) {
            OpenDCost = other.OpenDCost;
          }
          if (other.HasNetDelay) {
            NetDelay = other.NetDelay;
          }
          if (other.HasUpdateCost) {
            UpdateCost = other.UpdateCost;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_placeOrderStatisticsItemFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _placeOrderStatisticsItemFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasOrderID = input.ReadString(ref result.orderID_);
                break;
              }
              case 21: {
                result.hasTotalCost = input.ReadFloat(ref result.totalCost_);
                break;
              }
              case 29: {
                result.hasOpenDCost = input.ReadFloat(ref result.openDCost_);
                break;
              }
              case 37: {
                result.hasNetDelay = input.ReadFloat(ref result.netDelay_);
                break;
              }
              case 45: {
                result.hasUpdateCost = input.ReadFloat(ref result.updateCost_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasOrderID {
          get { return result.hasOrderID; }
        }
        public string OrderID {
          get { return result.OrderID; }
          set { SetOrderID(value); }
        }
        public Builder SetOrderID(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasOrderID = true;
          result.orderID_ = value;
          return this;
        }
        public Builder ClearOrderID() {
          PrepareBuilder();
          result.hasOrderID = false;
          result.orderID_ = "";
          return this;
        }
        
        public bool HasTotalCost {
          get { return result.hasTotalCost; }
        }
        public float TotalCost {
          get { return result.TotalCost; }
          set { SetTotalCost(value); }
        }
        public Builder SetTotalCost(float value) {
          PrepareBuilder();
          result.hasTotalCost = true;
          result.totalCost_ = value;
          return this;
        }
        public Builder ClearTotalCost() {
          PrepareBuilder();
          result.hasTotalCost = false;
          result.totalCost_ = 0F;
          return this;
        }
        
        public bool HasOpenDCost {
          get { return result.hasOpenDCost; }
        }
        public float OpenDCost {
          get { return result.OpenDCost; }
          set { SetOpenDCost(value); }
        }
        public Builder SetOpenDCost(float value) {
          PrepareBuilder();
          result.hasOpenDCost = true;
          result.openDCost_ = value;
          return this;
        }
        public Builder ClearOpenDCost() {
          PrepareBuilder();
          result.hasOpenDCost = false;
          result.openDCost_ = 0F;
          return this;
        }
        
        public bool HasNetDelay {
          get { return result.hasNetDelay; }
        }
        public float NetDelay {
          get { return result.NetDelay; }
          set { SetNetDelay(value); }
        }
        public Builder SetNetDelay(float value) {
          PrepareBuilder();
          result.hasNetDelay = true;
          result.netDelay_ = value;
          return this;
        }
        public Builder ClearNetDelay() {
          PrepareBuilder();
          result.hasNetDelay = false;
          result.netDelay_ = 0F;
          return this;
        }
        
        public bool HasUpdateCost {
          get { return result.hasUpdateCost; }
        }
        public float UpdateCost {
          get { return result.UpdateCost; }
          set { SetUpdateCost(value); }
        }
        public Builder SetUpdateCost(float value) {
          PrepareBuilder();
          result.hasUpdateCost = true;
          result.updateCost_ = value;
          return this;
        }
        public Builder ClearUpdateCost() {
          PrepareBuilder();
          result.hasUpdateCost = false;
          result.updateCost_ = 0F;
          return this;
        }
      }
      static PlaceOrderStatisticsItem() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "placeOrderStatisticsList", "qotPushStatisticsList", "reqReplyStatisticsList" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 26, 10, 18 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_S2C__FieldAccessorTable; }
      }
      
      public const int QotPushStatisticsListFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics> qotPushStatisticsList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics>();
      public scg::IList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics> QotPushStatisticsListList {
        get { return qotPushStatisticsList_; }
      }
      public int QotPushStatisticsListCount {
        get { return qotPushStatisticsList_.Count; }
      }
      public global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics GetQotPushStatisticsList(int index) {
        return qotPushStatisticsList_[index];
      }
      
      public const int ReqReplyStatisticsListFieldNumber = 2;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem> reqReplyStatisticsList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem>();
      public scg::IList<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem> ReqReplyStatisticsListList {
        get { return reqReplyStatisticsList_; }
      }
      public int ReqReplyStatisticsListCount {
        get { return reqReplyStatisticsList_.Count; }
      }
      public global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem GetReqReplyStatisticsList(int index) {
        return reqReplyStatisticsList_[index];
      }
      
      public const int PlaceOrderStatisticsListFieldNumber = 3;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem> placeOrderStatisticsList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem>();
      public scg::IList<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem> PlaceOrderStatisticsListList {
        get { return placeOrderStatisticsList_; }
      }
      public int PlaceOrderStatisticsListCount {
        get { return placeOrderStatisticsList_.Count; }
      }
      public global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem GetPlaceOrderStatisticsList(int index) {
        return placeOrderStatisticsList_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics element in QotPushStatisticsListList) {
            if (!element.IsInitialized) return false;
          }
          foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem element in ReqReplyStatisticsListList) {
            if (!element.IsInitialized) return false;
          }
          foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem element in PlaceOrderStatisticsListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (qotPushStatisticsList_.Count > 0) {
          output.WriteMessageArray(1, field_names[1], qotPushStatisticsList_);
        }
        if (reqReplyStatisticsList_.Count > 0) {
          output.WriteMessageArray(2, field_names[2], reqReplyStatisticsList_);
        }
        if (placeOrderStatisticsList_.Count > 0) {
          output.WriteMessageArray(3, field_names[0], placeOrderStatisticsList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics element in QotPushStatisticsListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem element in ReqReplyStatisticsListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem element in PlaceOrderStatisticsListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        qotPushStatisticsList_.MakeReadOnly();
        reqReplyStatisticsList_.MakeReadOnly();
        placeOrderStatisticsList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.qotPushStatisticsList_.Count != 0) {
            result.qotPushStatisticsList_.Add(other.qotPushStatisticsList_);
          }
          if (other.reqReplyStatisticsList_.Count != 0) {
            result.reqReplyStatisticsList_.Add(other.reqReplyStatisticsList_);
          }
          if (other.placeOrderStatisticsList_.Count != 0) {
            result.placeOrderStatisticsList_.Add(other.placeOrderStatisticsList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.qotPushStatisticsList_, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.DefaultInstance, extensionRegistry);
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.reqReplyStatisticsList_, global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.DefaultInstance, extensionRegistry);
                break;
              }
              case 26: {
                input.ReadMessageArray(tag, field_name, result.placeOrderStatisticsList_, global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics> QotPushStatisticsListList {
          get { return PrepareBuilder().qotPushStatisticsList_; }
        }
        public int QotPushStatisticsListCount {
          get { return result.QotPushStatisticsListCount; }
        }
        public global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics GetQotPushStatisticsList(int index) {
          return result.GetQotPushStatisticsList(index);
        }
        public Builder SetQotPushStatisticsList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.qotPushStatisticsList_[index] = value;
          return this;
        }
        public Builder SetQotPushStatisticsList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.qotPushStatisticsList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddQotPushStatisticsList(global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.qotPushStatisticsList_.Add(value);
          return this;
        }
        public Builder AddQotPushStatisticsList(global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.qotPushStatisticsList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeQotPushStatisticsList(scg::IEnumerable<global::Futu.OpenApi.Pb.GetDelayStatistics.DelayStatistics> values) {
          PrepareBuilder();
          result.qotPushStatisticsList_.Add(values);
          return this;
        }
        public Builder ClearQotPushStatisticsList() {
          PrepareBuilder();
          result.qotPushStatisticsList_.Clear();
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem> ReqReplyStatisticsListList {
          get { return PrepareBuilder().reqReplyStatisticsList_; }
        }
        public int ReqReplyStatisticsListCount {
          get { return result.ReqReplyStatisticsListCount; }
        }
        public global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem GetReqReplyStatisticsList(int index) {
          return result.GetReqReplyStatisticsList(index);
        }
        public Builder SetReqReplyStatisticsList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.reqReplyStatisticsList_[index] = value;
          return this;
        }
        public Builder SetReqReplyStatisticsList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.reqReplyStatisticsList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddReqReplyStatisticsList(global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.reqReplyStatisticsList_.Add(value);
          return this;
        }
        public Builder AddReqReplyStatisticsList(global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.reqReplyStatisticsList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeReqReplyStatisticsList(scg::IEnumerable<global::Futu.OpenApi.Pb.GetDelayStatistics.ReqReplyStatisticsItem> values) {
          PrepareBuilder();
          result.reqReplyStatisticsList_.Add(values);
          return this;
        }
        public Builder ClearReqReplyStatisticsList() {
          PrepareBuilder();
          result.reqReplyStatisticsList_.Clear();
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem> PlaceOrderStatisticsListList {
          get { return PrepareBuilder().placeOrderStatisticsList_; }
        }
        public int PlaceOrderStatisticsListCount {
          get { return result.PlaceOrderStatisticsListCount; }
        }
        public global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem GetPlaceOrderStatisticsList(int index) {
          return result.GetPlaceOrderStatisticsList(index);
        }
        public Builder SetPlaceOrderStatisticsList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.placeOrderStatisticsList_[index] = value;
          return this;
        }
        public Builder SetPlaceOrderStatisticsList(int index, global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.placeOrderStatisticsList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddPlaceOrderStatisticsList(global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.placeOrderStatisticsList_.Add(value);
          return this;
        }
        public Builder AddPlaceOrderStatisticsList(global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.placeOrderStatisticsList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangePlaceOrderStatisticsList(scg::IEnumerable<global::Futu.OpenApi.Pb.GetDelayStatistics.PlaceOrderStatisticsItem> values) {
          PrepareBuilder();
          result.placeOrderStatisticsList_.Add(values);
          return this;
        }
        public Builder ClearPlaceOrderStatisticsList() {
          PrepareBuilder();
          result.placeOrderStatisticsList_.Clear();
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.GetDelayStatistics.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.GetDelayStatistics.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.GetDelayStatistics.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.GetDelayStatistics.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.GetDelayStatistics.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.GetDelayStatistics.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.GetDelayStatistics.internal__static_GetDelayStatistics_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.GetDelayStatistics.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.GetDelayStatistics.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.GetDelayStatistics.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.GetDelayStatistics.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.GetDelayStatistics.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.GetDelayStatistics.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.GetDelayStatistics.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.GetDelayStatistics.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.GetDelayStatistics.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
