// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Futu.OpenApi.Pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class QotGetIpoList {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_BasicIpoData__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData, global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.Builder> internal__static_Qot_GetIpoList_BasicIpoData__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_CNIpoExData__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData, global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.Builder> internal__static_Qot_GetIpoList_CNIpoExData__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_WinningNumData__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData, global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.Builder> internal__static_Qot_GetIpoList_WinningNumData__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_HKIpoExData__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData, global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.Builder> internal__static_Qot_GetIpoList_HKIpoExData__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_USIpoExData__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData, global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.Builder> internal__static_Qot_GetIpoList_USIpoExData__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_IpoData__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData, global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.Builder> internal__static_Qot_GetIpoList_IpoData__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_C2S__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.C2S, global::Futu.OpenApi.Pb.QotGetIpoList.C2S.Builder> internal__static_Qot_GetIpoList_C2S__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_S2C__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.S2C, global::Futu.OpenApi.Pb.QotGetIpoList.S2C.Builder> internal__static_Qot_GetIpoList_S2C__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_Request__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.Request, global::Futu.OpenApi.Pb.QotGetIpoList.Request.Builder> internal__static_Qot_GetIpoList_Request__FieldAccessorTable;
    private static pbd::MessageDescriptor internal__static_Qot_GetIpoList_Response__Descriptor;
    private static pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.Response, global::Futu.OpenApi.Pb.QotGetIpoList.Response.Builder> internal__static_Qot_GetIpoList_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static QotGetIpoList() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRRb3RfR2V0SXBvTGlzdC5wcm90bxIOUW90X0dldElwb0xpc3QaDENvbW1v", 
            "bi5wcm90bxoQUW90X0NvbW1vbi5wcm90byKWAQoMQmFzaWNJcG9EYXRhEjAK", 
            "CHNlY3VyaXR5GAEgAigLMhQuUW90X0NvbW1vbi5TZWN1cml0eVIIc2VjdXJp", 
            "dHkSEgoEbmFtZRgCIAIoCVIEbmFtZRIaCghsaXN0VGltZRgDIAEoCVIIbGlz", 
            "dFRpbWUSJAoNbGlzdFRpbWVzdGFtcBgEIAEoAVINbGlzdFRpbWVzdGFtcCK9", 
            "BQoLQ05JcG9FeERhdGESHAoJYXBwbHlDb2RlGAEgAigJUglhcHBseUNvZGUS", 
            "HAoJaXNzdWVTaXplGAIgAigDUglpc3N1ZVNpemUSKAoPb25saW5lSXNzdWVT", 
            "aXplGAMgAigDUg9vbmxpbmVJc3N1ZVNpemUSKAoPYXBwbHlVcHBlckxpbWl0", 
            "GAQgAigDUg9hcHBseVVwcGVyTGltaXQSNAoVYXBwbHlMaW1pdE1hcmtldFZh", 
            "bHVlGAUgAigDUhVhcHBseUxpbWl0TWFya2V0VmFsdWUSLgoSaXNFc3RpbWF0", 
            "ZUlwb1ByaWNlGAYgAigIUhJpc0VzdGltYXRlSXBvUHJpY2USGgoIaXBvUHJp", 
            "Y2UYByACKAFSCGlwb1ByaWNlEiYKDmluZHVzdHJ5UGVSYXRlGAggAigBUg5p", 
            "bmR1c3RyeVBlUmF0ZRI2ChZpc0VzdGltYXRlV2lubmluZ1JhdGlvGAkgAigI", 
            "UhZpc0VzdGltYXRlV2lubmluZ1JhdGlvEiIKDHdpbm5pbmdSYXRpbxgKIAIo", 
            "AVIMd2lubmluZ1JhdGlvEiAKC2lzc3VlUGVSYXRlGAsgAigBUgtpc3N1ZVBl", 
            "UmF0ZRIcCglhcHBseVRpbWUYDCABKAlSCWFwcGx5VGltZRImCg5hcHBseVRp", 
            "bWVzdGFtcBgNIAEoAVIOYXBwbHlUaW1lc3RhbXASIAoLd2lubmluZ1RpbWUY", 
            "DiABKAlSC3dpbm5pbmdUaW1lEioKEHdpbm5pbmdUaW1lc3RhbXAYDyABKAFS", 
            "EHdpbm5pbmdUaW1lc3RhbXASGgoIaXNIYXNXb24YECACKAhSCGlzSGFzV29u", 
            "EkYKDndpbm5pbmdOdW1EYXRhGBEgAygLMh4uUW90X0dldElwb0xpc3QuV2lu", 
            "bmluZ051bURhdGFSDndpbm5pbmdOdW1EYXRhIlQKDldpbm5pbmdOdW1EYXRh", 
            "EiAKC3dpbm5pbmdOYW1lGAEgAigJUgt3aW5uaW5nTmFtZRIgCgt3aW5uaW5n", 
            "SW5mbxgCIAIoCVILd2lubmluZ0luZm8irwIKC0hLSXBvRXhEYXRhEiAKC2lw", 
            "b1ByaWNlTWluGAEgAigBUgtpcG9QcmljZU1pbhIgCgtpcG9QcmljZU1heBgC", 
            "IAIoAVILaXBvUHJpY2VNYXgSHAoJbGlzdFByaWNlGAMgAigBUglsaXN0UHJp", 
            "Y2USGAoHbG90U2l6ZRgEIAIoBVIHbG90U2l6ZRIkCg1lbnRyYW5jZVByaWNl", 
            "GAUgAigBUg1lbnRyYW5jZVByaWNlEiwKEWlzU3Vic2NyaWJlU3RhdHVzGAYg", 
            "AigIUhFpc1N1YnNjcmliZVN0YXR1cxIiCgxhcHBseUVuZFRpbWUYByABKAlS", 
            "DGFwcGx5RW5kVGltZRIsChFhcHBseUVuZFRpbWVzdGFtcBgIIAEoAVIRYXBw", 
            "bHlFbmRUaW1lc3RhbXAibwoLVVNJcG9FeERhdGESIAoLaXBvUHJpY2VNaW4Y", 
            "ASACKAFSC2lwb1ByaWNlTWluEiAKC2lwb1ByaWNlTWF4GAIgAigBUgtpcG9Q", 
            "cmljZU1heBIcCglpc3N1ZVNpemUYAyACKANSCWlzc3VlU2l6ZSLoAQoHSXBv", 
            "RGF0YRIyCgViYXNpYxgBIAIoCzIcLlFvdF9HZXRJcG9MaXN0LkJhc2ljSXBv", 
            "RGF0YVIFYmFzaWMSNwoIY25FeERhdGEYAiABKAsyGy5Rb3RfR2V0SXBvTGlz", 
            "dC5DTklwb0V4RGF0YVIIY25FeERhdGESNwoIaGtFeERhdGEYAyABKAsyGy5R", 
            "b3RfR2V0SXBvTGlzdC5IS0lwb0V4RGF0YVIIaGtFeERhdGESNwoIdXNFeERh", 
            "dGEYBCABKAsyGy5Rb3RfR2V0SXBvTGlzdC5VU0lwb0V4RGF0YVIIdXNFeERh", 
            "dGEiHQoDQzJTEhYKBm1hcmtldBgBIAIoBVIGbWFya2V0IjgKA1MyQxIxCgdp", 
            "cG9MaXN0GAEgAygLMhcuUW90X0dldElwb0xpc3QuSXBvRGF0YVIHaXBvTGlz", 
            "dCIwCgdSZXF1ZXN0EiUKA2MycxgBIAIoCzITLlFvdF9HZXRJcG9MaXN0LkMy", 
            "U1IDYzJzIoMBCghSZXNwb25zZRIeCgdyZXRUeXBlGAEgAigFOgQtNDAwUgdy", 
            "ZXRUeXBlEhYKBnJldE1zZxgCIAEoCVIGcmV0TXNnEhgKB2VyckNvZGUYAyAB", 
            "KAVSB2VyckNvZGUSJQoDczJjGAQgASgLMhMuUW90X0dldElwb0xpc3QuUzJD", 
            "UgNzMmNCRAoTY29tLmZ1dHUub3BlbmFwaS5wYlotZ2l0aHViLmNvbS9mdXR1", 
          "b3Blbi9mdGFwaTRnby9wYi9xb3RnZXRpcG9saXN0"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Qot_GetIpoList_BasicIpoData__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Qot_GetIpoList_BasicIpoData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData, global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.Builder>(internal__static_Qot_GetIpoList_BasicIpoData__Descriptor,
                new string[] { "Security", "Name", "ListTime", "ListTimestamp", });
        internal__static_Qot_GetIpoList_CNIpoExData__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Qot_GetIpoList_CNIpoExData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData, global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.Builder>(internal__static_Qot_GetIpoList_CNIpoExData__Descriptor,
                new string[] { "ApplyCode", "IssueSize", "OnlineIssueSize", "ApplyUpperLimit", "ApplyLimitMarketValue", "IsEstimateIpoPrice", "IpoPrice", "IndustryPeRate", "IsEstimateWinningRatio", "WinningRatio", "IssuePeRate", "ApplyTime", "ApplyTimestamp", "WinningTime", "WinningTimestamp", "IsHasWon", "WinningNumData", });
        internal__static_Qot_GetIpoList_WinningNumData__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Qot_GetIpoList_WinningNumData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData, global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.Builder>(internal__static_Qot_GetIpoList_WinningNumData__Descriptor,
                new string[] { "WinningName", "WinningInfo", });
        internal__static_Qot_GetIpoList_HKIpoExData__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Qot_GetIpoList_HKIpoExData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData, global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.Builder>(internal__static_Qot_GetIpoList_HKIpoExData__Descriptor,
                new string[] { "IpoPriceMin", "IpoPriceMax", "ListPrice", "LotSize", "EntrancePrice", "IsSubscribeStatus", "ApplyEndTime", "ApplyEndTimestamp", });
        internal__static_Qot_GetIpoList_USIpoExData__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Qot_GetIpoList_USIpoExData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData, global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.Builder>(internal__static_Qot_GetIpoList_USIpoExData__Descriptor,
                new string[] { "IpoPriceMin", "IpoPriceMax", "IssueSize", });
        internal__static_Qot_GetIpoList_IpoData__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Qot_GetIpoList_IpoData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData, global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.Builder>(internal__static_Qot_GetIpoList_IpoData__Descriptor,
                new string[] { "Basic", "CnExData", "HkExData", "UsExData", });
        internal__static_Qot_GetIpoList_C2S__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Qot_GetIpoList_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.C2S, global::Futu.OpenApi.Pb.QotGetIpoList.C2S.Builder>(internal__static_Qot_GetIpoList_C2S__Descriptor,
                new string[] { "Market", });
        internal__static_Qot_GetIpoList_S2C__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Qot_GetIpoList_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.S2C, global::Futu.OpenApi.Pb.QotGetIpoList.S2C.Builder>(internal__static_Qot_GetIpoList_S2C__Descriptor,
                new string[] { "IpoList", });
        internal__static_Qot_GetIpoList_Request__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Qot_GetIpoList_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.Request, global::Futu.OpenApi.Pb.QotGetIpoList.Request.Builder>(internal__static_Qot_GetIpoList_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Qot_GetIpoList_Response__Descriptor = Descriptor.MessageTypes[9];
        internal__static_Qot_GetIpoList_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Futu.OpenApi.Pb.QotGetIpoList.Response, global::Futu.OpenApi.Pb.QotGetIpoList.Response.Builder>(internal__static_Qot_GetIpoList_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.Common.RegisterAllExtensions(registry);
        global::Futu.OpenApi.Pb.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Futu.OpenApi.Pb.Common.Descriptor, 
          global::Futu.OpenApi.Pb.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion
    
    #region Messages
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class BasicIpoData : pb::GeneratedMessage<BasicIpoData, BasicIpoData.Builder> {
      private BasicIpoData() { }
      private static readonly BasicIpoData defaultInstance = new BasicIpoData().MakeReadOnly();
      private static readonly string[] _basicIpoDataFieldNames = new string[] { "listTime", "listTimestamp", "name", "security" };
      private static readonly uint[] _basicIpoDataFieldTags = new uint[] { 26, 33, 18, 10 };
      public static BasicIpoData DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override BasicIpoData DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override BasicIpoData ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_BasicIpoData__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<BasicIpoData, BasicIpoData.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_BasicIpoData__FieldAccessorTable; }
      }
      
      public const int SecurityFieldNumber = 1;
      private bool hasSecurity;
      private global::Futu.OpenApi.Pb.QotCommon.Security security_;
      public bool HasSecurity {
        get { return hasSecurity; }
      }
      public global::Futu.OpenApi.Pb.QotCommon.Security Security {
        get { return security_ ?? global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance; }
      }
      
      public const int NameFieldNumber = 2;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int ListTimeFieldNumber = 3;
      private bool hasListTime;
      private string listTime_ = "";
      public bool HasListTime {
        get { return hasListTime; }
      }
      public string ListTime {
        get { return listTime_; }
      }
      
      public const int ListTimestampFieldNumber = 4;
      private bool hasListTimestamp;
      private double listTimestamp_;
      public bool HasListTimestamp {
        get { return hasListTimestamp; }
      }
      public double ListTimestamp {
        get { return listTimestamp_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasSecurity) return false;
          if (!hasName) return false;
          if (!Security.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _basicIpoDataFieldNames;
        if (hasSecurity) {
          output.WriteMessage(1, field_names[3], Security);
        }
        if (hasName) {
          output.WriteString(2, field_names[2], Name);
        }
        if (hasListTime) {
          output.WriteString(3, field_names[0], ListTime);
        }
        if (hasListTimestamp) {
          output.WriteDouble(4, field_names[1], ListTimestamp);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSecurity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Security);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        if (hasListTime) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ListTime);
        }
        if (hasListTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(4, ListTimestamp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static BasicIpoData ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static BasicIpoData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static BasicIpoData ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static BasicIpoData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static BasicIpoData ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static BasicIpoData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static BasicIpoData ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static BasicIpoData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static BasicIpoData ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static BasicIpoData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private BasicIpoData MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(BasicIpoData prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<BasicIpoData, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(BasicIpoData cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private BasicIpoData result;
        
        private BasicIpoData PrepareBuilder() {
          if (resultIsReadOnly) {
            BasicIpoData original = result;
            result = new BasicIpoData();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override BasicIpoData MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.Descriptor; }
        }
        
        public override BasicIpoData DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.DefaultInstance; }
        }
        
        public override BasicIpoData BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is BasicIpoData) {
            return MergeFrom((BasicIpoData) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(BasicIpoData other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasSecurity) {
            MergeSecurity(other.Security);
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasListTime) {
            ListTime = other.ListTime;
          }
          if (other.HasListTimestamp) {
            ListTimestamp = other.ListTimestamp;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_basicIpoDataFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _basicIpoDataFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotCommon.Security.Builder subBuilder = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder();
                if (result.hasSecurity) {
                  subBuilder.MergeFrom(Security);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Security = subBuilder.BuildPartial();
                break;
              }
              case 18: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 26: {
                result.hasListTime = input.ReadString(ref result.listTime_);
                break;
              }
              case 33: {
                result.hasListTimestamp = input.ReadDouble(ref result.listTimestamp_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasSecurity {
         get { return result.hasSecurity; }
        }
        public global::Futu.OpenApi.Pb.QotCommon.Security Security {
          get { return result.Security; }
          set { SetSecurity(value); }
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = value;
          return this;
        }
        public Builder SetSecurity(global::Futu.OpenApi.Pb.QotCommon.Security.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasSecurity = true;
          result.security_ = builderForValue.Build();
          return this;
        }
        public Builder MergeSecurity(global::Futu.OpenApi.Pb.QotCommon.Security value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasSecurity &&
              result.security_ != global::Futu.OpenApi.Pb.QotCommon.Security.DefaultInstance) {
              result.security_ = global::Futu.OpenApi.Pb.QotCommon.Security.CreateBuilder(result.security_).MergeFrom(value).BuildPartial();
          } else {
            result.security_ = value;
          }
          result.hasSecurity = true;
          return this;
        }
        public Builder ClearSecurity() {
          PrepareBuilder();
          result.hasSecurity = false;
          result.security_ = null;
          return this;
        }
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasListTime {
          get { return result.hasListTime; }
        }
        public string ListTime {
          get { return result.ListTime; }
          set { SetListTime(value); }
        }
        public Builder SetListTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasListTime = true;
          result.listTime_ = value;
          return this;
        }
        public Builder ClearListTime() {
          PrepareBuilder();
          result.hasListTime = false;
          result.listTime_ = "";
          return this;
        }
        
        public bool HasListTimestamp {
          get { return result.hasListTimestamp; }
        }
        public double ListTimestamp {
          get { return result.ListTimestamp; }
          set { SetListTimestamp(value); }
        }
        public Builder SetListTimestamp(double value) {
          PrepareBuilder();
          result.hasListTimestamp = true;
          result.listTimestamp_ = value;
          return this;
        }
        public Builder ClearListTimestamp() {
          PrepareBuilder();
          result.hasListTimestamp = false;
          result.listTimestamp_ = 0D;
          return this;
        }
      }
      static BasicIpoData() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class CNIpoExData : pb::GeneratedMessage<CNIpoExData, CNIpoExData.Builder> {
      private CNIpoExData() { }
      private static readonly CNIpoExData defaultInstance = new CNIpoExData().MakeReadOnly();
      private static readonly string[] _cNIpoExDataFieldNames = new string[] { "applyCode", "applyLimitMarketValue", "applyTime", "applyTimestamp", "applyUpperLimit", "industryPeRate", "ipoPrice", "isEstimateIpoPrice", "isEstimateWinningRatio", "isHasWon", "issuePeRate", "issueSize", "onlineIssueSize", "winningNumData", "winningRatio", "winningTime", "winningTimestamp" };
      private static readonly uint[] _cNIpoExDataFieldTags = new uint[] { 10, 40, 98, 105, 32, 65, 57, 48, 72, 128, 89, 16, 24, 138, 81, 114, 121 };
      public static CNIpoExData DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override CNIpoExData DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override CNIpoExData ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_CNIpoExData__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<CNIpoExData, CNIpoExData.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_CNIpoExData__FieldAccessorTable; }
      }
      
      public const int ApplyCodeFieldNumber = 1;
      private bool hasApplyCode;
      private string applyCode_ = "";
      public bool HasApplyCode {
        get { return hasApplyCode; }
      }
      public string ApplyCode {
        get { return applyCode_; }
      }
      
      public const int IssueSizeFieldNumber = 2;
      private bool hasIssueSize;
      private long issueSize_;
      public bool HasIssueSize {
        get { return hasIssueSize; }
      }
      public long IssueSize {
        get { return issueSize_; }
      }
      
      public const int OnlineIssueSizeFieldNumber = 3;
      private bool hasOnlineIssueSize;
      private long onlineIssueSize_;
      public bool HasOnlineIssueSize {
        get { return hasOnlineIssueSize; }
      }
      public long OnlineIssueSize {
        get { return onlineIssueSize_; }
      }
      
      public const int ApplyUpperLimitFieldNumber = 4;
      private bool hasApplyUpperLimit;
      private long applyUpperLimit_;
      public bool HasApplyUpperLimit {
        get { return hasApplyUpperLimit; }
      }
      public long ApplyUpperLimit {
        get { return applyUpperLimit_; }
      }
      
      public const int ApplyLimitMarketValueFieldNumber = 5;
      private bool hasApplyLimitMarketValue;
      private long applyLimitMarketValue_;
      public bool HasApplyLimitMarketValue {
        get { return hasApplyLimitMarketValue; }
      }
      public long ApplyLimitMarketValue {
        get { return applyLimitMarketValue_; }
      }
      
      public const int IsEstimateIpoPriceFieldNumber = 6;
      private bool hasIsEstimateIpoPrice;
      private bool isEstimateIpoPrice_;
      public bool HasIsEstimateIpoPrice {
        get { return hasIsEstimateIpoPrice; }
      }
      public bool IsEstimateIpoPrice {
        get { return isEstimateIpoPrice_; }
      }
      
      public const int IpoPriceFieldNumber = 7;
      private bool hasIpoPrice;
      private double ipoPrice_;
      public bool HasIpoPrice {
        get { return hasIpoPrice; }
      }
      public double IpoPrice {
        get { return ipoPrice_; }
      }
      
      public const int IndustryPeRateFieldNumber = 8;
      private bool hasIndustryPeRate;
      private double industryPeRate_;
      public bool HasIndustryPeRate {
        get { return hasIndustryPeRate; }
      }
      public double IndustryPeRate {
        get { return industryPeRate_; }
      }
      
      public const int IsEstimateWinningRatioFieldNumber = 9;
      private bool hasIsEstimateWinningRatio;
      private bool isEstimateWinningRatio_;
      public bool HasIsEstimateWinningRatio {
        get { return hasIsEstimateWinningRatio; }
      }
      public bool IsEstimateWinningRatio {
        get { return isEstimateWinningRatio_; }
      }
      
      public const int WinningRatioFieldNumber = 10;
      private bool hasWinningRatio;
      private double winningRatio_;
      public bool HasWinningRatio {
        get { return hasWinningRatio; }
      }
      public double WinningRatio {
        get { return winningRatio_; }
      }
      
      public const int IssuePeRateFieldNumber = 11;
      private bool hasIssuePeRate;
      private double issuePeRate_;
      public bool HasIssuePeRate {
        get { return hasIssuePeRate; }
      }
      public double IssuePeRate {
        get { return issuePeRate_; }
      }
      
      public const int ApplyTimeFieldNumber = 12;
      private bool hasApplyTime;
      private string applyTime_ = "";
      public bool HasApplyTime {
        get { return hasApplyTime; }
      }
      public string ApplyTime {
        get { return applyTime_; }
      }
      
      public const int ApplyTimestampFieldNumber = 13;
      private bool hasApplyTimestamp;
      private double applyTimestamp_;
      public bool HasApplyTimestamp {
        get { return hasApplyTimestamp; }
      }
      public double ApplyTimestamp {
        get { return applyTimestamp_; }
      }
      
      public const int WinningTimeFieldNumber = 14;
      private bool hasWinningTime;
      private string winningTime_ = "";
      public bool HasWinningTime {
        get { return hasWinningTime; }
      }
      public string WinningTime {
        get { return winningTime_; }
      }
      
      public const int WinningTimestampFieldNumber = 15;
      private bool hasWinningTimestamp;
      private double winningTimestamp_;
      public bool HasWinningTimestamp {
        get { return hasWinningTimestamp; }
      }
      public double WinningTimestamp {
        get { return winningTimestamp_; }
      }
      
      public const int IsHasWonFieldNumber = 16;
      private bool hasIsHasWon;
      private bool isHasWon_;
      public bool HasIsHasWon {
        get { return hasIsHasWon; }
      }
      public bool IsHasWon {
        get { return isHasWon_; }
      }
      
      public const int WinningNumDataFieldNumber = 17;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData> winningNumData_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData> WinningNumDataList {
        get { return winningNumData_; }
      }
      public int WinningNumDataCount {
        get { return winningNumData_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData GetWinningNumData(int index) {
        return winningNumData_[index];
      }
      
      public override bool IsInitialized {
        get {
          if (!hasApplyCode) return false;
          if (!hasIssueSize) return false;
          if (!hasOnlineIssueSize) return false;
          if (!hasApplyUpperLimit) return false;
          if (!hasApplyLimitMarketValue) return false;
          if (!hasIsEstimateIpoPrice) return false;
          if (!hasIpoPrice) return false;
          if (!hasIndustryPeRate) return false;
          if (!hasIsEstimateWinningRatio) return false;
          if (!hasWinningRatio) return false;
          if (!hasIssuePeRate) return false;
          if (!hasIsHasWon) return false;
          foreach (global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData element in WinningNumDataList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _cNIpoExDataFieldNames;
        if (hasApplyCode) {
          output.WriteString(1, field_names[0], ApplyCode);
        }
        if (hasIssueSize) {
          output.WriteInt64(2, field_names[11], IssueSize);
        }
        if (hasOnlineIssueSize) {
          output.WriteInt64(3, field_names[12], OnlineIssueSize);
        }
        if (hasApplyUpperLimit) {
          output.WriteInt64(4, field_names[4], ApplyUpperLimit);
        }
        if (hasApplyLimitMarketValue) {
          output.WriteInt64(5, field_names[1], ApplyLimitMarketValue);
        }
        if (hasIsEstimateIpoPrice) {
          output.WriteBool(6, field_names[7], IsEstimateIpoPrice);
        }
        if (hasIpoPrice) {
          output.WriteDouble(7, field_names[6], IpoPrice);
        }
        if (hasIndustryPeRate) {
          output.WriteDouble(8, field_names[5], IndustryPeRate);
        }
        if (hasIsEstimateWinningRatio) {
          output.WriteBool(9, field_names[8], IsEstimateWinningRatio);
        }
        if (hasWinningRatio) {
          output.WriteDouble(10, field_names[14], WinningRatio);
        }
        if (hasIssuePeRate) {
          output.WriteDouble(11, field_names[10], IssuePeRate);
        }
        if (hasApplyTime) {
          output.WriteString(12, field_names[2], ApplyTime);
        }
        if (hasApplyTimestamp) {
          output.WriteDouble(13, field_names[3], ApplyTimestamp);
        }
        if (hasWinningTime) {
          output.WriteString(14, field_names[15], WinningTime);
        }
        if (hasWinningTimestamp) {
          output.WriteDouble(15, field_names[16], WinningTimestamp);
        }
        if (hasIsHasWon) {
          output.WriteBool(16, field_names[9], IsHasWon);
        }
        if (winningNumData_.Count > 0) {
          output.WriteMessageArray(17, field_names[13], winningNumData_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasApplyCode) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ApplyCode);
        }
        if (hasIssueSize) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, IssueSize);
        }
        if (hasOnlineIssueSize) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, OnlineIssueSize);
        }
        if (hasApplyUpperLimit) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, ApplyUpperLimit);
        }
        if (hasApplyLimitMarketValue) {
          size += pb::CodedOutputStream.ComputeInt64Size(5, ApplyLimitMarketValue);
        }
        if (hasIsEstimateIpoPrice) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsEstimateIpoPrice);
        }
        if (hasIpoPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, IpoPrice);
        }
        if (hasIndustryPeRate) {
          size += pb::CodedOutputStream.ComputeDoubleSize(8, IndustryPeRate);
        }
        if (hasIsEstimateWinningRatio) {
          size += pb::CodedOutputStream.ComputeBoolSize(9, IsEstimateWinningRatio);
        }
        if (hasWinningRatio) {
          size += pb::CodedOutputStream.ComputeDoubleSize(10, WinningRatio);
        }
        if (hasIssuePeRate) {
          size += pb::CodedOutputStream.ComputeDoubleSize(11, IssuePeRate);
        }
        if (hasApplyTime) {
          size += pb::CodedOutputStream.ComputeStringSize(12, ApplyTime);
        }
        if (hasApplyTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(13, ApplyTimestamp);
        }
        if (hasWinningTime) {
          size += pb::CodedOutputStream.ComputeStringSize(14, WinningTime);
        }
        if (hasWinningTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(15, WinningTimestamp);
        }
        if (hasIsHasWon) {
          size += pb::CodedOutputStream.ComputeBoolSize(16, IsHasWon);
        }
        foreach (global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData element in WinningNumDataList) {
          size += pb::CodedOutputStream.ComputeMessageSize(17, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static CNIpoExData ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static CNIpoExData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static CNIpoExData ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static CNIpoExData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static CNIpoExData ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static CNIpoExData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static CNIpoExData ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static CNIpoExData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static CNIpoExData ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static CNIpoExData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private CNIpoExData MakeReadOnly() {
        winningNumData_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(CNIpoExData prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<CNIpoExData, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(CNIpoExData cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private CNIpoExData result;
        
        private CNIpoExData PrepareBuilder() {
          if (resultIsReadOnly) {
            CNIpoExData original = result;
            result = new CNIpoExData();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override CNIpoExData MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.Descriptor; }
        }
        
        public override CNIpoExData DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.DefaultInstance; }
        }
        
        public override CNIpoExData BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is CNIpoExData) {
            return MergeFrom((CNIpoExData) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(CNIpoExData other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasApplyCode) {
            ApplyCode = other.ApplyCode;
          }
          if (other.HasIssueSize) {
            IssueSize = other.IssueSize;
          }
          if (other.HasOnlineIssueSize) {
            OnlineIssueSize = other.OnlineIssueSize;
          }
          if (other.HasApplyUpperLimit) {
            ApplyUpperLimit = other.ApplyUpperLimit;
          }
          if (other.HasApplyLimitMarketValue) {
            ApplyLimitMarketValue = other.ApplyLimitMarketValue;
          }
          if (other.HasIsEstimateIpoPrice) {
            IsEstimateIpoPrice = other.IsEstimateIpoPrice;
          }
          if (other.HasIpoPrice) {
            IpoPrice = other.IpoPrice;
          }
          if (other.HasIndustryPeRate) {
            IndustryPeRate = other.IndustryPeRate;
          }
          if (other.HasIsEstimateWinningRatio) {
            IsEstimateWinningRatio = other.IsEstimateWinningRatio;
          }
          if (other.HasWinningRatio) {
            WinningRatio = other.WinningRatio;
          }
          if (other.HasIssuePeRate) {
            IssuePeRate = other.IssuePeRate;
          }
          if (other.HasApplyTime) {
            ApplyTime = other.ApplyTime;
          }
          if (other.HasApplyTimestamp) {
            ApplyTimestamp = other.ApplyTimestamp;
          }
          if (other.HasWinningTime) {
            WinningTime = other.WinningTime;
          }
          if (other.HasWinningTimestamp) {
            WinningTimestamp = other.WinningTimestamp;
          }
          if (other.HasIsHasWon) {
            IsHasWon = other.IsHasWon;
          }
          if (other.winningNumData_.Count != 0) {
            result.winningNumData_.Add(other.winningNumData_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_cNIpoExDataFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _cNIpoExDataFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasApplyCode = input.ReadString(ref result.applyCode_);
                break;
              }
              case 16: {
                result.hasIssueSize = input.ReadInt64(ref result.issueSize_);
                break;
              }
              case 24: {
                result.hasOnlineIssueSize = input.ReadInt64(ref result.onlineIssueSize_);
                break;
              }
              case 32: {
                result.hasApplyUpperLimit = input.ReadInt64(ref result.applyUpperLimit_);
                break;
              }
              case 40: {
                result.hasApplyLimitMarketValue = input.ReadInt64(ref result.applyLimitMarketValue_);
                break;
              }
              case 48: {
                result.hasIsEstimateIpoPrice = input.ReadBool(ref result.isEstimateIpoPrice_);
                break;
              }
              case 57: {
                result.hasIpoPrice = input.ReadDouble(ref result.ipoPrice_);
                break;
              }
              case 65: {
                result.hasIndustryPeRate = input.ReadDouble(ref result.industryPeRate_);
                break;
              }
              case 72: {
                result.hasIsEstimateWinningRatio = input.ReadBool(ref result.isEstimateWinningRatio_);
                break;
              }
              case 81: {
                result.hasWinningRatio = input.ReadDouble(ref result.winningRatio_);
                break;
              }
              case 89: {
                result.hasIssuePeRate = input.ReadDouble(ref result.issuePeRate_);
                break;
              }
              case 98: {
                result.hasApplyTime = input.ReadString(ref result.applyTime_);
                break;
              }
              case 105: {
                result.hasApplyTimestamp = input.ReadDouble(ref result.applyTimestamp_);
                break;
              }
              case 114: {
                result.hasWinningTime = input.ReadString(ref result.winningTime_);
                break;
              }
              case 121: {
                result.hasWinningTimestamp = input.ReadDouble(ref result.winningTimestamp_);
                break;
              }
              case 128: {
                result.hasIsHasWon = input.ReadBool(ref result.isHasWon_);
                break;
              }
              case 138: {
                input.ReadMessageArray(tag, field_name, result.winningNumData_, global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasApplyCode {
          get { return result.hasApplyCode; }
        }
        public string ApplyCode {
          get { return result.ApplyCode; }
          set { SetApplyCode(value); }
        }
        public Builder SetApplyCode(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApplyCode = true;
          result.applyCode_ = value;
          return this;
        }
        public Builder ClearApplyCode() {
          PrepareBuilder();
          result.hasApplyCode = false;
          result.applyCode_ = "";
          return this;
        }
        
        public bool HasIssueSize {
          get { return result.hasIssueSize; }
        }
        public long IssueSize {
          get { return result.IssueSize; }
          set { SetIssueSize(value); }
        }
        public Builder SetIssueSize(long value) {
          PrepareBuilder();
          result.hasIssueSize = true;
          result.issueSize_ = value;
          return this;
        }
        public Builder ClearIssueSize() {
          PrepareBuilder();
          result.hasIssueSize = false;
          result.issueSize_ = 0L;
          return this;
        }
        
        public bool HasOnlineIssueSize {
          get { return result.hasOnlineIssueSize; }
        }
        public long OnlineIssueSize {
          get { return result.OnlineIssueSize; }
          set { SetOnlineIssueSize(value); }
        }
        public Builder SetOnlineIssueSize(long value) {
          PrepareBuilder();
          result.hasOnlineIssueSize = true;
          result.onlineIssueSize_ = value;
          return this;
        }
        public Builder ClearOnlineIssueSize() {
          PrepareBuilder();
          result.hasOnlineIssueSize = false;
          result.onlineIssueSize_ = 0L;
          return this;
        }
        
        public bool HasApplyUpperLimit {
          get { return result.hasApplyUpperLimit; }
        }
        public long ApplyUpperLimit {
          get { return result.ApplyUpperLimit; }
          set { SetApplyUpperLimit(value); }
        }
        public Builder SetApplyUpperLimit(long value) {
          PrepareBuilder();
          result.hasApplyUpperLimit = true;
          result.applyUpperLimit_ = value;
          return this;
        }
        public Builder ClearApplyUpperLimit() {
          PrepareBuilder();
          result.hasApplyUpperLimit = false;
          result.applyUpperLimit_ = 0L;
          return this;
        }
        
        public bool HasApplyLimitMarketValue {
          get { return result.hasApplyLimitMarketValue; }
        }
        public long ApplyLimitMarketValue {
          get { return result.ApplyLimitMarketValue; }
          set { SetApplyLimitMarketValue(value); }
        }
        public Builder SetApplyLimitMarketValue(long value) {
          PrepareBuilder();
          result.hasApplyLimitMarketValue = true;
          result.applyLimitMarketValue_ = value;
          return this;
        }
        public Builder ClearApplyLimitMarketValue() {
          PrepareBuilder();
          result.hasApplyLimitMarketValue = false;
          result.applyLimitMarketValue_ = 0L;
          return this;
        }
        
        public bool HasIsEstimateIpoPrice {
          get { return result.hasIsEstimateIpoPrice; }
        }
        public bool IsEstimateIpoPrice {
          get { return result.IsEstimateIpoPrice; }
          set { SetIsEstimateIpoPrice(value); }
        }
        public Builder SetIsEstimateIpoPrice(bool value) {
          PrepareBuilder();
          result.hasIsEstimateIpoPrice = true;
          result.isEstimateIpoPrice_ = value;
          return this;
        }
        public Builder ClearIsEstimateIpoPrice() {
          PrepareBuilder();
          result.hasIsEstimateIpoPrice = false;
          result.isEstimateIpoPrice_ = false;
          return this;
        }
        
        public bool HasIpoPrice {
          get { return result.hasIpoPrice; }
        }
        public double IpoPrice {
          get { return result.IpoPrice; }
          set { SetIpoPrice(value); }
        }
        public Builder SetIpoPrice(double value) {
          PrepareBuilder();
          result.hasIpoPrice = true;
          result.ipoPrice_ = value;
          return this;
        }
        public Builder ClearIpoPrice() {
          PrepareBuilder();
          result.hasIpoPrice = false;
          result.ipoPrice_ = 0D;
          return this;
        }
        
        public bool HasIndustryPeRate {
          get { return result.hasIndustryPeRate; }
        }
        public double IndustryPeRate {
          get { return result.IndustryPeRate; }
          set { SetIndustryPeRate(value); }
        }
        public Builder SetIndustryPeRate(double value) {
          PrepareBuilder();
          result.hasIndustryPeRate = true;
          result.industryPeRate_ = value;
          return this;
        }
        public Builder ClearIndustryPeRate() {
          PrepareBuilder();
          result.hasIndustryPeRate = false;
          result.industryPeRate_ = 0D;
          return this;
        }
        
        public bool HasIsEstimateWinningRatio {
          get { return result.hasIsEstimateWinningRatio; }
        }
        public bool IsEstimateWinningRatio {
          get { return result.IsEstimateWinningRatio; }
          set { SetIsEstimateWinningRatio(value); }
        }
        public Builder SetIsEstimateWinningRatio(bool value) {
          PrepareBuilder();
          result.hasIsEstimateWinningRatio = true;
          result.isEstimateWinningRatio_ = value;
          return this;
        }
        public Builder ClearIsEstimateWinningRatio() {
          PrepareBuilder();
          result.hasIsEstimateWinningRatio = false;
          result.isEstimateWinningRatio_ = false;
          return this;
        }
        
        public bool HasWinningRatio {
          get { return result.hasWinningRatio; }
        }
        public double WinningRatio {
          get { return result.WinningRatio; }
          set { SetWinningRatio(value); }
        }
        public Builder SetWinningRatio(double value) {
          PrepareBuilder();
          result.hasWinningRatio = true;
          result.winningRatio_ = value;
          return this;
        }
        public Builder ClearWinningRatio() {
          PrepareBuilder();
          result.hasWinningRatio = false;
          result.winningRatio_ = 0D;
          return this;
        }
        
        public bool HasIssuePeRate {
          get { return result.hasIssuePeRate; }
        }
        public double IssuePeRate {
          get { return result.IssuePeRate; }
          set { SetIssuePeRate(value); }
        }
        public Builder SetIssuePeRate(double value) {
          PrepareBuilder();
          result.hasIssuePeRate = true;
          result.issuePeRate_ = value;
          return this;
        }
        public Builder ClearIssuePeRate() {
          PrepareBuilder();
          result.hasIssuePeRate = false;
          result.issuePeRate_ = 0D;
          return this;
        }
        
        public bool HasApplyTime {
          get { return result.hasApplyTime; }
        }
        public string ApplyTime {
          get { return result.ApplyTime; }
          set { SetApplyTime(value); }
        }
        public Builder SetApplyTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApplyTime = true;
          result.applyTime_ = value;
          return this;
        }
        public Builder ClearApplyTime() {
          PrepareBuilder();
          result.hasApplyTime = false;
          result.applyTime_ = "";
          return this;
        }
        
        public bool HasApplyTimestamp {
          get { return result.hasApplyTimestamp; }
        }
        public double ApplyTimestamp {
          get { return result.ApplyTimestamp; }
          set { SetApplyTimestamp(value); }
        }
        public Builder SetApplyTimestamp(double value) {
          PrepareBuilder();
          result.hasApplyTimestamp = true;
          result.applyTimestamp_ = value;
          return this;
        }
        public Builder ClearApplyTimestamp() {
          PrepareBuilder();
          result.hasApplyTimestamp = false;
          result.applyTimestamp_ = 0D;
          return this;
        }
        
        public bool HasWinningTime {
          get { return result.hasWinningTime; }
        }
        public string WinningTime {
          get { return result.WinningTime; }
          set { SetWinningTime(value); }
        }
        public Builder SetWinningTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasWinningTime = true;
          result.winningTime_ = value;
          return this;
        }
        public Builder ClearWinningTime() {
          PrepareBuilder();
          result.hasWinningTime = false;
          result.winningTime_ = "";
          return this;
        }
        
        public bool HasWinningTimestamp {
          get { return result.hasWinningTimestamp; }
        }
        public double WinningTimestamp {
          get { return result.WinningTimestamp; }
          set { SetWinningTimestamp(value); }
        }
        public Builder SetWinningTimestamp(double value) {
          PrepareBuilder();
          result.hasWinningTimestamp = true;
          result.winningTimestamp_ = value;
          return this;
        }
        public Builder ClearWinningTimestamp() {
          PrepareBuilder();
          result.hasWinningTimestamp = false;
          result.winningTimestamp_ = 0D;
          return this;
        }
        
        public bool HasIsHasWon {
          get { return result.hasIsHasWon; }
        }
        public bool IsHasWon {
          get { return result.IsHasWon; }
          set { SetIsHasWon(value); }
        }
        public Builder SetIsHasWon(bool value) {
          PrepareBuilder();
          result.hasIsHasWon = true;
          result.isHasWon_ = value;
          return this;
        }
        public Builder ClearIsHasWon() {
          PrepareBuilder();
          result.hasIsHasWon = false;
          result.isHasWon_ = false;
          return this;
        }
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData> WinningNumDataList {
          get { return PrepareBuilder().winningNumData_; }
        }
        public int WinningNumDataCount {
          get { return result.WinningNumDataCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData GetWinningNumData(int index) {
          return result.GetWinningNumData(index);
        }
        public Builder SetWinningNumData(int index, global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.winningNumData_[index] = value;
          return this;
        }
        public Builder SetWinningNumData(int index, global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.winningNumData_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddWinningNumData(global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.winningNumData_.Add(value);
          return this;
        }
        public Builder AddWinningNumData(global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.winningNumData_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeWinningNumData(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData> values) {
          PrepareBuilder();
          result.winningNumData_.Add(values);
          return this;
        }
        public Builder ClearWinningNumData() {
          PrepareBuilder();
          result.winningNumData_.Clear();
          return this;
        }
      }
      static CNIpoExData() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class WinningNumData : pb::GeneratedMessage<WinningNumData, WinningNumData.Builder> {
      private WinningNumData() { }
      private static readonly WinningNumData defaultInstance = new WinningNumData().MakeReadOnly();
      private static readonly string[] _winningNumDataFieldNames = new string[] { "winningInfo", "winningName" };
      private static readonly uint[] _winningNumDataFieldTags = new uint[] { 18, 10 };
      public static WinningNumData DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override WinningNumData DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override WinningNumData ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_WinningNumData__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<WinningNumData, WinningNumData.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_WinningNumData__FieldAccessorTable; }
      }
      
      public const int WinningNameFieldNumber = 1;
      private bool hasWinningName;
      private string winningName_ = "";
      public bool HasWinningName {
        get { return hasWinningName; }
      }
      public string WinningName {
        get { return winningName_; }
      }
      
      public const int WinningInfoFieldNumber = 2;
      private bool hasWinningInfo;
      private string winningInfo_ = "";
      public bool HasWinningInfo {
        get { return hasWinningInfo; }
      }
      public string WinningInfo {
        get { return winningInfo_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasWinningName) return false;
          if (!hasWinningInfo) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _winningNumDataFieldNames;
        if (hasWinningName) {
          output.WriteString(1, field_names[1], WinningName);
        }
        if (hasWinningInfo) {
          output.WriteString(2, field_names[0], WinningInfo);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasWinningName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, WinningName);
        }
        if (hasWinningInfo) {
          size += pb::CodedOutputStream.ComputeStringSize(2, WinningInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static WinningNumData ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WinningNumData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WinningNumData ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static WinningNumData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static WinningNumData ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WinningNumData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static WinningNumData ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static WinningNumData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static WinningNumData ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static WinningNumData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private WinningNumData MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(WinningNumData prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<WinningNumData, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(WinningNumData cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private WinningNumData result;
        
        private WinningNumData PrepareBuilder() {
          if (resultIsReadOnly) {
            WinningNumData original = result;
            result = new WinningNumData();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override WinningNumData MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.Descriptor; }
        }
        
        public override WinningNumData DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.DefaultInstance; }
        }
        
        public override WinningNumData BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is WinningNumData) {
            return MergeFrom((WinningNumData) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(WinningNumData other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.WinningNumData.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasWinningName) {
            WinningName = other.WinningName;
          }
          if (other.HasWinningInfo) {
            WinningInfo = other.WinningInfo;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_winningNumDataFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _winningNumDataFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasWinningName = input.ReadString(ref result.winningName_);
                break;
              }
              case 18: {
                result.hasWinningInfo = input.ReadString(ref result.winningInfo_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasWinningName {
          get { return result.hasWinningName; }
        }
        public string WinningName {
          get { return result.WinningName; }
          set { SetWinningName(value); }
        }
        public Builder SetWinningName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasWinningName = true;
          result.winningName_ = value;
          return this;
        }
        public Builder ClearWinningName() {
          PrepareBuilder();
          result.hasWinningName = false;
          result.winningName_ = "";
          return this;
        }
        
        public bool HasWinningInfo {
          get { return result.hasWinningInfo; }
        }
        public string WinningInfo {
          get { return result.WinningInfo; }
          set { SetWinningInfo(value); }
        }
        public Builder SetWinningInfo(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasWinningInfo = true;
          result.winningInfo_ = value;
          return this;
        }
        public Builder ClearWinningInfo() {
          PrepareBuilder();
          result.hasWinningInfo = false;
          result.winningInfo_ = "";
          return this;
        }
      }
      static WinningNumData() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class HKIpoExData : pb::GeneratedMessage<HKIpoExData, HKIpoExData.Builder> {
      private HKIpoExData() { }
      private static readonly HKIpoExData defaultInstance = new HKIpoExData().MakeReadOnly();
      private static readonly string[] _hKIpoExDataFieldNames = new string[] { "applyEndTime", "applyEndTimestamp", "entrancePrice", "ipoPriceMax", "ipoPriceMin", "isSubscribeStatus", "listPrice", "lotSize" };
      private static readonly uint[] _hKIpoExDataFieldTags = new uint[] { 58, 65, 41, 17, 9, 48, 25, 32 };
      public static HKIpoExData DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override HKIpoExData DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override HKIpoExData ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_HKIpoExData__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<HKIpoExData, HKIpoExData.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_HKIpoExData__FieldAccessorTable; }
      }
      
      public const int IpoPriceMinFieldNumber = 1;
      private bool hasIpoPriceMin;
      private double ipoPriceMin_;
      public bool HasIpoPriceMin {
        get { return hasIpoPriceMin; }
      }
      public double IpoPriceMin {
        get { return ipoPriceMin_; }
      }
      
      public const int IpoPriceMaxFieldNumber = 2;
      private bool hasIpoPriceMax;
      private double ipoPriceMax_;
      public bool HasIpoPriceMax {
        get { return hasIpoPriceMax; }
      }
      public double IpoPriceMax {
        get { return ipoPriceMax_; }
      }
      
      public const int ListPriceFieldNumber = 3;
      private bool hasListPrice;
      private double listPrice_;
      public bool HasListPrice {
        get { return hasListPrice; }
      }
      public double ListPrice {
        get { return listPrice_; }
      }
      
      public const int LotSizeFieldNumber = 4;
      private bool hasLotSize;
      private int lotSize_;
      public bool HasLotSize {
        get { return hasLotSize; }
      }
      public int LotSize {
        get { return lotSize_; }
      }
      
      public const int EntrancePriceFieldNumber = 5;
      private bool hasEntrancePrice;
      private double entrancePrice_;
      public bool HasEntrancePrice {
        get { return hasEntrancePrice; }
      }
      public double EntrancePrice {
        get { return entrancePrice_; }
      }
      
      public const int IsSubscribeStatusFieldNumber = 6;
      private bool hasIsSubscribeStatus;
      private bool isSubscribeStatus_;
      public bool HasIsSubscribeStatus {
        get { return hasIsSubscribeStatus; }
      }
      public bool IsSubscribeStatus {
        get { return isSubscribeStatus_; }
      }
      
      public const int ApplyEndTimeFieldNumber = 7;
      private bool hasApplyEndTime;
      private string applyEndTime_ = "";
      public bool HasApplyEndTime {
        get { return hasApplyEndTime; }
      }
      public string ApplyEndTime {
        get { return applyEndTime_; }
      }
      
      public const int ApplyEndTimestampFieldNumber = 8;
      private bool hasApplyEndTimestamp;
      private double applyEndTimestamp_;
      public bool HasApplyEndTimestamp {
        get { return hasApplyEndTimestamp; }
      }
      public double ApplyEndTimestamp {
        get { return applyEndTimestamp_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasIpoPriceMin) return false;
          if (!hasIpoPriceMax) return false;
          if (!hasListPrice) return false;
          if (!hasLotSize) return false;
          if (!hasEntrancePrice) return false;
          if (!hasIsSubscribeStatus) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _hKIpoExDataFieldNames;
        if (hasIpoPriceMin) {
          output.WriteDouble(1, field_names[4], IpoPriceMin);
        }
        if (hasIpoPriceMax) {
          output.WriteDouble(2, field_names[3], IpoPriceMax);
        }
        if (hasListPrice) {
          output.WriteDouble(3, field_names[6], ListPrice);
        }
        if (hasLotSize) {
          output.WriteInt32(4, field_names[7], LotSize);
        }
        if (hasEntrancePrice) {
          output.WriteDouble(5, field_names[2], EntrancePrice);
        }
        if (hasIsSubscribeStatus) {
          output.WriteBool(6, field_names[5], IsSubscribeStatus);
        }
        if (hasApplyEndTime) {
          output.WriteString(7, field_names[0], ApplyEndTime);
        }
        if (hasApplyEndTimestamp) {
          output.WriteDouble(8, field_names[1], ApplyEndTimestamp);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIpoPriceMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(1, IpoPriceMin);
        }
        if (hasIpoPriceMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(2, IpoPriceMax);
        }
        if (hasListPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(3, ListPrice);
        }
        if (hasLotSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, LotSize);
        }
        if (hasEntrancePrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(5, EntrancePrice);
        }
        if (hasIsSubscribeStatus) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsSubscribeStatus);
        }
        if (hasApplyEndTime) {
          size += pb::CodedOutputStream.ComputeStringSize(7, ApplyEndTime);
        }
        if (hasApplyEndTimestamp) {
          size += pb::CodedOutputStream.ComputeDoubleSize(8, ApplyEndTimestamp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static HKIpoExData ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static HKIpoExData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static HKIpoExData ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static HKIpoExData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static HKIpoExData ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static HKIpoExData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static HKIpoExData ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static HKIpoExData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static HKIpoExData ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static HKIpoExData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private HKIpoExData MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(HKIpoExData prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<HKIpoExData, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(HKIpoExData cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private HKIpoExData result;
        
        private HKIpoExData PrepareBuilder() {
          if (resultIsReadOnly) {
            HKIpoExData original = result;
            result = new HKIpoExData();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override HKIpoExData MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.Descriptor; }
        }
        
        public override HKIpoExData DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.DefaultInstance; }
        }
        
        public override HKIpoExData BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is HKIpoExData) {
            return MergeFrom((HKIpoExData) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(HKIpoExData other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasIpoPriceMin) {
            IpoPriceMin = other.IpoPriceMin;
          }
          if (other.HasIpoPriceMax) {
            IpoPriceMax = other.IpoPriceMax;
          }
          if (other.HasListPrice) {
            ListPrice = other.ListPrice;
          }
          if (other.HasLotSize) {
            LotSize = other.LotSize;
          }
          if (other.HasEntrancePrice) {
            EntrancePrice = other.EntrancePrice;
          }
          if (other.HasIsSubscribeStatus) {
            IsSubscribeStatus = other.IsSubscribeStatus;
          }
          if (other.HasApplyEndTime) {
            ApplyEndTime = other.ApplyEndTime;
          }
          if (other.HasApplyEndTimestamp) {
            ApplyEndTimestamp = other.ApplyEndTimestamp;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_hKIpoExDataFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _hKIpoExDataFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 9: {
                result.hasIpoPriceMin = input.ReadDouble(ref result.ipoPriceMin_);
                break;
              }
              case 17: {
                result.hasIpoPriceMax = input.ReadDouble(ref result.ipoPriceMax_);
                break;
              }
              case 25: {
                result.hasListPrice = input.ReadDouble(ref result.listPrice_);
                break;
              }
              case 32: {
                result.hasLotSize = input.ReadInt32(ref result.lotSize_);
                break;
              }
              case 41: {
                result.hasEntrancePrice = input.ReadDouble(ref result.entrancePrice_);
                break;
              }
              case 48: {
                result.hasIsSubscribeStatus = input.ReadBool(ref result.isSubscribeStatus_);
                break;
              }
              case 58: {
                result.hasApplyEndTime = input.ReadString(ref result.applyEndTime_);
                break;
              }
              case 65: {
                result.hasApplyEndTimestamp = input.ReadDouble(ref result.applyEndTimestamp_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasIpoPriceMin {
          get { return result.hasIpoPriceMin; }
        }
        public double IpoPriceMin {
          get { return result.IpoPriceMin; }
          set { SetIpoPriceMin(value); }
        }
        public Builder SetIpoPriceMin(double value) {
          PrepareBuilder();
          result.hasIpoPriceMin = true;
          result.ipoPriceMin_ = value;
          return this;
        }
        public Builder ClearIpoPriceMin() {
          PrepareBuilder();
          result.hasIpoPriceMin = false;
          result.ipoPriceMin_ = 0D;
          return this;
        }
        
        public bool HasIpoPriceMax {
          get { return result.hasIpoPriceMax; }
        }
        public double IpoPriceMax {
          get { return result.IpoPriceMax; }
          set { SetIpoPriceMax(value); }
        }
        public Builder SetIpoPriceMax(double value) {
          PrepareBuilder();
          result.hasIpoPriceMax = true;
          result.ipoPriceMax_ = value;
          return this;
        }
        public Builder ClearIpoPriceMax() {
          PrepareBuilder();
          result.hasIpoPriceMax = false;
          result.ipoPriceMax_ = 0D;
          return this;
        }
        
        public bool HasListPrice {
          get { return result.hasListPrice; }
        }
        public double ListPrice {
          get { return result.ListPrice; }
          set { SetListPrice(value); }
        }
        public Builder SetListPrice(double value) {
          PrepareBuilder();
          result.hasListPrice = true;
          result.listPrice_ = value;
          return this;
        }
        public Builder ClearListPrice() {
          PrepareBuilder();
          result.hasListPrice = false;
          result.listPrice_ = 0D;
          return this;
        }
        
        public bool HasLotSize {
          get { return result.hasLotSize; }
        }
        public int LotSize {
          get { return result.LotSize; }
          set { SetLotSize(value); }
        }
        public Builder SetLotSize(int value) {
          PrepareBuilder();
          result.hasLotSize = true;
          result.lotSize_ = value;
          return this;
        }
        public Builder ClearLotSize() {
          PrepareBuilder();
          result.hasLotSize = false;
          result.lotSize_ = 0;
          return this;
        }
        
        public bool HasEntrancePrice {
          get { return result.hasEntrancePrice; }
        }
        public double EntrancePrice {
          get { return result.EntrancePrice; }
          set { SetEntrancePrice(value); }
        }
        public Builder SetEntrancePrice(double value) {
          PrepareBuilder();
          result.hasEntrancePrice = true;
          result.entrancePrice_ = value;
          return this;
        }
        public Builder ClearEntrancePrice() {
          PrepareBuilder();
          result.hasEntrancePrice = false;
          result.entrancePrice_ = 0D;
          return this;
        }
        
        public bool HasIsSubscribeStatus {
          get { return result.hasIsSubscribeStatus; }
        }
        public bool IsSubscribeStatus {
          get { return result.IsSubscribeStatus; }
          set { SetIsSubscribeStatus(value); }
        }
        public Builder SetIsSubscribeStatus(bool value) {
          PrepareBuilder();
          result.hasIsSubscribeStatus = true;
          result.isSubscribeStatus_ = value;
          return this;
        }
        public Builder ClearIsSubscribeStatus() {
          PrepareBuilder();
          result.hasIsSubscribeStatus = false;
          result.isSubscribeStatus_ = false;
          return this;
        }
        
        public bool HasApplyEndTime {
          get { return result.hasApplyEndTime; }
        }
        public string ApplyEndTime {
          get { return result.ApplyEndTime; }
          set { SetApplyEndTime(value); }
        }
        public Builder SetApplyEndTime(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasApplyEndTime = true;
          result.applyEndTime_ = value;
          return this;
        }
        public Builder ClearApplyEndTime() {
          PrepareBuilder();
          result.hasApplyEndTime = false;
          result.applyEndTime_ = "";
          return this;
        }
        
        public bool HasApplyEndTimestamp {
          get { return result.hasApplyEndTimestamp; }
        }
        public double ApplyEndTimestamp {
          get { return result.ApplyEndTimestamp; }
          set { SetApplyEndTimestamp(value); }
        }
        public Builder SetApplyEndTimestamp(double value) {
          PrepareBuilder();
          result.hasApplyEndTimestamp = true;
          result.applyEndTimestamp_ = value;
          return this;
        }
        public Builder ClearApplyEndTimestamp() {
          PrepareBuilder();
          result.hasApplyEndTimestamp = false;
          result.applyEndTimestamp_ = 0D;
          return this;
        }
      }
      static HKIpoExData() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class USIpoExData : pb::GeneratedMessage<USIpoExData, USIpoExData.Builder> {
      private USIpoExData() { }
      private static readonly USIpoExData defaultInstance = new USIpoExData().MakeReadOnly();
      private static readonly string[] _uSIpoExDataFieldNames = new string[] { "ipoPriceMax", "ipoPriceMin", "issueSize" };
      private static readonly uint[] _uSIpoExDataFieldTags = new uint[] { 17, 9, 24 };
      public static USIpoExData DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override USIpoExData DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override USIpoExData ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_USIpoExData__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<USIpoExData, USIpoExData.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_USIpoExData__FieldAccessorTable; }
      }
      
      public const int IpoPriceMinFieldNumber = 1;
      private bool hasIpoPriceMin;
      private double ipoPriceMin_;
      public bool HasIpoPriceMin {
        get { return hasIpoPriceMin; }
      }
      public double IpoPriceMin {
        get { return ipoPriceMin_; }
      }
      
      public const int IpoPriceMaxFieldNumber = 2;
      private bool hasIpoPriceMax;
      private double ipoPriceMax_;
      public bool HasIpoPriceMax {
        get { return hasIpoPriceMax; }
      }
      public double IpoPriceMax {
        get { return ipoPriceMax_; }
      }
      
      public const int IssueSizeFieldNumber = 3;
      private bool hasIssueSize;
      private long issueSize_;
      public bool HasIssueSize {
        get { return hasIssueSize; }
      }
      public long IssueSize {
        get { return issueSize_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasIpoPriceMin) return false;
          if (!hasIpoPriceMax) return false;
          if (!hasIssueSize) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _uSIpoExDataFieldNames;
        if (hasIpoPriceMin) {
          output.WriteDouble(1, field_names[1], IpoPriceMin);
        }
        if (hasIpoPriceMax) {
          output.WriteDouble(2, field_names[0], IpoPriceMax);
        }
        if (hasIssueSize) {
          output.WriteInt64(3, field_names[2], IssueSize);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIpoPriceMin) {
          size += pb::CodedOutputStream.ComputeDoubleSize(1, IpoPriceMin);
        }
        if (hasIpoPriceMax) {
          size += pb::CodedOutputStream.ComputeDoubleSize(2, IpoPriceMax);
        }
        if (hasIssueSize) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, IssueSize);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static USIpoExData ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static USIpoExData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static USIpoExData ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static USIpoExData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static USIpoExData ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static USIpoExData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static USIpoExData ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static USIpoExData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static USIpoExData ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static USIpoExData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private USIpoExData MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(USIpoExData prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<USIpoExData, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(USIpoExData cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private USIpoExData result;
        
        private USIpoExData PrepareBuilder() {
          if (resultIsReadOnly) {
            USIpoExData original = result;
            result = new USIpoExData();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override USIpoExData MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.Descriptor; }
        }
        
        public override USIpoExData DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.DefaultInstance; }
        }
        
        public override USIpoExData BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is USIpoExData) {
            return MergeFrom((USIpoExData) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(USIpoExData other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasIpoPriceMin) {
            IpoPriceMin = other.IpoPriceMin;
          }
          if (other.HasIpoPriceMax) {
            IpoPriceMax = other.IpoPriceMax;
          }
          if (other.HasIssueSize) {
            IssueSize = other.IssueSize;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_uSIpoExDataFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _uSIpoExDataFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 9: {
                result.hasIpoPriceMin = input.ReadDouble(ref result.ipoPriceMin_);
                break;
              }
              case 17: {
                result.hasIpoPriceMax = input.ReadDouble(ref result.ipoPriceMax_);
                break;
              }
              case 24: {
                result.hasIssueSize = input.ReadInt64(ref result.issueSize_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasIpoPriceMin {
          get { return result.hasIpoPriceMin; }
        }
        public double IpoPriceMin {
          get { return result.IpoPriceMin; }
          set { SetIpoPriceMin(value); }
        }
        public Builder SetIpoPriceMin(double value) {
          PrepareBuilder();
          result.hasIpoPriceMin = true;
          result.ipoPriceMin_ = value;
          return this;
        }
        public Builder ClearIpoPriceMin() {
          PrepareBuilder();
          result.hasIpoPriceMin = false;
          result.ipoPriceMin_ = 0D;
          return this;
        }
        
        public bool HasIpoPriceMax {
          get { return result.hasIpoPriceMax; }
        }
        public double IpoPriceMax {
          get { return result.IpoPriceMax; }
          set { SetIpoPriceMax(value); }
        }
        public Builder SetIpoPriceMax(double value) {
          PrepareBuilder();
          result.hasIpoPriceMax = true;
          result.ipoPriceMax_ = value;
          return this;
        }
        public Builder ClearIpoPriceMax() {
          PrepareBuilder();
          result.hasIpoPriceMax = false;
          result.ipoPriceMax_ = 0D;
          return this;
        }
        
        public bool HasIssueSize {
          get { return result.hasIssueSize; }
        }
        public long IssueSize {
          get { return result.IssueSize; }
          set { SetIssueSize(value); }
        }
        public Builder SetIssueSize(long value) {
          PrepareBuilder();
          result.hasIssueSize = true;
          result.issueSize_ = value;
          return this;
        }
        public Builder ClearIssueSize() {
          PrepareBuilder();
          result.hasIssueSize = false;
          result.issueSize_ = 0L;
          return this;
        }
      }
      static USIpoExData() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class IpoData : pb::GeneratedMessage<IpoData, IpoData.Builder> {
      private IpoData() { }
      private static readonly IpoData defaultInstance = new IpoData().MakeReadOnly();
      private static readonly string[] _ipoDataFieldNames = new string[] { "basic", "cnExData", "hkExData", "usExData" };
      private static readonly uint[] _ipoDataFieldTags = new uint[] { 10, 18, 26, 34 };
      public static IpoData DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override IpoData DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override IpoData ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_IpoData__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<IpoData, IpoData.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_IpoData__FieldAccessorTable; }
      }
      
      public const int BasicFieldNumber = 1;
      private bool hasBasic;
      private global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData basic_;
      public bool HasBasic {
        get { return hasBasic; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData Basic {
        get { return basic_ ?? global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.DefaultInstance; }
      }
      
      public const int CnExDataFieldNumber = 2;
      private bool hasCnExData;
      private global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData cnExData_;
      public bool HasCnExData {
        get { return hasCnExData; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData CnExData {
        get { return cnExData_ ?? global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.DefaultInstance; }
      }
      
      public const int HkExDataFieldNumber = 3;
      private bool hasHkExData;
      private global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData hkExData_;
      public bool HasHkExData {
        get { return hasHkExData; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData HkExData {
        get { return hkExData_ ?? global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.DefaultInstance; }
      }
      
      public const int UsExDataFieldNumber = 4;
      private bool hasUsExData;
      private global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData usExData_;
      public bool HasUsExData {
        get { return hasUsExData; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData UsExData {
        get { return usExData_ ?? global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasBasic) return false;
          if (!Basic.IsInitialized) return false;
          if (HasCnExData) {
            if (!CnExData.IsInitialized) return false;
          }
          if (HasHkExData) {
            if (!HkExData.IsInitialized) return false;
          }
          if (HasUsExData) {
            if (!UsExData.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _ipoDataFieldNames;
        if (hasBasic) {
          output.WriteMessage(1, field_names[0], Basic);
        }
        if (hasCnExData) {
          output.WriteMessage(2, field_names[1], CnExData);
        }
        if (hasHkExData) {
          output.WriteMessage(3, field_names[2], HkExData);
        }
        if (hasUsExData) {
          output.WriteMessage(4, field_names[3], UsExData);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBasic) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Basic);
        }
        if (hasCnExData) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, CnExData);
        }
        if (hasHkExData) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, HkExData);
        }
        if (hasUsExData) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, UsExData);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static IpoData ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static IpoData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static IpoData ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static IpoData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static IpoData ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static IpoData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static IpoData ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static IpoData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static IpoData ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static IpoData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private IpoData MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(IpoData prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<IpoData, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(IpoData cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private IpoData result;
        
        private IpoData PrepareBuilder() {
          if (resultIsReadOnly) {
            IpoData original = result;
            result = new IpoData();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override IpoData MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.Descriptor; }
        }
        
        public override IpoData DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.DefaultInstance; }
        }
        
        public override IpoData BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is IpoData) {
            return MergeFrom((IpoData) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(IpoData other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasBasic) {
            MergeBasic(other.Basic);
          }
          if (other.HasCnExData) {
            MergeCnExData(other.CnExData);
          }
          if (other.HasHkExData) {
            MergeHkExData(other.HkExData);
          }
          if (other.HasUsExData) {
            MergeUsExData(other.UsExData);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_ipoDataFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _ipoDataFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.CreateBuilder();
                if (result.hasBasic) {
                  subBuilder.MergeFrom(Basic);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Basic = subBuilder.BuildPartial();
                break;
              }
              case 18: {
                global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.CreateBuilder();
                if (result.hasCnExData) {
                  subBuilder.MergeFrom(CnExData);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                CnExData = subBuilder.BuildPartial();
                break;
              }
              case 26: {
                global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.CreateBuilder();
                if (result.hasHkExData) {
                  subBuilder.MergeFrom(HkExData);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                HkExData = subBuilder.BuildPartial();
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.CreateBuilder();
                if (result.hasUsExData) {
                  subBuilder.MergeFrom(UsExData);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                UsExData = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasBasic {
         get { return result.hasBasic; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData Basic {
          get { return result.Basic; }
          set { SetBasic(value); }
        }
        public Builder SetBasic(global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasBasic = true;
          result.basic_ = value;
          return this;
        }
        public Builder SetBasic(global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasBasic = true;
          result.basic_ = builderForValue.Build();
          return this;
        }
        public Builder MergeBasic(global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasBasic &&
              result.basic_ != global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.DefaultInstance) {
              result.basic_ = global::Futu.OpenApi.Pb.QotGetIpoList.BasicIpoData.CreateBuilder(result.basic_).MergeFrom(value).BuildPartial();
          } else {
            result.basic_ = value;
          }
          result.hasBasic = true;
          return this;
        }
        public Builder ClearBasic() {
          PrepareBuilder();
          result.hasBasic = false;
          result.basic_ = null;
          return this;
        }
        
        public bool HasCnExData {
         get { return result.hasCnExData; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData CnExData {
          get { return result.CnExData; }
          set { SetCnExData(value); }
        }
        public Builder SetCnExData(global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasCnExData = true;
          result.cnExData_ = value;
          return this;
        }
        public Builder SetCnExData(global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasCnExData = true;
          result.cnExData_ = builderForValue.Build();
          return this;
        }
        public Builder MergeCnExData(global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasCnExData &&
              result.cnExData_ != global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.DefaultInstance) {
              result.cnExData_ = global::Futu.OpenApi.Pb.QotGetIpoList.CNIpoExData.CreateBuilder(result.cnExData_).MergeFrom(value).BuildPartial();
          } else {
            result.cnExData_ = value;
          }
          result.hasCnExData = true;
          return this;
        }
        public Builder ClearCnExData() {
          PrepareBuilder();
          result.hasCnExData = false;
          result.cnExData_ = null;
          return this;
        }
        
        public bool HasHkExData {
         get { return result.hasHkExData; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData HkExData {
          get { return result.HkExData; }
          set { SetHkExData(value); }
        }
        public Builder SetHkExData(global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasHkExData = true;
          result.hkExData_ = value;
          return this;
        }
        public Builder SetHkExData(global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasHkExData = true;
          result.hkExData_ = builderForValue.Build();
          return this;
        }
        public Builder MergeHkExData(global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasHkExData &&
              result.hkExData_ != global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.DefaultInstance) {
              result.hkExData_ = global::Futu.OpenApi.Pb.QotGetIpoList.HKIpoExData.CreateBuilder(result.hkExData_).MergeFrom(value).BuildPartial();
          } else {
            result.hkExData_ = value;
          }
          result.hasHkExData = true;
          return this;
        }
        public Builder ClearHkExData() {
          PrepareBuilder();
          result.hasHkExData = false;
          result.hkExData_ = null;
          return this;
        }
        
        public bool HasUsExData {
         get { return result.hasUsExData; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData UsExData {
          get { return result.UsExData; }
          set { SetUsExData(value); }
        }
        public Builder SetUsExData(global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasUsExData = true;
          result.usExData_ = value;
          return this;
        }
        public Builder SetUsExData(global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasUsExData = true;
          result.usExData_ = builderForValue.Build();
          return this;
        }
        public Builder MergeUsExData(global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasUsExData &&
              result.usExData_ != global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.DefaultInstance) {
              result.usExData_ = global::Futu.OpenApi.Pb.QotGetIpoList.USIpoExData.CreateBuilder(result.usExData_).MergeFrom(value).BuildPartial();
          } else {
            result.usExData_ = value;
          }
          result.hasUsExData = true;
          return this;
        }
        public Builder ClearUsExData() {
          PrepareBuilder();
          result.hasUsExData = false;
          result.usExData_ = null;
          return this;
        }
      }
      static IpoData() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
      private C2S() { }
      private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
      private static readonly string[] _c2SFieldNames = new string[] { "market" };
      private static readonly uint[] _c2SFieldTags = new uint[] { 8 };
      public static C2S DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override C2S DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override C2S ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_C2S__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_C2S__FieldAccessorTable; }
      }
      
      public const int MarketFieldNumber = 1;
      private bool hasMarket;
      private int market_;
      public bool HasMarket {
        get { return hasMarket; }
      }
      public int Market {
        get { return market_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasMarket) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _c2SFieldNames;
        if (hasMarket) {
          output.WriteInt32(1, field_names[0], Market);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMarket) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Market);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static C2S ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private C2S MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(C2S prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(C2S cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private C2S result;
        
        private C2S PrepareBuilder() {
          if (resultIsReadOnly) {
            C2S original = result;
            result = new C2S();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override C2S MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.C2S.Descriptor; }
        }
        
        public override C2S DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.C2S.DefaultInstance; }
        }
        
        public override C2S BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is C2S) {
            return MergeFrom((C2S) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(C2S other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.C2S.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasMarket) {
            Market = other.Market;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _c2SFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasMarket = input.ReadInt32(ref result.market_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasMarket {
          get { return result.hasMarket; }
        }
        public int Market {
          get { return result.Market; }
          set { SetMarket(value); }
        }
        public Builder SetMarket(int value) {
          PrepareBuilder();
          result.hasMarket = true;
          result.market_ = value;
          return this;
        }
        public Builder ClearMarket() {
          PrepareBuilder();
          result.hasMarket = false;
          result.market_ = 0;
          return this;
        }
      }
      static C2S() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
      private S2C() { }
      private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
      private static readonly string[] _s2CFieldNames = new string[] { "ipoList" };
      private static readonly uint[] _s2CFieldTags = new uint[] { 10 };
      public static S2C DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override S2C DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override S2C ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_S2C__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_S2C__FieldAccessorTable; }
      }
      
      public const int IpoListFieldNumber = 1;
      private pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData> ipoList_ = new pbc::PopsicleList<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData>();
      public scg::IList<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData> IpoListList {
        get { return ipoList_; }
      }
      public int IpoListCount {
        get { return ipoList_.Count; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.IpoData GetIpoList(int index) {
        return ipoList_[index];
      }
      
      public override bool IsInitialized {
        get {
          foreach (global::Futu.OpenApi.Pb.QotGetIpoList.IpoData element in IpoListList) {
            if (!element.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _s2CFieldNames;
        if (ipoList_.Count > 0) {
          output.WriteMessageArray(1, field_names[0], ipoList_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::Futu.OpenApi.Pb.QotGetIpoList.IpoData element in IpoListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static S2C ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private S2C MakeReadOnly() {
        ipoList_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(S2C prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(S2C cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private S2C result;
        
        private S2C PrepareBuilder() {
          if (resultIsReadOnly) {
            S2C original = result;
            result = new S2C();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override S2C MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.S2C.Descriptor; }
        }
        
        public override S2C DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.S2C.DefaultInstance; }
        }
        
        public override S2C BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is S2C) {
            return MergeFrom((S2C) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(S2C other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.S2C.DefaultInstance) return this;
          PrepareBuilder();
          if (other.ipoList_.Count != 0) {
            result.ipoList_.Add(other.ipoList_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _s2CFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                input.ReadMessageArray(tag, field_name, result.ipoList_, global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public pbc::IPopsicleList<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData> IpoListList {
          get { return PrepareBuilder().ipoList_; }
        }
        public int IpoListCount {
          get { return result.IpoListCount; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.IpoData GetIpoList(int index) {
          return result.GetIpoList(index);
        }
        public Builder SetIpoList(int index, global::Futu.OpenApi.Pb.QotGetIpoList.IpoData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.ipoList_[index] = value;
          return this;
        }
        public Builder SetIpoList(int index, global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.ipoList_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddIpoList(global::Futu.OpenApi.Pb.QotGetIpoList.IpoData value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.ipoList_.Add(value);
          return this;
        }
        public Builder AddIpoList(global::Futu.OpenApi.Pb.QotGetIpoList.IpoData.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.ipoList_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeIpoList(scg::IEnumerable<global::Futu.OpenApi.Pb.QotGetIpoList.IpoData> values) {
          PrepareBuilder();
          result.ipoList_.Add(values);
          return this;
        }
        public Builder ClearIpoList() {
          PrepareBuilder();
          result.ipoList_.Clear();
          return this;
        }
      }
      static S2C() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
      private Request() { }
      private static readonly Request defaultInstance = new Request().MakeReadOnly();
      private static readonly string[] _requestFieldNames = new string[] { "c2s" };
      private static readonly uint[] _requestFieldTags = new uint[] { 10 };
      public static Request DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Request DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Request ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_Request__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_Request__FieldAccessorTable; }
      }
      
      public const int C2SFieldNumber = 1;
      private bool hasC2S;
      private global::Futu.OpenApi.Pb.QotGetIpoList.C2S c2S_;
      public bool HasC2S {
        get { return hasC2S; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.C2S C2S {
        get { return c2S_ ?? global::Futu.OpenApi.Pb.QotGetIpoList.C2S.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasC2S) return false;
          if (!C2S.IsInitialized) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _requestFieldNames;
        if (hasC2S) {
          output.WriteMessage(1, field_names[0], C2S);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasC2S) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Request ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Request MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Request prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Request cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Request result;
        
        private Request PrepareBuilder() {
          if (resultIsReadOnly) {
            Request original = result;
            result = new Request();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Request MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.Request.Descriptor; }
        }
        
        public override Request DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.Request.DefaultInstance; }
        }
        
        public override Request BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Request) {
            return MergeFrom((Request) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Request other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.Request.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasC2S) {
            MergeC2S(other.C2S);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                global::Futu.OpenApi.Pb.QotGetIpoList.C2S.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetIpoList.C2S.CreateBuilder();
                if (result.hasC2S) {
                  subBuilder.MergeFrom(C2S);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                C2S = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasC2S {
         get { return result.hasC2S; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.C2S C2S {
          get { return result.C2S; }
          set { SetC2S(value); }
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetIpoList.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = value;
          return this;
        }
        public Builder SetC2S(global::Futu.OpenApi.Pb.QotGetIpoList.C2S.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasC2S = true;
          result.c2S_ = builderForValue.Build();
          return this;
        }
        public Builder MergeC2S(global::Futu.OpenApi.Pb.QotGetIpoList.C2S value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasC2S &&
              result.c2S_ != global::Futu.OpenApi.Pb.QotGetIpoList.C2S.DefaultInstance) {
              result.c2S_ = global::Futu.OpenApi.Pb.QotGetIpoList.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
          } else {
            result.c2S_ = value;
          }
          result.hasC2S = true;
          return this;
        }
        public Builder ClearC2S() {
          PrepareBuilder();
          result.hasC2S = false;
          result.c2S_ = null;
          return this;
        }
      }
      static Request() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
      private Response() { }
      private static readonly Response defaultInstance = new Response().MakeReadOnly();
      private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
      private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
      public static Response DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Response DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Response ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_Response__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
        get { return global::Futu.OpenApi.Pb.QotGetIpoList.internal__static_Qot_GetIpoList_Response__FieldAccessorTable; }
      }
      
      public const int RetTypeFieldNumber = 1;
      private bool hasRetType;
      private int retType_ = -400;
      public bool HasRetType {
        get { return hasRetType; }
      }
      public int RetType {
        get { return retType_; }
      }
      
      public const int RetMsgFieldNumber = 2;
      private bool hasRetMsg;
      private string retMsg_ = "";
      public bool HasRetMsg {
        get { return hasRetMsg; }
      }
      public string RetMsg {
        get { return retMsg_; }
      }
      
      public const int ErrCodeFieldNumber = 3;
      private bool hasErrCode;
      private int errCode_;
      public bool HasErrCode {
        get { return hasErrCode; }
      }
      public int ErrCode {
        get { return errCode_; }
      }
      
      public const int S2CFieldNumber = 4;
      private bool hasS2C;
      private global::Futu.OpenApi.Pb.QotGetIpoList.S2C s2C_;
      public bool HasS2C {
        get { return hasS2C; }
      }
      public global::Futu.OpenApi.Pb.QotGetIpoList.S2C S2C {
        get { return s2C_ ?? global::Futu.OpenApi.Pb.QotGetIpoList.S2C.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasRetType) return false;
          if (HasS2C) {
            if (!S2C.IsInitialized) return false;
          }
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        CalcSerializedSize();
        string[] field_names = _responseFieldNames;
        if (hasRetType) {
          output.WriteInt32(1, field_names[2], RetType);
        }
        if (hasRetMsg) {
          output.WriteString(2, field_names[1], RetMsg);
        }
        if (hasErrCode) {
          output.WriteInt32(3, field_names[0], ErrCode);
        }
        if (hasS2C) {
          output.WriteMessage(4, field_names[3], S2C);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          return CalcSerializedSize();
        }
      }
      
      private int CalcSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRetType) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
        }
        if (hasRetMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
        }
        if (hasErrCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
        }
        if (hasS2C) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
      public static Response ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Response MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Response prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Response cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Response result;
        
        private Response PrepareBuilder() {
          if (resultIsReadOnly) {
            Response original = result;
            result = new Response();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Response MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.Response.Descriptor; }
        }
        
        public override Response DefaultInstanceForType {
          get { return global::Futu.OpenApi.Pb.QotGetIpoList.Response.DefaultInstance; }
        }
        
        public override Response BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Response) {
            return MergeFrom((Response) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Response other) {
          if (other == global::Futu.OpenApi.Pb.QotGetIpoList.Response.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasRetType) {
            RetType = other.RetType;
          }
          if (other.HasRetMsg) {
            RetMsg = other.RetMsg;
          }
          if (other.HasErrCode) {
            ErrCode = other.ErrCode;
          }
          if (other.HasS2C) {
            MergeS2C(other.S2C);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasRetType = input.ReadInt32(ref result.retType_);
                break;
              }
              case 18: {
                result.hasRetMsg = input.ReadString(ref result.retMsg_);
                break;
              }
              case 24: {
                result.hasErrCode = input.ReadInt32(ref result.errCode_);
                break;
              }
              case 34: {
                global::Futu.OpenApi.Pb.QotGetIpoList.S2C.Builder subBuilder = global::Futu.OpenApi.Pb.QotGetIpoList.S2C.CreateBuilder();
                if (result.hasS2C) {
                  subBuilder.MergeFrom(S2C);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                S2C = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasRetType {
          get { return result.hasRetType; }
        }
        public int RetType {
          get { return result.RetType; }
          set { SetRetType(value); }
        }
        public Builder SetRetType(int value) {
          PrepareBuilder();
          result.hasRetType = true;
          result.retType_ = value;
          return this;
        }
        public Builder ClearRetType() {
          PrepareBuilder();
          result.hasRetType = false;
          result.retType_ = -400;
          return this;
        }
        
        public bool HasRetMsg {
          get { return result.hasRetMsg; }
        }
        public string RetMsg {
          get { return result.RetMsg; }
          set { SetRetMsg(value); }
        }
        public Builder SetRetMsg(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRetMsg = true;
          result.retMsg_ = value;
          return this;
        }
        public Builder ClearRetMsg() {
          PrepareBuilder();
          result.hasRetMsg = false;
          result.retMsg_ = "";
          return this;
        }
        
        public bool HasErrCode {
          get { return result.hasErrCode; }
        }
        public int ErrCode {
          get { return result.ErrCode; }
          set { SetErrCode(value); }
        }
        public Builder SetErrCode(int value) {
          PrepareBuilder();
          result.hasErrCode = true;
          result.errCode_ = value;
          return this;
        }
        public Builder ClearErrCode() {
          PrepareBuilder();
          result.hasErrCode = false;
          result.errCode_ = 0;
          return this;
        }
        
        public bool HasS2C {
         get { return result.hasS2C; }
        }
        public global::Futu.OpenApi.Pb.QotGetIpoList.S2C S2C {
          get { return result.S2C; }
          set { SetS2C(value); }
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetIpoList.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = value;
          return this;
        }
        public Builder SetS2C(global::Futu.OpenApi.Pb.QotGetIpoList.S2C.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasS2C = true;
          result.s2C_ = builderForValue.Build();
          return this;
        }
        public Builder MergeS2C(global::Futu.OpenApi.Pb.QotGetIpoList.S2C value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasS2C &&
              result.s2C_ != global::Futu.OpenApi.Pb.QotGetIpoList.S2C.DefaultInstance) {
              result.s2C_ = global::Futu.OpenApi.Pb.QotGetIpoList.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
          } else {
            result.s2C_ = value;
          }
          result.hasS2C = true;
          return this;
        }
        public Builder ClearS2C() {
          PrepareBuilder();
          result.hasS2C = false;
          result.s2C_ = null;
          return this;
        }
      }
      static Response() {
        object.ReferenceEquals(global::Futu.OpenApi.Pb.QotGetIpoList.Descriptor, null);
      }
    }
    
    #endregion
    
  }
}

#endregion Designer generated code
